@menu-width: 160px;
@menu-height: 270px;
@fonts: Verdana,Helvetica,arial,sans-serif;
@font-size: 16px;

.size(@w: undefined, @h: undefined) {
  .test();
  .test() when not (@w = undefined) {
    width: @w;
  }
  .test() when not (@h = undefined) {
    height: @h;
  }
}

.max-size(@w: undefined, @h: undefined) {
  .test();
  .test() when not (@w = undefined) {
    max-width: @w;
  }
  .test() when not (@h = undefined) {
    max-height: @h;
  }
}

.full-width {
  .size(@w: 100%);
}

.full-height {
  .size(@h: 100%);
}

.full-size {
  .full-width;
  .full-height;
}

.full-max-width {
  .max-size(@w: 100%);
}

.full-max-height {
  .max-size(@h: 100%);
}

.full-max-size {
  .full-max-width;
  .full-max-height;
}

.position(@l: undefined, @r: undefined, @t: undefined, @b: undefined) {
  .test();
  .test() when not (@l = undefined) {
    left: @l;
  }
  .test() when not (@r = undefined) {
    right: @r;
  }
  .test() when not (@t = undefined) {
    top: @t;
  }
  .test() when not (@b = undefined) {
    bottom: @b;
  }
}

.position-prefix(@l: undefined, @r: undefined, @t: undefined, @b: undefined, @all: undefined, @prefix) {
  .test();
  .test() when not (@l = undefined) {
      @{prefix}-left: @l;
  }
  .test() when not (@r = undefined) {
      @{prefix}-right: @r;
  }
  .test() when not (@t = undefined) {
      @{prefix}-top: @t;
  }
  .test() when not (@b = undefined) {
      @{prefix}-bottom: @b;
  }
  .test() when not (@all = undefined) {
      @{prefix}: @all;
  }
}

.padding(@l: undefined, @r: undefined, @t: undefined, @b: undefined, @all: undefined) {
  .position-prefix(@l, @r, @t, @b, @all, padding);
}

.margin(@l: undefined, @r: undefined, @t: undefined, @b: undefined, @all: undefined) {
  .position-prefix(@l, @r, @t, @b, @all, margin);
}

.border(
  @l: undefined, @r: undefined, @t: undefined, @b: undefined,
  @all: undefined, @rad: undefined, @color: undefined, @spac: undefined
) {
  .test();
  .position-prefix(@l, @r, @t, @b, @all, border);
  .test() when not (@rad = undefined) {
      border-radius: @rad;
  }
  .test() when not (@color = undefined) {
    border-color: @color;
  }
  .test() when not (@spac = undefined) {
    border-spacing: @spac;
  }
}

.no-padding {
  .padding(@all: 0);
}

.no-margin {
  .margin(@all: 0);
}

.no-border {
  .border(@all: 0);
}

.full {
  .full-size;
  .no-padding;
  .no-margin;
}

.background(@all: undefined, @size: undefined, @pos: undefined, @re: undefined, @clip: undefined, @image: undefined, @color: undefined) {
  .test();
  .test() when not (@size = undefined) {
      background-size: @size;
  }
  .test() when not (@pos = undefined) {
      background-position: @pos;
  }
  .test() when not (@re = undefined) {
      background-repeat: @re;
  }
  .test() when not (@clip = undefined) {
      background-clip: @clip;
  }
  .test() when not (@image = undefined) {
    background-image: @image;
  }
  .test() when not (@color = undefined) {
    background-color: @color;
  }
  .test() when not (@all = undefined) {
      background: @all;
  }
}

.text(@size: undefined, @color: undefined, @align: undefined, @deco: undefined, @weight: undefined) {
  .test();
  .test() when not (@size = undefined) {
    font-size: @size;
  }
  .test() when not (@color = undefined) {
    color: @color;
  }
  .test() when not (@align = undefined) {
    text-align: @align;
  }
  .test() when not (@deco = undefined) {
    text-decoration: @deco;
  }
  .test() when not (@weight = undefined) {
    font-weight: @weight;
  }
}

.text-center {
  .text(@align: center);
}

.autoprefix-some(@name, @t) {
  -webkit-@{name}: @t;
  -moz-@{name}: @t;
  -o-@{name}: @t;
  -ms-@{name}: @t;
    @{name}: @t;
}

.autoprefix-transition(@t) {
  .autoprefix-some(transition, @t);
}

.autoprefix-transform(@t) {
  .autoprefix-some(transform, @t);
}

.autoprefix-animation(@t) {
  .autoprefix-some(animation, @t);
}

@font-face {
  font-family: 'icomoon';
  src:    url('../font/icomoon.eot?c8cymx');
  src:    url('../font/icomoon.eot?c8cymx#iefix') format('embedded-opentype'),
  url('../font/icomoon.ttf?c8cymx') format('truetype'),
  url('../font/icomoon.woff?c8cymx') format('woff'),
  url('../font/icomoon.svg?c8cymx#icomoon') format('svg');
  font-weight: normal;
  font-style: normal;
}


.icon-font-family {
  font-family: 'icomoon' !important;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
