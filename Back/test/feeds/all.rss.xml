<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title>dtysky|一个行者的轨迹</title>
<link>http://dtysky.moe</link><description>自由地看待世界，真诚地走向死亡</description><atom:link href="http://dtysky.moe/test/feeds/test/feeds/all.rss.xml" rel="self"></atom:link>
<lastBuildDate>Wednesday, 05 Oct 2016 00:48:15 -00:00</lastBuildDate>

<item>
<title>【短篇小说】弗莱士-雏末-S1-α</title>
<link>http://dtysky.moe/article/Art-弗莱士-雏末-S1-α</link>
<description>&lt;p&gt;校园青春恋爱剧写作训练。  &lt;/p&gt;
&lt;p&gt;世界：平凡。&lt;br /&gt;
世界线：1。&lt;br /&gt;
人物：弗莱士.斯代达斯特，月雏末，莱特.斯代达斯特。&lt;br /&gt;
情节：Scene1，弗莱士视角。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;“走廊总是显得这么长，即便不是真的那么长，但也让人感觉很长。”&lt;br /&gt;
“走廊总是显得这么长，即便不是真的那么长，但也让人感觉很长。”   &lt;/p&gt;
&lt;p&gt;弗莱士默念着这些句话，走在不是那么长的走廊中。他的呼吸有些局促，低头看着地板，就像是被围困在笼中的猛兽一般，想要有所行动却又无可奈何。  &lt;/p&gt;
&lt;p&gt;“走廊一般并不会显得这么长，不过在有些时候，的确会让人感觉很长。”  &lt;/p&gt;
&lt;p&gt;一边是错落有致的教室，一边是透过夕阳的余晖的窗户——被这余晖裹上了一层蜂蜜的走廊之中，有一头被逃避着目光的男孩子和一个与其并肩的女孩子。  &lt;/p&gt;
&lt;p&gt;“嗯？难道我又...”弗莱士停了下来，用一只手摸了摸自己的与其他人明显不同的金发，不好意思地看着女孩子。  &lt;/p&gt;
&lt;p&gt;“你总是这样，要学会把话藏在心里啊。”女孩子的声音被这层蜂蜜所浸润，温婉动人。虽然比身边的他低了一个头，在二人相处时却活脱脱一副大姐姐的样子。  &lt;/p&gt;
&lt;p&gt;“嗯，我会注意的。”  &lt;/p&gt;
&lt;p&gt;他们继续向前走着。对于弗莱士来说，这个走廊很长，对于女孩子来说，这个走廊也很长。但无论是谁，都并不会因此而对这个走廊产生埋怨——从心理增加走廊的长度是容易的，但从物理的角度却是不可能的，除非，他们减缓了各自的脚步。  &lt;/p&gt;
&lt;p&gt;而他们，就是这么做的。  &lt;/p&gt;
&lt;p&gt;“哥，雏末，你们干嘛呢？”&lt;br /&gt;
同样有着一头金发的男孩子从他们身后跑了出来，又从他们中间穿过，催促着他们。&lt;br /&gt;
“再这么下去就要赶不及了啊，爸预定的行程是今晚啊。”  &lt;/p&gt;
&lt;p&gt;“莱特...你...”弗莱士欲言又止，用复杂的眼神盯着他的弟弟。  &lt;/p&gt;
&lt;p&gt;“呃......”弗莱士将左右发散的视线聚集了起来，一齐送到了雏末的眼中。“雏末...我...”  &lt;/p&gt;
&lt;p&gt;“莱特说的对，快走吧，没时间了。”雏末的声音中那层蜂蜜的温暖褪去，为平淡所取代。&lt;br /&gt;
“谢谢你......”她缓缓转过了身，背对着二人向着反方向走去。  &lt;/p&gt;
&lt;p&gt;“我...！”弗莱士呆在原地，默默注视着雏末的背影。眼见她那适宜的秀发和身着发白的校服的瘦弱身躯在自己眼中越来越小，直到完全消失。&lt;br /&gt;
“为什么...”他想去追，脚下却如灌铅一般沉重，他想强行移动脚步，却被莱特阻挡。  &lt;/p&gt;
&lt;p&gt;“哥，我很抱歉，但这是必须的。”莱特拉住他哥的衣服，冷冷地陈述着。“我们虽然一样，但又差的太远，所以......”  &lt;/p&gt;
&lt;p&gt;“你懂什么！你什么都不懂！”弗莱士发出了这十八年来的第一声怒吼——这个笼中的猛兽比他周围的人类要胆小得多。  &lt;/p&gt;
&lt;p&gt;“我懂的......只是哥你觉得我什么都不懂。”莱特放低了身影，仿佛喃喃自语。  &lt;/p&gt;
&lt;p&gt;“不......”弗莱士停止了那种挣扎的趋势，静静站着。  &lt;/p&gt;
&lt;p&gt;“你是对的，你懂得太多了，我比不过你。”&lt;br /&gt;
“是么......那么，你也应该明白吧。”&lt;br /&gt;
“......”  &lt;/p&gt;
&lt;p&gt;二人都沉默了下来。稍许，莱特从书包中取出了一个笔记本，弗莱士一眼就认出了那个对他而言就如同海洋对于泰勒斯一般的存在。  &lt;/p&gt;
&lt;p&gt;“为什么你会拿着！”弗莱士一把抢过了笔记本，怒目圆睁，柠檬和酱油混杂在一起的味道从他的眼中释放出来，盖住了其外在的清新和不凡。  &lt;/p&gt;
&lt;p&gt;“......”莱特没有作出解释，他收回送出笔记本的右手，插回了兜里，走到窗边，望着远处。  “那么，哥你准备怎么做呢？”&lt;br /&gt;
“至少，有个像样的告别吧。”  &lt;/p&gt;
&lt;p&gt;“我......”&lt;br /&gt;
笔记本被打开了。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;扉页&lt;/h2&gt;
&lt;p&gt;那种甘甜让我沉醉，但我却只能沉醉于此。我从不挣扎，保持冷漠，拒绝逃离，在这浑浊的大海中随心而动。我一次又一次被自己所举起，又被自己所抛下。我也曾路过一些美好的小岛，但却从未踏上、甚至接近它们分毫。我只是远远地望着，望着，望着——在望着它们的美好的同时，也望着一个又一个不畏风雨登上它们的勇者。  &lt;/p&gt;
&lt;p&gt;我不懂，我的确不懂。感到遗憾？对，遗憾，确实不可能没有遗憾，但那又如何？  &lt;/p&gt;
&lt;p&gt;我只是望着，望着，望着。  &lt;/p&gt;
&lt;p&gt;望着那些勇者，不畏风雨，登上了那些小岛。  &lt;/p&gt;
&lt;p&gt;渐行渐远。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;2196.9.1，星期四&lt;/h2&gt;
&lt;p&gt;平稳如常，一年逝去。在学校时渴望假期，在放假时却渴望上学——这样应当存在于正常学生脑中的思维方式并不同样得存在于我的脑中。我并不渴望假期，所谓假期对于我，不过就是呆在那个物理尺寸远大于其实际尺寸的格子中，在那个不断被灌输着遵从和替补意识的地方中无聊和挣扎。  &lt;/p&gt;
&lt;p&gt;相比之下，我还是喜欢这个人气更浓一些的地方。  &lt;/p&gt;
&lt;p&gt;新学期自然需要与之相应的新气象，人还是那群人，而人的性格又不会跃变，那么这个“新”的重任便自然交由了环境——环境影响人，人再反过来影响环境，如此螺旋上升便会造成人的成长，这是一般人都会遵从的社会通则。  &lt;/p&gt;
&lt;p&gt;虽然一年的时间从人生的长度而言还是有些短，但作为从一个阶段向另一个阶段过度的间隙，凭借我自小被锻炼出的察言观色的“才能”，也还是可以得到颇多有趣的信息。  &lt;/p&gt;
&lt;p&gt;高一担任班长的小王，虽然在竞选时明显是凭借半吊子的勇气、自以为是的幽默感和满满的虚荣心，以及大多数同学那不想惹麻烦的心态下胜出的，但无论如何，经过这一年的锻炼，他的男子气概、领导力和谦逊的意识的确提高了不少。  &lt;/p&gt;
&lt;p&gt;劳动委员小红同学，得益于那娇小身板和这个职位先天的反差，她在一年中上演了无数出喜剧，虽然确实很危险，但好在她那不多却真诚的好友使其朝向了正确而非毁灭的方向发展。  &lt;/p&gt;
&lt;p&gt;文艺委员是小丽，那对任何事情任何人那一视同仁的热情，使她从一开始便完美得胜任了这个职位——直到她卸下自己的伪装为止。我还以为只有我们这种人才会去这样做呢，没想到还有更直接的，不过在那之后她也算有所改善了，也成长了。  &lt;/p&gt;
&lt;p&gt;不错，大家都在遵循着这种惯例逐渐成长，逐渐成熟，向着大学、向着社会、向着不断递增的无力感和试错成本所构造的绝望前进。  &lt;/p&gt;
&lt;p&gt;但凡事总有例外，虽说人大都会在某一时刻停止成长，但总有一些人停止的特别早，他们中有所谓“巨婴”，有所谓“少年老成”，也有所谓“揣着明白装糊涂”。  &lt;/p&gt;
&lt;p&gt;毫无例外，这样的人也隐匿于这个班级之中，在这一年中，有三个人几乎毫无变化：  &lt;/p&gt;
&lt;p&gt;我，弗莱士.斯代达斯特。&lt;br /&gt;
我的弟弟，莱特.斯代达斯特。&lt;br /&gt;
她，月雏末。  &lt;/p&gt;
&lt;p&gt;月雏末这个名字虽算是引人注目，但其外在却硬是将这个名字拉到了平凡以下。从不主动引人注目，任何一刻都可能淹没于人群之中——就是这样的一个女孩子，作为我的同桌与我一起度过了高中的第一年。而今天，作为和她分别后的上课的第一天，我似乎还有些不太适应。  &lt;/p&gt;
&lt;p&gt;我不知道是不是自己潜意识里想去这么做，但我的确会不时得将视线向她身上聚集——看着她和她现在的同桌莱特的日常交流。  &lt;/p&gt;
&lt;p&gt;她的确没有任何变化，去年是如何对待我的，今年就怎样对待莱特。转身时脑袋位置适度，看东西时眼睛大小适度，吐字时唇齿张合适度，捡物时弯腰幅值适度，一切都是适度的。那态度和与其呼应的表情、动作与一年前初次和我交谈时没有丝毫不同，就像是在执行一段早已固化的逻辑脚本。  &lt;/p&gt;
&lt;p&gt;“无趣的人，多么无趣的人啊”——一年中我无时不刻都在这么想。相对于周围那由形态各异的进化所构成的多彩的世界，她确实非常容易就会被淹没其中。  &lt;/p&gt;
&lt;p&gt;那么究竟为什么......  &lt;/p&gt;
&lt;p&gt;......  &lt;/p&gt;
&lt;p&gt;有点困了，今天先睡吧。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;2196.10.3，星期一&lt;/h2&gt;
&lt;p&gt;不，不对，不太正常。  &lt;/p&gt;
&lt;p&gt;已经无法忽视这种状况了。  &lt;/p&gt;
&lt;p&gt;一种无法消散的冲动一直萦绕在心间。无论身处什么场所，只要有可能，我的视线总是会在不经意间指向某处，就像是被一双温柔的手所遮盖，我的眼睛失去了观察真实世界的能力，就像是过去曾数次无意中触碰到的——她的那双手。  &lt;/p&gt;
&lt;p&gt;她分明很平凡，很适度，很无趣。那及肩的短发、整洁的校服、恰到好处的表情、以及那适当的声音，完全可以让她隐匿于人群之中而没有任何异样。  &lt;/p&gt;
&lt;p&gt;这样无趣的人，我为何要在意她？&lt;br /&gt;
我又是从何时开始在意她的？  &lt;/p&gt;
&lt;p&gt;我记不得何时，也不清楚为何。过去我也曾接触过许多女孩子，而她们都没有让我出现过如此奇妙的感觉。她究竟有怎样的魔力，能够让我陷入这样的一种状态？我不由自主得关注着她，关注着她的一举一动，就仿佛她是我的敌人，而我正在寻找她的破绽一样，我甚至有一种想法——她其实并不平凡，这种平凡只是她故意构造的一种伪装。  &lt;/p&gt;
&lt;p&gt;不，不会这样的，她这样的一个女孩子，怎么会这么有心机呢。&lt;br /&gt;
对，不会的，一定是还有什么地方没有发现，或许那才是我需要去关注的地方吧。  &lt;/p&gt;
&lt;p&gt;但我确实找不到这样的理由。难道仅仅是因为我和她坐了一年的同桌？不，应该不可能，同桌这种东西从小到大已经换过了无数个，都没有带来像这样的后遗症，并没有让我产生像现在一样的、久久萦绕于心的那种冲动。  &lt;/p&gt;
&lt;p&gt;那么是因为这一年间我有一些成长，而这些成长让我对“同桌”这种关系构变得敏感了吗？&lt;br /&gt;
不，不会的，“我”这个存在早就定型了。  &lt;/p&gt;
&lt;p&gt;但若不是这个，那又会是什么？&lt;br /&gt;
想不到，我从小所建构的知识体系里并没有能够解释它的存在。我不懂，不明白为什么她离开后，我会满脑子想的都是她那及肩的短发、整洁的校服、恰到好处的表情、以及那适当的声音。  &lt;/p&gt;
&lt;p&gt;......  &lt;/p&gt;
&lt;p&gt;哦，对，不是的，我想起来了。&lt;br /&gt;
一定是她身上那不易察觉的、木莲花的芳香，和偶尔露出的、不加修饰的微笑。  &lt;/p&gt;
&lt;p&gt;她一定有着什么不为人知的秘密吧，一定经常坐在木莲树下，独自游走于那一个又一个可爱的童话或者传说之中——若不是此，她又怎能展露出那样的笑容呢？  &lt;/p&gt;
&lt;p&gt;......&lt;/p&gt;
&lt;p&gt;我在想什么呢，就和那些三流小说里初恋的女孩子一样，我还会拥有那样的感情么。  &lt;/p&gt;
&lt;p&gt;算了算了，算了算了。  &lt;/p&gt;
&lt;p&gt;明天再说吧。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;2196.10.8，星期六&lt;/h2&gt;
&lt;p&gt;我以为时间可以解决这个问题，但果然还是太天真了。理性并不能简单地抑制冲动所带来的，精神和肉体的双重上扬。就像是一个空间的温度无法在没有外部调节的情况下跃变一般，我的情绪也只能从那样的一种恍惚不安逐渐归于平静——我是如此期望的。  &lt;/p&gt;
&lt;p&gt;但我失败了，只要我还存在于这间教室，不，只要我还存在于这个学校，只要地理无法将我们的气息完全隔绝，我就不可能平复下来。因为，无论我将自己的心境梳理得何等平和，将自己的呼吸压制到何等自然的状态，只要她向我看了一眼，不，只要我向她看了一眼，便会如同闯入敌营小心翼翼却在瞬间被发现的间谍一般，呼吸在极短的时间内就急促了起来。而与之相衬，我的脸红和心跳也随之到来，虽然从小的训练可以让我将其掩盖到常人所不可察觉的状态之下，但她的那双眼睛似乎总是能够看透我的想法——我一直都有这样的想法。  &lt;/p&gt;
&lt;p&gt;当然，这一切可能不过是我的臆想罢了。仔细想想，她也并没有对我表示过过多的关注，她朝我这边看、微笑的密度远不及班上的其他同学，而从她的视角而言，她对她现在的同桌——也是我的弟弟莱特的关注也远超于我。  &lt;/p&gt;
&lt;p&gt;那么，究竟是什么让我产生了这样的错觉呢？  &lt;/p&gt;
&lt;p&gt;我，一定是生病了。  &lt;/p&gt;
&lt;p&gt;很久之前，我曾从一个长辈那里听说过一句话，当时的我还小，所以没有任何的感觉。&lt;br /&gt;
但现在的我，似乎有了一些新的见解：  &lt;/p&gt;
&lt;p&gt;“人啊，多少都有点病，带着病坚强地活下去吧。”  &lt;/p&gt;
&lt;p&gt;病症既然是病症，自然就不能随意得表现出来，这个铁则早已烙入了我的价值观深处——如果我表露出来了，一定会觉得羞愧万分。  &lt;/p&gt;
&lt;p&gt;坚持下去，不要摊牌，这样对大家都好。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;2196.11.10，星期一&lt;/h2&gt;
&lt;p&gt;坐立不安，辗转难眠。  &lt;/p&gt;
&lt;p&gt;看来时间并不常常是良医。我的病症并没有得到减缓，与之相反，它越来越重，就像是试图击溃西西弗斯的那块大石头。  &lt;/p&gt;
&lt;p&gt;我这阵子状况很差，也为此受到了颇多的训斥——他们说我违背了来到这里的初衷，我明白的，但那是我的错吗？我不这样认为，因为，我的行为完全不受自己的掌控啊！  &lt;/p&gt;
&lt;p&gt;一个无法控制自己行为的人，是不需要被规则所约束的？对吧？  &lt;/p&gt;
&lt;p&gt;我的确没有摊牌，但也没有如预期一样停止。这一个月来，我总是在注意着她和莱特，我坐在他们后面时，视线中总是她洗的发白的校服所包裹的诱人的背；坐在侧面时，眼里又总是她洁净而平静的侧脸；即便是坐在前面，脑中也总是浮现出她那曾今偶然出现过的微笑，拜其所赐，我总是会无意识地转过头去——有时视线会被她的眼睛所捕捉到，我便立即收回我的视线，心则因为羞愧而波动了起来，我知道这样不好，但却无法停止，就像是上瘾了一般欲罢不能，对这种行为产生了依赖。我害怕着这种时刻，却又在渴望着这种时刻；我害怕被她所发现，又渴望着被她所发现；我想要将她遗忘，却又担心被她所遗忘。  &lt;/p&gt;
&lt;p&gt;我是多么自私啊，我从没有发现过自己是如此自私的一个人！  &lt;/p&gt;
&lt;p&gt;我再也忍受不了了，我要向她摊牌，只有这样才能让我得到解脱。  &lt;/p&gt;
&lt;p&gt;我厌恶这样的自己，厌恶这样什么都不做的自己。  &lt;/p&gt;
&lt;p&gt;不，不对，原先的我不就是什么都不做吗？我到底在厌恶什么？  &lt;/p&gt;
&lt;p&gt;难道我厌恶原先的自己？  &lt;/p&gt;
&lt;p&gt;对，一定是这样的。什么冻结，什么定位，都是虚假的，我必须要循着自己的内心，跟随由它的跳动所建构的美妙节奏。  &lt;/p&gt;
&lt;p&gt;改变，对，改变！  &lt;/p&gt;
&lt;p&gt;太初有道，太初有言，太初有思，太初有力，太初有为。  &lt;/p&gt;
&lt;p&gt;行动，刻不容缓！&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;2196.11.11，星期二&lt;/h2&gt;
&lt;p&gt;我摊牌了。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;2196.11.16，星期日&lt;/h2&gt;
&lt;p&gt;莱特说的没错，我不过是在自我满足而已。  &lt;/p&gt;
&lt;p&gt;那到底算什么？摊牌？还是半吊子的告白？  &lt;/p&gt;
&lt;p&gt;用冲动向对方发起进攻，让对方在慌乱中手足无措，却又在中途让对方忘了这件事。什么“你就当没听见过，就当没发生过吧”，这怎么可能！  &lt;/p&gt;
&lt;p&gt;那么，是一开始做出这种事情的我不对吗？我又有什么不对？我只是在用理所应当的方式来表达自己的感情而已，这不是一个正常人所应该做的的吗？  &lt;/p&gt;
&lt;p&gt;搞不懂，的确搞不懂，还有什么地方没有说清楚。&lt;/p&gt;
&lt;p&gt;嗯，有人敲门？  &lt;/p&gt;
&lt;p&gt;......  &lt;/p&gt;
&lt;p&gt;是莱特。那天他分明已经以“雏末拜托”为由和我有过前所未有的交流，为什么又来一次？难道他也喜欢雏末？  &lt;/p&gt;
&lt;p&gt;先不管这些了，无关紧要。  &lt;/p&gt;
&lt;p&gt;他说的没错，我不过是在自我满足而已。  &lt;/p&gt;
&lt;p&gt;并不了解雏末的我，有什么资格擅自做出这种会让她困扰的举动呢？但没有资格就不能去做了吗？伤害别人，取悦自己，侵入他人的权力领域，本就是一种本能。  &lt;/p&gt;
&lt;p&gt;不，不对，这并不是我的价值观。  &lt;/p&gt;
&lt;p&gt;是的，我应该进一步去了解她，去让“她”成为一个真正的有血有肉的人类，而不仅仅是我自身的期望的一个投射。  &lt;/p&gt;
&lt;p&gt;刻不容缓。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;2196.11.17，星期一&lt;/h2&gt;
&lt;p&gt;“怎么，哥，想做英雄？”&lt;br /&gt;
那个时候，莱特拉住脑子充斥着个人英雄主义的我，伴随着不含任何嘲讽意味的微笑向我提出了这个问题。而我则自然将他的这句话当成了嘲讽，并试图进一步使用暴力挣脱他的束缚，而就在这个时候，某件事情我停下来了。  &lt;/p&gt;
&lt;p&gt;我的视线再一次被她的眼睛捕捉到，只不过这一次和以往不同，我的身体并没有发热，心跳虽也加剧，但却全然不是由于喜悦——应当存在的喜悦被一种异样的恐惧所取代，这种恐惧将我全身的上涌的激素尽数稀释，我的身体也由于失去了这些燃料而完全僵住了。  &lt;/p&gt;
&lt;p&gt;她看着我，一如既往，唇齿通过微小和连贯的变换构造出了一个适当的弧度，脸部上所有的肌肉也都像是在配合这个弧度，自然地修建出了一个近乎完美的微笑——这个完美的微笑，和她正在遭受的暴力形成的巨大反差，让我冒起了冷汗。  &lt;/p&gt;
&lt;p&gt;当我反应过来之后，后背的衣服已经被这些冷汗所完全浸湿。随后是一阵歇斯底里的狂奔，我着魔一样地使出吃奶的力气狂奔着，只为从她的视线中消失。  &lt;/p&gt;
&lt;p&gt;“怎么，不做英雄了？”&lt;br /&gt;
莱特紧紧跟着落荒而逃的我，仅用一句话使我冷却了下来。当我停下转身后，出现的却并不是期望中的平日莱特那戴着面具的职业微笑，而是前所未有的真诚的双眼。我明白了，他是认真的，他是在认真地逼迫我思考。  &lt;/p&gt;
&lt;p&gt;他很清楚我的习惯，我也有自知之明。&lt;br /&gt;
我喜欢思考，却又恐惧思考。&lt;br /&gt;
我喜欢思考“自由”、“宇宙”、“正义”、“存在”这些大问题，却对于“现实”、“生活”这些具象的话题充满了恐惧。  &lt;/p&gt;
&lt;p&gt;不错，毫无疑问，我是想做英雄的，我并不害怕那个正在施暴的、失职的父亲，也并不可怜那个在一旁无动于衷的母亲，所以无论从武力上还是情理上，我都是有着相当的把握的——这是第一种思考方式的结果。  &lt;/p&gt;
&lt;p&gt;但她却笑了，不但没有因为暴力而痛苦，还露出了那样的表情，这种违反常理的行为让我不得不启用第二种思考方式。 &lt;br /&gt;
她为什么受到这样的对待？她又为什么会对我笑？她这么做的理由是什么？  &lt;/p&gt;
&lt;p&gt;“分析”这件事，我擅长。  &lt;/p&gt;
&lt;p&gt;从表象来看，她所遭受的行为毫无疑问是“家暴”。成长于这样一个恶劣环境的她，会在平常表现出那样恰当的行为也是自然的，通过表现自己的“乖巧”来免于更多的暴力是孩子的一种本能。而另一方面，长期在这种压抑的环境下生存的孩子，一般都会拥有强烈的自我毁灭倾向和潜在的对外毁灭意识，但这从她日常的行为中却没有丝毫体现。  &lt;/p&gt;
&lt;p&gt;这一点可以有四种解释。其一，她是圣人，所以即便受到了这样的痛苦，也仍然可以保持着善良的心，同时对未来仍然有着美好的期待；其二，她的家庭发生了某种复杂的变故，这种变故使得她的父母产生了性格上的骤变，所以她仍然会通过回想过去父母的爱来避开自己内心的冲动；其三，她已经坏掉了，日常生活中的一切行为都不过是过去习惯的自动化运转，可以看作一个没有灵魂的躯壳；其四，她很绝望，只是在一直撑着，等待那个她可以施以毁灭或者自我毁灭的人或者时机。  &lt;/p&gt;
&lt;p&gt;本着将人向着最坏的情况去想的习惯，解释三和解释四的组合自然在我的脑中浮现，这也可以完美解释她那个扭曲的微笑和我当时内心的恐惧——因为我窥见了她的秘密，所以要被她当成毁灭的对象了。  &lt;/p&gt;
&lt;p&gt;“心叶，你一定不懂吧。”&lt;br /&gt;
莱特用这句著名的对白打断了我的思考，随后用另一句话结束了对话：&lt;br /&gt;
“沉浸在自己的臆想时可以不顾一切付诸行动，看到现实便立即却步，不过，这次估计不会像以前那么顺利了。”  &lt;/p&gt;
&lt;p&gt;对，既然我已经窥见了她的秘密。&lt;br /&gt;
事情的运转恐怕就不是我所能把握的了。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;2196.11.20，星期四&lt;/h2&gt;
&lt;p&gt;书桌上放着一张纸条。&lt;br /&gt;
纸条方方正正，几个文字错落有致地浮在上面。&lt;br /&gt;
文字纤细而精致，仿佛随手一挥便可以拭去。&lt;br /&gt;
如此纤细，对我而言却有着无法言喻的重量。  &lt;/p&gt;
&lt;p&gt;“明天放学后，到天台来吧，放心，我有钥匙。”  &lt;/p&gt;
&lt;p&gt;果然，还是来了。&lt;br /&gt;
恐惧也好，期待也罢，在这三天中一直悬着的心终于落地。  &lt;/p&gt;
&lt;p&gt;是啊，事情怎么会这么简单就过去呢？从这三天她对我的态度来看就应当是如此——无论我何时望向她，她总是能精准得接住我的视线，并回以一个那天那个微笑的拷贝。这自然使我毛骨悚然，但不知为何，相比之前的那种适当的面无表情，我似乎更喜欢她的这个扭曲的微笑。  &lt;/p&gt;
&lt;p&gt;我到底在想什么？是因为她终于向我展露了真诚？&lt;br /&gt;
如果只是如此，我有为何会继续着那份恐惧？  &lt;/p&gt;
&lt;p&gt;多想无益，反正明天这时候，一切自然会揭开吧。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;2196.11.21，星期五&lt;/h2&gt;
&lt;p&gt;我是在六点的时候到达隔离楼内和天台的那个大门前的，那个时候距离放学已然过去了半个小时，也就是说，我迟到了。无论是出于避免外人耳目的目的，还是我单纯的犹豫徘徊，这个无法改变的事实都成功地在单纯的恐惧之中加入了一些愧疚，凭借着这份愧疚，我终于打开了大门——如她所言，大门没有上锁。  &lt;/p&gt;
&lt;p&gt;走过大门后，引入眼帘的是被夕阳渲染成的、火带一般的云，从这些云的间隙和边缘逃过的光蔓延到了地面，将鳞次栉比的建筑加以烘焙，使其变得像蛋糕一样松软，天台作为这些蛋糕中一体的表面，让人感到无比安心。  &lt;/p&gt;
&lt;p&gt;“很让人安心吧。”她的声音从一个角落传来，我循着这个声音走到了她的身边，坐了下来。  &lt;/p&gt;
&lt;p&gt;我们聊了很多，从当前美妙的风景到课堂中老师的风趣，从现代流行音乐到古典巴洛克，从消费级小说到现实主义文学，从朴素的生命哲学到荒诞的存在主义，从经验主义到功利主义。我惊讶于她知识面的广博，她则只是摇着手表明着自己的谦逊。  &lt;/p&gt;
&lt;p&gt;“你看到了吧，那天。”然而话题终于还是回到了这一点，尽管这是我们此次坐在这里的根本原因，我还是极其不愿意对其展开讨论。不过，似乎是由于方才的放松，我也不再对面前的这个女孩子产生之前的那种恐惧了。  &lt;/p&gt;
&lt;p&gt;“不错，那是你的父亲吧。”我用自然的语气这么回应着她，而她也立即给出了回应：“嗯......他们以前不是这样的。”然后给我讲述了她的过去：  &lt;/p&gt;
&lt;p&gt;她出生于一个小康之家，父亲是工程师，母亲是中学教师，父母为人都很好，也很疼她，所以算是有一个幸福的童年。然而在十岁那年，一场突如其来的车祸粉碎了这个家庭，虽然她最后无碍，但大额的治疗费用却让这个家庭负债累累。在家由原本的百平高层搬到现在的简陋老房子后，她父母的情绪也越来越不稳定，财政状况带来的压力需要一个释放的方式，而成长起来的她也自然成了最佳的对象，家暴随之而来。长期的暴力和营养不良，让她的身体变得现在这般脆弱，而治疗那些淤青和伤口的膏药则是她身上淡淡木莲花香的源头。并且正如我的分析，这种环境很快改变了她原本天真的性格，使她很快就学会了“适度”和“隐匿”。“人类的适应力还真是远远超出我的想象呢”——这样的一句话后，我们之间陷入了长长的沉默。  &lt;/p&gt;
&lt;p&gt;最终还是我先开了口，我向她道了歉，表明那天应该做出行动去帮助她，即便不是自己亲自上场，也要报警，让政府来解决这个问题。  &lt;/p&gt;
&lt;p&gt;“即便是看到了那样的微笑？”她的一句话让我哑口无言，在间歇后她开始了有理有据的分析：  &lt;/p&gt;
&lt;p&gt;“是你的话，一定会对我的那个笑容做出分析吧，最后的结论大概是‘这个女孩子已经坏掉了，被自我毁灭冲动、和毁灭她人意识强烈的她捉到的我，一定会被毁掉吧。’但并不是这样的哦，那个笑容只是提示你离开的信号罢了。我虽然有点不正常，但姑且还是向往着通过大学走向独立后的美好未来的，现实哪有动不动就坏掉啊、绝望的，总是有办法周转嘛，况且爸爸妈妈他们也是为了救我才这样的啊，我理应回报他们。而且，就算你当时出手或者报警又能如何呢？只要抚养关系不变，被激怒后的他们只会加重对我的暴力而已，如果他们被抓走，我又该去哪呢？福利设施，还是你来接济我？恐怕都还不如这个现状吧？总之，帮助我的心情我很感激啦，但这并不是一个好的做法呢。”  &lt;/p&gt;
&lt;p&gt;她笑了，笑的很自然，全然没有那种做作的“适当”，看得出来是发自真心的。我紧绷的神经也终于松了下来，喜悦完全压过了恐惧，无论怎么说，我这算是和她有共同秘密了。当然，她也和莱特说过这些，不过就她而言说的没这么详细，当我问道为什么时，她的回应是：  &lt;/p&gt;
&lt;p&gt;“他和我们是不同的。”  &lt;/p&gt;
&lt;p&gt;不错，她说了“我们”，这是我压在心里的那个冲动再次被挖掘出来，几乎要使某句话脱口而出，但却立马被察觉到的她阻止了：  &lt;/p&gt;
&lt;p&gt;“我知道的，但是，现在不合适。”&lt;br /&gt;
“到了那个时刻，我会等着你的这句话的。”  &lt;/p&gt;
&lt;p&gt;我期待着那个时刻。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;弗莱士翻看着日记，过去的记忆历历在目，他的目光在前年十一月二十一号这天多停留了一段时间，接着喃喃自语：  &lt;/p&gt;
&lt;p&gt;“‘那个时刻’究竟是什么时刻。”  &lt;/p&gt;
&lt;p&gt;紧接着，他便带着这个疑问翻到了下一页，而就在这个时候，一张纸条从夹层落下，掉到了地上。他迅速捡起了纸条，上面的信息让他心头一紧：&lt;/p&gt;
&lt;p&gt;“放学后到天台来吧，放心，我有钥匙。”  &lt;/p&gt;
&lt;p&gt;这是多么熟悉的感觉，就像是将他直接将他带回了两年前的那天。那时，他兴奋又恐惧，不安却又充满着期待，内心的波动让他无法入眠。而这次，连一天一夜的等待都不再必要了，他离这最后的时刻只有咫尺。  &lt;/p&gt;
&lt;p&gt;“既然都打开了，为什么不看完呢？”莱特靠在走廊的窗前，挡在了弗莱士和那温暖的光晕之间，随意抛出了一个问题。  &lt;/p&gt;
&lt;p&gt;“这是她让你做的？”弗莱士合上了书，将问题转回了莱特。  &lt;/p&gt;
&lt;p&gt;“当然，不然难道是哥你自己做的？”莱特缓缓走近了弗莱士，随后在他耳边低语：“怎么，不做英雄了吗？”  &lt;/p&gt;
&lt;p&gt;“你的目的到底是什么！？”弗莱士连忙后退，由于腿部支撑不稳摔到了地上，他的头向上抬起，直视着俯视他的莱特。  &lt;/p&gt;
&lt;p&gt;“我的目的？”莱特收起了营业式的微笑，皱起眉头无奈地摇了摇头。“‘你们’和我，是不同的吧。”  &lt;/p&gt;
&lt;p&gt;言罢，莱特弯下腰，向弗莱士伸出了手。  &lt;/p&gt;
&lt;p&gt;“你...难道...看过了！？”弗莱士没有回应莱特友好的举措，而是用冷峻的目光盯着他。  &lt;/p&gt;
&lt;p&gt;“对啊，所以呢？”&lt;br /&gt;
“你！”  &lt;/p&gt;
&lt;p&gt;弗莱士甩开了莱特的手，站了起来，接下来的话语中满含着怒气：“我认识的弟弟可不是这样的人！”    &lt;/p&gt;
&lt;p&gt;“即便不看，我也是知道的。”友善之举虽未被领情，但莱特还是非常关心他这个哥哥：“我说过吧，只是你以为我什么都不知道......”  &lt;/p&gt;
&lt;p&gt;“既然知道，为什么不去帮她？你的方法应该比我多得多啊！”弗莱士全然放弃了自己平日的幻象，几乎是咆哮着说出了这句话。  &lt;/p&gt;
&lt;p&gt;“呵呵。”莱特似乎在笑，但脸上挂着的却是愧疚和无奈：“‘你们’和我，是不同的吧。”  &lt;/p&gt;
&lt;p&gt;“所以这个所谓的‘不同’，到底是什么啊！”弗莱士终于承认了——他根本不懂雏末那句话真正的含义。  &lt;/p&gt;
&lt;p&gt;“果然啊，‘心叶，你一定不懂吧’——从未站在对方的角度去考虑，又怎会懂呢。”&lt;br /&gt;
“为什么她能吸引你，为什么你又会被她视为‘相同’，你在那之后的两年中难道没有一点察觉么。”&lt;br /&gt;
“那次春游，你们在小溪边看到一只被蜘蛛网困住的蝴蝶，不顾老师那番‘自然规律’的大道理去救助它时。”&lt;br /&gt;
“某个夏夜，和你们初次互相坦然一样，并且更加严重地违反校规在天台眺望星空时。”&lt;br /&gt;
“秋天的一日，在被红叶覆盖的公园中淋着细雨缓慢穿行时。”&lt;br /&gt;
“冬日大雪，不在屋内取暖却拖着弱不经风的身体在一片白色里堆着雪人时。”&lt;br /&gt;
“你都没有一丝察觉么？”&lt;br /&gt;
莱特缓缓开口，将他们三人在两年间的点点滴滴逐条列举出来。  &lt;/p&gt;
&lt;p&gt;“察觉？考虑？这难道不是因为我们是朋友吗？”弗莱士皱起了眉头，思索着莱特言语中的含义。  &lt;/p&gt;
&lt;p&gt;“朋友，哈哈哈！哈哈哈哈！”莱特放下了矜持，发出了三年间唯一的一次大笑。“哥，你果然还是没变啊。”  &lt;/p&gt;
&lt;p&gt;“你什么意思？”弗莱士被这突如其来的嘲笑吓了一跳，方才的不解似乎进一步加重了。  &lt;/p&gt;
&lt;p&gt;“沉浸在自己的臆想时可以不顾一切付诸行动，看到现实便立即却步。”&lt;br /&gt;
“你在每一次和她见面，和她出行时，真的没有进一步考虑过吗？”&lt;br /&gt;
“还是说，一直在自欺欺人而已呢？”&lt;br /&gt;
莱特仍然带着笑意，但表情之下的意味已然十分明显。  &lt;/p&gt;
&lt;p&gt;“我自欺欺人？开什么玩笑？”&lt;br /&gt;
“一直尽力配合她，为她着想，一遍又一遍去满足她的要求，我有什么错？”&lt;br /&gt;
“我哪一点自欺欺人了？？？我问心无愧！”&lt;br /&gt;
弗莱士的声音提高了几个分贝，像是在召集楼道的回声，来作为群众支持自己的论据一般。  &lt;/p&gt;
&lt;p&gt;“是你在满足她，还是她在满足你呢？”但莱特仅仅用如此平淡的一句话，便盖过弗莱士的风头。“那些‘需求’被满足后，对她造成的后果，你不会没有想过吧。”   &lt;/p&gt;
&lt;p&gt;“‘你’，不会没有想过吧？”  &lt;/p&gt;
&lt;p&gt;“我......”弗莱士哑口无言。&lt;br /&gt;
“不...我...”他想说些什么，但却思维混乱，心神不宁，以至于无法组织起一句完整的话语。  &lt;/p&gt;
&lt;p&gt;“孤独的二人，害怕被人伤害，所以活得小心翼翼。”&lt;br /&gt;
“却又厌恶这样的自己，想要活得真诚一些。”&lt;br /&gt;
“双方相遇后，欣喜若狂。”&lt;br /&gt;
“所以立即将期望中的自己，投射到对方的身上，随之爱上那样的自己。”&lt;br /&gt;
莱特回到了窗边，重新将目光投向了窗外的夕阳。  &lt;/p&gt;
&lt;p&gt;“你到底什么意思......”&lt;br /&gt;
弗莱士已经完全失去了接下话题的底气，只能呆呆望着莱特的后背。  &lt;/p&gt;
&lt;p&gt;“去吧，不要让女孩子等太久。”&lt;br /&gt;
“但是...你，不是要阻止我么。”  &lt;/p&gt;
&lt;p&gt;“阻止你的是你的‘弟弟’，不是‘我’。”&lt;br /&gt;
莱特留下这句话，扬长而去。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;夏日大三角，南北十字星，煤袋中的天国。&lt;br /&gt;
黄昏早已逝去，夜晚悄悄到来。  &lt;/p&gt;
&lt;p&gt;弗莱士目视莱特离开后，踟蹰了许久。走上台阶，望着螺旋的终点，踟蹰了许久。来到天台的门前，意识恍惚，踟蹰了许久。  &lt;/p&gt;
&lt;p&gt;他踟蹰了许久，打开了门，而门外的景象与预期的显著差异，让他花费巨大时间才平复下来的心境再一次起了波澜。但事已至此，他也早已无法回头。  &lt;/p&gt;
&lt;p&gt;他越过了门槛，随后将门关上。夜晚楼顶的风给门提供了一个助力，让其在闭合的瞬间发出了巨大的声响。随后，站在天台边缘的雏末回头看了弗莱士一眼。  &lt;/p&gt;
&lt;p&gt;“这次比上次，要迟了许多啊。”弗莱士看不清雏末的表情，只是隐约觉得她在笑。  &lt;/p&gt;
&lt;p&gt;“上次？哦，你说上次啊。”弗莱士缓缓走向雏末身边的位置，接着说道：“那时候你可是躲在那个角落吧，这次不需要了？”  &lt;/p&gt;
&lt;p&gt;“嗯，因为现在是夜里。”雏末转过了身，接着深处右手，指向了自己前方的某处：“能站在那里吗？”  &lt;/p&gt;
&lt;p&gt;“嗯？没问题。”弗莱士虽然有些疑惑，但还是按照雏末的指示做了，站到那个位置后，他道了歉：“抱歉，明明是你的邀请......”  &lt;/p&gt;
&lt;p&gt;“我......？”雏末也表现出了疑惑，但这仅仅发生在一瞬间：“原来如此...嗯，明明是我的邀请，你却再次迟到了呢。”  &lt;/p&gt;
&lt;p&gt;弗莱士现在得以看清她的面容，她的确在笑，而且是发自真心的微笑，像是对亲密无间的情人那样毫无防备。  &lt;/p&gt;
&lt;p&gt;“还记得我们上一次来到这里吗？我，你，还有莱特三人。”  &lt;/p&gt;
&lt;p&gt;“啊，当然，那天你回去后肯定受到了不小的苦吧...毕竟第二天...”受到之前莱特发言的影响，弗莱士首先联想到的是这个。  &lt;/p&gt;
&lt;p&gt;“我还是第一次用天文望远镜这么直接地看星星呢。”雏末像是没有听见弗莱士的回应，自顾自言地说了下去：“那时候我就在想，这一切，是不是一场梦呢。你们会不会都是我在梦中的、期望的投影......”  &lt;/p&gt;
&lt;p&gt;“不是的！”弗莱士一声咆哮，打断了雏末的发言。“这的确就是现实啊，我们都是真实存在的，不是吗？”  &lt;/p&gt;
&lt;p&gt;“嗯，我知道的，我知道的。”雏末拿出了一把美工刀，将刀刃对准了自己的指尖。  &lt;/p&gt;
&lt;p&gt;“雏末...你...想干什么？”弗莱士一脸错愕，望着雏末不知所措。  &lt;/p&gt;
&lt;p&gt;“因为，你看，会疼嘛。”雏末将美工刀的末端向前用力一推，短短的几秒内，刀刃上便沾染了血迹。“好疼，好疼，好疼啊...果然，无论忍受过多少次，疼还是会疼啊！”  &lt;/p&gt;
&lt;p&gt;“喂！”弗莱士连忙摆出了架势，想跑到雏末身边去制止她。  &lt;/p&gt;
&lt;p&gt;“不要动！”雏末将刀刃指向更加致命的部位，借此使弗莱士停了下来。  &lt;/p&gt;
&lt;p&gt;“为什么...为什么会变成这样...”弗莱士目瞪口呆，僵在原地。此刻的他距离雏末更近了，也得以看清她再次复现的那个扭曲的微笑。  &lt;/p&gt;
&lt;p&gt;“弗莱士，你，疼吗？”雏末吮吸着自己被划破的指尖，用关切的态度询问着弗莱士。  &lt;/p&gt;
&lt;p&gt;“我...疼...不...我...”弗莱士意识到，此刻的他连谎言都说不出了。  &lt;/p&gt;
&lt;p&gt;“不是哦，那不是什么谎言，因为你就是我，我就是你嘛。”雏末的眼神中充满着溺爱，就像是在看镜中打扮得漂漂亮亮的自己。  &lt;/p&gt;
&lt;p&gt;“你到底在说什么啊，今天的你很奇怪啊！”&lt;br /&gt;
“你真的不懂吗？如果不懂，又为什么会来到这里呢？”  &lt;/p&gt;
&lt;p&gt;“因为...雏末你...”就连简单的话语也变得吞吞吐吐。  &lt;/p&gt;
&lt;p&gt;“哈哈...为什么要害怕呢，是因为我不再符合你的期望了，还是不加修饰得太符合你的期望了呢？”雏末扔掉了美工刀，将已经不再流血的手踹到了兜中，身板挺直，头向着一侧微微一斜，同时将双眼合上了少许，全然变成了另一个人。&lt;br /&gt;
“哼，这帮渣滓。”她的声音中充斥着倦怠、傲慢、戏谑，却又似乎参杂着些许的悲哀和自嘲。  &lt;/p&gt;
&lt;p&gt;“雏末...为什么...为什么...你...”如果这是战场，弗莱士恐怕早已成为逃兵，但这不是战场，所以他也无处可逃。  &lt;/p&gt;
&lt;p&gt;“哼~我学的像吗？”雏末闭上了一只眼，撒起了娇。&lt;br /&gt;
“很像吧......”却又转眼露出了悲哀的神情：“因为，这就是我，这就是你啊。”  &lt;/p&gt;
&lt;p&gt;“呃......”弗莱士的大脑传来了一阵剧烈的眩晕感，他捂着脑袋，跪了下来。  &lt;/p&gt;
&lt;p&gt;“区区虫子还想逃脱被捕杀的命运，太不自量力了，还是由我这种伟大的人类来拯救你吧~”&lt;br /&gt;
“何等壮丽的星空！碌碌无为而可怜的大众啊，这是上天赐予我的独宴！”&lt;br /&gt;
“你们现在是很美丽，但这终究不过是回光返照罢了，就算化为那火一般的姿态，倘若没有我来观赏，又能价值几何呢？”&lt;br /&gt;
“大雪算个屁，你们这些懦夫，这点温度都受不了？！”  &lt;/p&gt;
&lt;p&gt;“不要再说了，不要再说了！”  &lt;/p&gt;
&lt;p&gt;“看着我吧，崇拜我吧，我是天之骄子！”&lt;br /&gt;
“看着我啊，我才不寂寞，我只是不愿意和它、和你们和解而已！”  &lt;/p&gt;
&lt;p&gt;“雏末......”弗莱士发出了痛苦的呻吟。  &lt;/p&gt;
&lt;p&gt;“雏末...不要再说了！我...不要再说了！”&lt;br /&gt;
“对吧。”雏末已经走到了弗莱士身边，伸出双臂环抱着弗莱士的头，轻轻抚摸着。  &lt;/p&gt;
&lt;p&gt;“......”  &lt;/p&gt;
&lt;p&gt;“揣着明白装糊涂，很不是滋味吧？”雏末终于恢复了平日的那种恬静的姿态，言语之间也重归了那种温柔：“那么，你觉得，我为什么会吸引你呢？”  &lt;/p&gt;
&lt;p&gt;“我...我想做英雄......”弗莱士没有丝毫抗拒，就这样吐露了真心。  &lt;/p&gt;
&lt;p&gt;“坦诚才是好孩子嘛。”&lt;br /&gt;
“不过，将自己打造成魔王由自己打倒这种离奇的故事，只会存在于梦中呢。”  &lt;/p&gt;
&lt;p&gt;“我知道......”&lt;br /&gt;
“我知道的......”  &lt;/p&gt;
&lt;p&gt;“这个梦，也差不多也要结束了。”&lt;br /&gt;
“这个最后的BOSS，这种反转的桥段，你还满意吗？”&lt;br /&gt;
“但可惜，这次的英雄并没有一个幸福的结局。”  &lt;/p&gt;
&lt;p&gt;“不......”&lt;br /&gt;
“不对......”&lt;br /&gt;
“不对！不对！不对！不对！不对！不对！不对！不对！不对！不对！不对！不对！不对！不对！”   &lt;/p&gt;
&lt;p&gt;弗莱士挣脱了雏末的拥抱，猛地一下立起。&lt;br /&gt;
“我不会让它就这样结束的！”&lt;br /&gt;
紧接着，他抓住了雏末那只受伤的手。&lt;br /&gt;
“我还有，还有最后的手段——只要，只要搭上那座列车。”&lt;br /&gt;
他拉着雏末，走向了天台的边缘。   &lt;/p&gt;
&lt;p&gt;“原来如此，他果然，完全看透了我们。”&lt;br /&gt;
作为回应，雏末也牢牢握住了弗莱士的手。&lt;br /&gt;
“我们，我，直到最后，也还是要别人陪着啊。”&lt;br /&gt;
她紧紧跟着弗莱士，没有丝毫迟疑。&lt;br /&gt;
“人家明明还期待着进入大学后的崭新人生，期待着你来迎娶我呢。”  &lt;/p&gt;
&lt;p&gt;他们停下了前进的脚步，再一步便是另一个世界。  &lt;/p&gt;
&lt;p&gt;但就在此时，他们的身后却传来了由大门所奏起的鸣笛声和将其作为伴奏的词：  &lt;/p&gt;
&lt;p&gt;“列车进站，请客人注意。”&lt;br /&gt;
“本次列车停靠，南十字星，夏日大三角，北十字星，煤袋星团......”&lt;br /&gt;
“什么的~”&lt;br /&gt;
“醒醒，年轻人。”&lt;br /&gt;
“和解吧。”&lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">命月天宇</dc:creator>
<pubDate>Thursday, 18 Aug 2016 21:00:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2016.08.18 21:00:article/Art-弗莱士-雏末-S1-α</guid>
<category>小说</category>
<category>短篇</category>
<category>校园青春</category>
<category>恋爱</category>
<category>弗莱士</category>
<category>雏末</category>
<category>莱特</category>
<category>梦见星空之诗</category>
</item>

<item>
<title>【CSAPP】笔记-Cp3-3-控制与过程数据存储</title>
<link>http://dtysky.moe/article/Skill-2016_07_04_a</link>
<description>&lt;p&gt;CSAPP（深入理解计算机系统）第三章“程序的机器级表示”第二部分“控制、过程、和数据存储”的笔记和课后习题。 &lt;br /&gt;
&lt;a href=&amp;quot;https://github.com/dtysky/CSAPP&amp;quot;&gt;Github的同步工程在这&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;控制&lt;/h2&gt;
&lt;p&gt;汇编中使用控制语句来实现线性程序之外的跳转、选择等功能。 &lt;/p&gt;
&lt;h3&gt;条件码&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;条件码&lt;/strong&gt;用于表示一些CPU最近的状态，它们被存在一个单独的&lt;strong&gt;条件寄存器&lt;/strong&gt;中，它们是：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CF：进位标志，最近操作发生了进位，可以检查无符号数的溢出。&lt;br /&gt;
ZF：零标志，最近操作结果为0。&lt;br /&gt;
SF：符号标志，最近操作的结果为负数。&lt;br /&gt;
OF：溢出标志，最近操作导致补码溢出。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要注意的是，&lt;code&gt;lea&lt;/code&gt;系列指令不会不会改变这些标志，因为它本质上不是ALU运算而是地址运算；&lt;code&gt;inc&lt;/code&gt;和&lt;code&gt;dec&lt;/code&gt;会设置溢出标志但不会设置进位标志等......   &lt;/p&gt;
&lt;p&gt;还有一些特殊的指令只改变条件码而不发生实际运算，比如&lt;code&gt;test&lt;/code&gt;、&lt;code&gt;cmp&lt;/code&gt;，前者对应&lt;code&gt;sub&lt;/code&gt;、后者对应&lt;code&gt;and&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;要访问这些条件码，有一系列的&lt;code&gt;set d&lt;/code&gt;指令被提供，其中&lt;code&gt;d&lt;/code&gt;是单字节寄存器，这组指令直接利用条件码去做出一些常用的判断，比如&lt;code&gt;setge d&lt;/code&gt;相当于给&lt;code&gt;d&lt;/code&gt;赋予&lt;code&gt;~(SF ^ OF)&lt;/code&gt;，即前一个运算的两个操作数是否存在大于关系。  &lt;/p&gt;
&lt;h3&gt;跳转&lt;/h3&gt;
&lt;p&gt;跳转指令&lt;code&gt;jmp .L&lt;/code&gt;和&lt;code&gt;jmp *e*&lt;/code&gt;会导致程序在执行时切换到另一个位置。前一种方式中，它的参数&lt;code&gt;L&lt;/code&gt;是一个&lt;strong&gt;标示符&lt;/strong&gt;，这个标示符类似于高级语言中的函数名，用于标示一段程序的开始，汇编中就是用这种方式来管理子程序的；后一种方式中，它的参数&lt;code&gt;e&lt;/code&gt;是一个寄存器或者以寄存器为地址的&lt;code&gt;(%eax)&lt;/code&gt;这种存储器的值，这些值将会给当做跳转地址。&lt;br /&gt;
还有一些跳转叫做&lt;strong&gt;条件跳转&lt;/strong&gt;，它们是基本跳转语句的特化版本，比如&lt;code&gt;je&lt;/code&gt;就是当&lt;code&gt;ZF&lt;/code&gt;位为1时跳转之类的。它们也是高级语言条件语句的基础。  &lt;/p&gt;
&lt;p&gt;至于C语言的条件语句翻译成汇编，一般都是先开一个条件跳转语句，然后后面更上else的内容。&lt;/p&gt;
&lt;h3&gt;循环&lt;/h3&gt;
&lt;p&gt;循环语句在C中有&lt;code&gt;do-while&lt;/code&gt;、&lt;code&gt;while&lt;/code&gt;和&lt;code&gt;for&lt;/code&gt;，太基础就不细说了。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;do-while&lt;/code&gt;它们可以对应汇编中的&lt;code&gt;goto&lt;/code&gt;和条件跳转指令的组合，像是：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;nl&amp;quot;&gt;loop:&lt;/span&gt;
    &lt;span class=&amp;quot;nf&amp;quot;&gt;xxx&lt;/span&gt;
    &lt;span class=&amp;quot;nf&amp;quot;&gt;je&lt;/span&gt; &lt;span class=&amp;quot;no&amp;quot;&gt;next&lt;/span&gt;
    &lt;span class=&amp;quot;nf&amp;quot;&gt;goto&lt;/span&gt; &lt;span class=&amp;quot;no&amp;quot;&gt;loop&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;while&lt;/code&gt;和&lt;code&gt;do-while&lt;/code&gt;类似，但它的判断放在loop段的开始，这允许产生零长度的循环：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;nl&amp;quot;&gt;loop:&lt;/span&gt;
    &lt;span class=&amp;quot;nf&amp;quot;&gt;je&lt;/span&gt; &lt;span class=&amp;quot;no&amp;quot;&gt;next&lt;/span&gt;
    &lt;span class=&amp;quot;nf&amp;quot;&gt;xxx&lt;/span&gt;
    &lt;span class=&amp;quot;nf&amp;quot;&gt;goto&lt;/span&gt; &lt;span class=&amp;quot;no&amp;quot;&gt;loop&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;for&lt;/code&gt;一般等价于&lt;code&gt;while&lt;/code&gt;形式，是另一种写法。但当和&lt;code&gt;continue&lt;/code&gt;语句合作是可能有例外。详见习题24。&lt;/p&gt;
&lt;h3&gt;条件传送语句&lt;/h3&gt;
&lt;p&gt;条件传送语句是现代CPU都有的一条指令，它本质上是以下C代码的翻译：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;absdiff&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;?&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;nl&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在汇编中，会先计算好&lt;code&gt;y-x&lt;/code&gt;和&lt;code&gt;x-y&lt;/code&gt;，然后通过一条&lt;code&gt;cmovl&lt;/code&gt;指令（&lt;code&gt;l&lt;/code&gt;表示小于）直接判断前面&lt;code&gt;cmp&lt;/code&gt;的比较结果即条件码然后送走&lt;code&gt;y-x&lt;/code&gt;或者&lt;code&gt;x-y&lt;/code&gt;而不是通过条件跳转。  这样做的效率一般会很高，这是由于CPU内部的流水线采用的分支预测机制。因为对于此指令，处理器只是读数据、检查条件码、然后更新或者不动目的寄存器，不会有额外的跳转。  &lt;/p&gt;
&lt;p&gt;当然这个指令并非时时有效，由于它要事先计算两个分支的结果，所以可能会造成无谓的计算浪费，也受编译器的影响。  &lt;/p&gt;
&lt;h3&gt;switch指令&lt;/h3&gt;
&lt;p&gt;对应于C中的switch语句，当分支较多并且每个分支的条件间隔较小时，会生成一个&lt;strong&gt;跳转表&lt;/strong&gt;，有个这个表，可以使得分支实现和复杂度无关，相对于经典的条件转移，利用查表的方式可以说复杂度都是固定的，是并行判断。  &lt;/p&gt;
&lt;h2&gt;过程&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;过程调用&lt;/strong&gt;将数据和控制进行跳转，而后又可以恢复现场继续执行刚才的操作。这是通过&lt;strong&gt;转移到控制&lt;/strong&gt;和&lt;strong&gt;转移出控制&lt;/strong&gt;实现的。  &lt;/p&gt;
&lt;h3&gt;栈帧&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;栈帧&lt;/strong&gt;实际上就是栈的一种应用，它是为单个过程所分配的栈，由存放于&lt;code&gt;%ebp&lt;/code&gt;中的帧指针和存放于&lt;code&gt;%esp&lt;/code&gt;中的栈指针控制。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&amp;quot;栈帧&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/blog/skill-2016-07-04a/1.png&amp;quot; /&gt;  &lt;/p&gt;
&lt;h3&gt;转移控制&lt;/h3&gt;
&lt;p&gt;当一个过程被&lt;code&gt;call&lt;/code&gt;指令调用时，首先将返回地址入栈，然后当前一些需要保护的局部变量什么的&lt;code&gt;入栈&lt;/code&gt;，保护现场，随后跳转到被调用过程 的首地址，调用结束后再使用&lt;code&gt;leave&lt;/code&gt;指令做好准备，之后&lt;code&gt;ret&lt;/code&gt;指令恢复现场并返回跳转前的地址继续。 &lt;/p&gt;
&lt;p&gt;调用控制中的寄存器分配是约定俗成的&lt;code&gt;%eax&lt;/code&gt;、&lt;code&gt;%edx&lt;/code&gt;和&lt;code&gt;ecx&lt;/code&gt;被分配给被调用者，可以被覆盖，而&lt;code&gt;%ebx&lt;/code&gt;、&lt;code&gt;%esi&lt;/code&gt;和&lt;code&gt;%edi&lt;/code&gt;则分配给调用者，再覆盖之前要先入栈以便恢复。  &lt;/p&gt;
&lt;p&gt;对于&lt;code&gt;递归过程&lt;/code&gt;，编译器会将每次函数对自身的调用都视为调用一个其他的函数，本质上并无区别。&lt;/p&gt;
&lt;h2&gt;数组和结构体&lt;/h2&gt;
&lt;p&gt;数组是一种聚合数据类型，它在C中实现很简单，为&lt;code&gt;T A[N]&lt;/code&gt;的形式，这段代码会在内存中分配N个数据类型T需要的内存空间，A作为一个标示符，是一个指向数组开头的指针，而A和下标的组合即可给这个指针加上偏移来访问数组内的任意数据。  &lt;/p&gt;
&lt;p&gt;比如定义数组&lt;code&gt;char A[8]&lt;/code&gt;，首先分配8个字节的内存，然后将A指向这八个字节的开头，&lt;code&gt;A[4]&lt;/code&gt;则构造&lt;code&gt;A+4&lt;/code&gt;的指针，可以用其访问数组中的第四个数据。这在汇编中是&lt;code&gt;movl (%edx, %ecx, 4), %eax&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;本质上，我们使用&lt;code&gt;A[i]&lt;/code&gt;相当于先得到元素&lt;code&gt;A[i]&lt;/code&gt;的引用，然后用&lt;code&gt;*A[i]&lt;/code&gt;来获得该地址的值。  &lt;/p&gt;
&lt;h3&gt;嵌套数组&lt;/h3&gt;
&lt;p&gt;即&lt;strong&gt;多维数组&lt;/strong&gt;，比如&lt;code&gt;int A[5][5]&lt;/code&gt;，这和一般数组没什么两样，只不过在计算地址的时候会多一套工序，考虑你是在一个二维矩阵中取值就可以了，比如取值&lt;code&gt;A[i][j]&lt;/code&gt;，那么地址就是&lt;code&gt;A + 4(5i + j)&lt;/code&gt;。  &lt;/p&gt;
&lt;h3&gt;定长和变长数组&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;定长数组&lt;/strong&gt;是指大小在编译期就能就确定的的数组，而&lt;strong&gt;变长数组&lt;/strong&gt;则不然，可能会在运行时动态改变。对于前者，尤其是多维的情况下，在编译的时候可以将其地址计算优化为常数乘法，而后者不但不能事先分配内存，必须在需要的时候才动态运算和分配，并且在取值时也要动态使用乘法来计算，所以性能会有所下降。&lt;/p&gt;
&lt;h3&gt;结构&lt;/h3&gt;
&lt;p&gt;C中的结构&lt;code&gt;struct&lt;/code&gt;声明创建一个数据类型，将可能不同类型的对象聚合到一个对象，不同的对象用名字来引用。它本质上是方便编程的，因为对于数据本身而言，其在内存上是不变的，结构仅仅是改变去解释他们的方式，每个名字对应一个偏移，而这个偏移用于计算地址，比如：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;struct&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;S&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;char&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;c&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;short&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;s&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;S&lt;/code&gt;总共占据7个字节，如果其首地址为0，则&lt;code&gt;S.i&lt;/code&gt;地址为0，&lt;code&gt;S.c&lt;/code&gt;为4，&lt;code&gt;S.s&lt;/code&gt;为5。  &lt;/p&gt;
&lt;p&gt;由于结构的存在，我们可以非常方便得管理聚合型数据，合理利用它也可以免除数据类型转换、新建内存的开销。  &lt;/p&gt;
&lt;p&gt;结构中的对象也可以是指针，这可以用于仿造OOP，比如将指针指向一个函数。  &lt;/p&gt;
&lt;h3&gt;联合&lt;/h3&gt;
&lt;p&gt;联合&lt;code&gt;union&lt;/code&gt;和&lt;code&gt;struct&lt;/code&gt;不同，它用于用不同的类型去解释相同的数据，联合中所有部分的地址偏移都是一致的，它们只是用不同的方式去解释一段数据。比如：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;union&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;U&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;char&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;c&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;double&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;U&lt;/code&gt;会占据8字节，即&lt;code&gt;double&lt;/code&gt;的长度，其中&lt;code&gt;i&lt;/code&gt;、&lt;code&gt;c&lt;/code&gt;、&lt;code&gt;d&lt;/code&gt;的地址偏移都是0。&lt;/p&gt;
&lt;h3&gt;数据对齐&lt;/h3&gt;
&lt;p&gt;数据对齐对于提高存储器读写性能很关键，原则来讲，如果一个类型占用字节数是&lt;code&gt;K&lt;/code&gt;，那么其地址应当是&lt;code&gt;K&lt;/code&gt;的倍数。这就要求&lt;code&gt;short&lt;/code&gt;类型的地址最低位为0而&lt;code&gt;int&lt;/code&gt;型为00。对于Windows系统，对齐非常严格按照上述规则执行，而对于unix，8字节只需对齐4字节。&lt;br /&gt;
由于&lt;code&gt;SSE&lt;/code&gt;指令要求存储器地址是16的倍数，所以栈帧的长度都是16的整数倍。  &lt;/p&gt;
&lt;h2&gt;存储器越界引用和缓冲区溢出&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;缓冲区溢出&lt;/strong&gt;是一个问题，比如在存储一个字符串时，如果没有分配足够的空间，便会发生溢出。发生溢出时，会错误覆盖栈帧中寄存器的值，这会导致被保存的现场不可恢复、代码无法正确返回等等，可能受到严重的攻击。比如库函数&lt;code&gt;gets&lt;/code&gt;、&lt;code&gt;strcpy&lt;/code&gt;等都有这个问题。好一点的方法是使用他们的具有限制最大长度的替代函数&lt;code&gt;fgets&lt;/code&gt;等。&lt;/p&gt;
&lt;p&gt;这种错误常被用于网络攻击，比如给字符串内巧妙加入一些可执行代码的字节编码，然后让其溢出，覆盖返回地址，这样就可以执行攻击代码。  &lt;/p&gt;
&lt;h3&gt;对抗&lt;/h3&gt;
&lt;p&gt;对抗溢出攻击有几种方式。其中一种是&lt;strong&gt;栈随机化&lt;/strong&gt;，它给程序端之前分配一些随机的、不使用的空闲空间，来是的程序的实际地址发生偏移，这样可以让程序字段的地址不可预测，是的攻击程序对地址的把握困难，这可以消除一部分影响。&lt;strong&gt;栈随机化&lt;/strong&gt;被扩展后是&lt;strong&gt;地址空间布局随机化&lt;/strong&gt;(ASLR)，除了栈之外，全局变量、堆等都要随机化。  &lt;/p&gt;
&lt;p&gt;另一种方法是&lt;strong&gt;栈破坏检测&lt;/strong&gt;，也就是在栈帧的局部缓冲区与栈状态之间存储一个&lt;strong&gt;哨兵&lt;/strong&gt;，被称为&lt;strong&gt;栈保护者&lt;/strong&gt;，程序运行中不断检测它，当其被改变，即破坏时便会识别出被入侵。  &lt;/p&gt;
&lt;p&gt;还有一种就是&lt;strong&gt;限制可执行区域&lt;/strong&gt;，即限定代码可以存储在什么区域。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;习题&lt;/h2&gt;
&lt;h3&gt;13&lt;/h3&gt;
&lt;p&gt;A. &lt;code&gt;l&lt;/code&gt;为32位，比较为对补码的小于，所以为&lt;code&gt;int&lt;/code&gt;。&lt;br /&gt;
B. &lt;code&gt;w&lt;/code&gt;为16位，比较对补码，所以为&lt;code&gt;short&lt;/code&gt;。&lt;br /&gt;
C. &lt;code&gt;b&lt;/code&gt;为8位，比较对无符号数，所以为&lt;code&gt;uchar&lt;/code&gt;。&lt;br /&gt;
D. &lt;code&gt;l&lt;/code&gt;为32位，比较是不等于或非零操作，所以为&lt;code&gt;int&lt;/code&gt;活&lt;code&gt;uint&lt;/code&gt;。  &lt;/p&gt;
&lt;h3&gt;14&lt;/h3&gt;
&lt;p&gt;和13类似。  &lt;/p&gt;
&lt;h3&gt;15&lt;/h3&gt;
&lt;p&gt;A. 0x8048291 + (0x05 = 5)&lt;br /&gt;
B. 0x8048359 + (0xe7 = -25) 
C. 0x8048391 - (0x12 = 18)&lt;br /&gt;
D. 0x80482c4 + (0xffffffe0 = -32)&lt;br /&gt;
E. 0x8049ffc的小端是0xfc9f0408&lt;/p&gt;
&lt;h3&gt;16&lt;/h3&gt;
&lt;p&gt;A. 不想写goto，略过。&lt;br /&gt;
B. 本质上是吧&lt;code&gt;p &amp;amp;&amp;amp; a &amp;gt; 0&lt;/code&gt;拆分为了两部分来实现。&lt;/p&gt;
&lt;h3&gt;17&lt;/h3&gt;
&lt;p&gt;A. 简单，略过。&lt;br /&gt;
B. 两种方法等价，但是&lt;code&gt;!t&lt;/code&gt;这种判断在没有&lt;code&gt;else&lt;/code&gt;的状况下可以节省代码量，和&lt;code&gt;if (!x) return;&lt;/code&gt;一样。  &lt;/p&gt;
&lt;h3&gt;18&lt;/h3&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;test&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;val&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;val&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;val&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;err&amp;quot;&gt;；&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;val&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;val&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;19&lt;/h3&gt;
&lt;p&gt;A. 这是一个数学问题，&lt;code&gt;$n! \le 2^{32} - 1$&lt;/code&gt;即可。&lt;br /&gt;
B. &lt;code&gt;$n! \le 2^{63} - 1$&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;20&lt;/h3&gt;
&lt;p&gt;A.   &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;寄存器&lt;/th&gt;
&lt;th&gt;初始值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;%eax&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%ecx&lt;/td&gt;
&lt;td&gt;y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%edx&lt;/td&gt;
&lt;td&gt;n&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;B. &lt;code&gt;do&lt;/code&gt;的是&lt;code&gt;body&lt;/code&gt;，&lt;code&gt;while&lt;/code&gt;后的是&lt;code&gt;test&lt;/code&gt;，前者对应&lt;code&gt;.L2&lt;/code&gt;中的&lt;code&gt;addl&lt;/code&gt;、&lt;code&gt;imull&lt;/code&gt;、&lt;code&gt;subl&lt;/code&gt;，后者则是&lt;code&gt;testl&lt;/code&gt;、&lt;code&gt;jle&lt;/code&gt;、&lt;code&gt;cmpl&lt;/code&gt;、&lt;code&gt;jl&lt;/code&gt;。&lt;br /&gt;
C. 略过。&lt;/p&gt;
&lt;h3&gt;21&lt;/h3&gt;
&lt;p&gt;A. 这是&lt;code&gt;a+b&lt;/code&gt;的结果。&lt;br /&gt;
剩下的题略过。&lt;/p&gt;
&lt;h3&gt;22&lt;/h3&gt;
&lt;p&gt;基础，略过。  &lt;/p&gt;
&lt;h3&gt;23&lt;/h3&gt;
&lt;p&gt;基础，略过。  &lt;/p&gt;
&lt;p&gt;此函数的目的在于将传入参数&lt;code&gt;x&lt;/code&gt;进行按位镜像。  &lt;/p&gt;
&lt;h3&gt;24&lt;/h3&gt;
&lt;p&gt;A. 会导致无限循环。&lt;br /&gt;
B. 很简单，在body之前加上判断跳转回loop。&lt;/p&gt;
&lt;h3&gt;25&lt;/h3&gt;
&lt;p&gt;概率题，套上面公式可得&lt;code&gt;$T_MP = (31 - 16)*2 = 30$&lt;/code&gt;个周期，错误时需要46个周期。  &lt;/p&gt;
&lt;h3&gt;26&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;\&lt;/code&gt;运算符，本质上是为了解决负数情况下的偏置问题。&lt;/p&gt;
&lt;h3&gt;27&lt;/h3&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;test&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;val&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;4&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;val&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;val&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;^&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;val&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;val&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;28&lt;/h3&gt;
&lt;p&gt;略过。&lt;/p&gt;
&lt;h3&gt;29&lt;/h3&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;switcher&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;a&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;b&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;c&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;answerl&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;switch&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;a&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;case&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;5&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;c&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;b&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;^&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;15&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;case&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;answer&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;c&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;112&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
            &lt;span class=&amp;quot;k&amp;quot;&gt;break&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;case&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;case&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;7&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;answer&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;c&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;b&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
            &lt;span class=&amp;quot;k&amp;quot;&gt;break&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;case&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;4&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;answer&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;a&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
            &lt;span class=&amp;quot;k&amp;quot;&gt;break&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;default&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;answer&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;b&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;answer&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;30&lt;/h3&gt;
&lt;p&gt;A. 被设置为&lt;code&gt;pop&lt;/code&gt;指令的地址。&lt;br /&gt;
B. 这不是一个过程调用，他没有&lt;code&gt;ret&lt;/code&gt;，控制和指令顺序一致，返回值从栈中弹出。&lt;br /&gt;
C. 这是IA32将PC的值放到整数寄存器中唯一的方法。  &lt;/p&gt;
&lt;h3&gt;31&lt;/h3&gt;
&lt;p&gt;除了必须被保存的三个寄存器之外，其他寄存器随意被被更改，不会影响调用者的行为。  &lt;/p&gt;
&lt;h3&gt;32&lt;/h3&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;fun&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;short&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;c&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;char&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;p&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;33&lt;/h3&gt;
&lt;p&gt;略过。这道题主要让我们明白编译器会分配大量不会使用的空间，这可能是为了&lt;strong&gt;数据对齐&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;34&lt;/h3&gt;
&lt;p&gt;A. &lt;code&gt;%ebx&lt;/code&gt;保存x的值，所以它可以被用于计算表达式结果。&lt;br /&gt;
B. &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;rfun&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;unsigned&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;unsigned&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;nx&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;rv&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;rfun&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;nx&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&amp;quot;mh&amp;quot;&gt;0x01&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;rv&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt; 
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;C. 它计算x中所有位的和。&lt;/p&gt;
&lt;h3&gt;35&lt;/h3&gt;
&lt;p&gt;GCC为&lt;code&gt;long double&lt;/code&gt;分配12个字节。&lt;br /&gt;
指针类型固定占用4个字节。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数组&lt;/th&gt;
&lt;th&gt;元素大小&lt;/th&gt;
&lt;th&gt;整个数组大小&lt;/th&gt;
&lt;th&gt;起始位置&lt;/th&gt;
&lt;th&gt;元素i&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;short S[7]&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;$x_S$&lt;/td&gt;
&lt;td&gt;$x_S+2i$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;short *T[3]&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;$x_T$&lt;/td&gt;
&lt;td&gt;$x_T+4i$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;short **U[6]&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;$x_U$&lt;/td&gt;
&lt;td&gt;$x_U+i$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;long double V[8]&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;96&lt;/td&gt;
&lt;td&gt;$x_Y$&lt;/td&gt;
&lt;td&gt;$x_Y+12i$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;long double *W[4]&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;$x_W$&lt;/td&gt;
&lt;td&gt;$x_W+4i$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;36&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表达式&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;汇编代码&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;S+1&lt;/td&gt;
&lt;td&gt;short *&lt;/td&gt;
&lt;td&gt;$x_S+2$&lt;/td&gt;
&lt;td&gt;leal 2(%edx), %eax&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;S[3]&lt;/td&gt;
&lt;td&gt;short&lt;/td&gt;
&lt;td&gt;$M[x_S+6]$&lt;/td&gt;
&lt;td&gt;movw 6(%edx), %ax&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;S[i]&lt;/td&gt;
&lt;td&gt;short *&lt;/td&gt;
&lt;td&gt;$x_S+2i$&lt;/td&gt;
&lt;td&gt;leal (%edx, %ecx, 2), %eax&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;S[4*i+1]&lt;/td&gt;
&lt;td&gt;short&lt;/td&gt;
&lt;td&gt;$[x_S+8i+2]$&lt;/td&gt;
&lt;td&gt;movw 2(%edx, %ecx, 8), %ax&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;S+i-5&lt;/td&gt;
&lt;td&gt;short *&lt;/td&gt;
&lt;td&gt;$[x_S+2i-10]$&lt;/td&gt;
&lt;td&gt;leal -10(%edx, %ecx, 2), %eax&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;37&lt;/h3&gt;
&lt;p&gt;M = 5, N = 7&lt;/p&gt;
&lt;h3&gt;38&lt;/h3&gt;
&lt;p&gt;详见代码。  &lt;/p&gt;
&lt;p&gt;这样的写法对特定的规则优化，能够消除乘法，提高效率。  &lt;/p&gt;
&lt;h3&gt;39&lt;/h3&gt;
&lt;p&gt;A. 0，4，8，16&lt;br /&gt;
B. 24个字节&lt;br /&gt;
C. &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;void&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;sp_init&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;struct&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;prob&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;sp&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;sp&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;s&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;sp&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;s&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;sp&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;p&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;err&amp;quot;&gt;$&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;sp&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;s&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;sp&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;next&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;sp&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;40&lt;/h3&gt;
&lt;p&gt;略过。&lt;/p&gt;
&lt;h3&gt;41&lt;/h3&gt;
&lt;p&gt;A. 4字节对齐。&lt;br /&gt;
B. 4字节对齐。&lt;br /&gt;
C. 2字节对齐。&lt;br /&gt;
D. 4字节对齐。&lt;br /&gt;
E. 4字节对齐。  &lt;/p&gt;
&lt;p&gt;看基本类型里最大的&lt;code&gt;K&lt;/code&gt;。  &lt;/p&gt;
&lt;h3&gt;42&lt;/h3&gt;
&lt;p&gt;A. 基础，略过。&lt;br /&gt;
B. 4字节对齐。&lt;br /&gt;
C. 按照字节大小降序排列即可，最终总和是32。  &lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Monday, 04 Jul 2016 21:00:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2016.07.04 21:00:article/Skill-2016_07_04_a</guid>
<category>CSAPP</category>
<category>计算机系统</category>
<category>汇编</category>
<category>控制</category>
<category>过程</category>
<category>数据</category>
</item>

<item>
<title>【Javascript】实现事件管理器</title>
<link>http://dtysky.moe/article/Skill-2016_07_01_b</link>
<description>&lt;p&gt;描述如何在Js中事件事件管理器，在别的语言中也差不多。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;在Js中实现事件机制，可以用以下的一个类（ES6写法）实现。这是一个事件管理器，包含了注册、解除注册、发送事件三个功能，这三个功能一般足以满足轻量的事件驱动需求。  &lt;/p&gt;
&lt;p&gt;事件驱动器核心是一个hash table&lt;code&gt;_events&lt;/code&gt;，他的键是事件名称，值是一个由方法构成的数组。&lt;br /&gt;
&lt;code&gt;register&lt;/code&gt;函数用于注册事件，新建事件或者向事件中添加方法；&lt;code&gt;unregister&lt;/code&gt;解除注册，从事件中移除方法或者自动移除事件；&lt;code&gt;dispatch&lt;/code&gt;方法通过事件的名字执行事件，按照注册的顺序顺序执行。&lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kr&amp;quot;&gt;class&lt;/span&gt; &lt;span class=&amp;quot;nx&amp;quot;&gt;EventManager&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt;
    &lt;span class=&amp;quot;nx&amp;quot;&gt;constructor&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(){&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;this&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;_events&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;{};&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;

    &lt;span class=&amp;quot;nx&amp;quot;&gt;register&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;nx&amp;quot;&gt;method&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;this&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;_events&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;===&lt;/span&gt; &lt;span class=&amp;quot;kc&amp;quot;&gt;undefined&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
            &lt;span class=&amp;quot;k&amp;quot;&gt;this&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;_events&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[];&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;this&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;_events&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;].&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;push&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;method&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;

    &lt;span class=&amp;quot;nx&amp;quot;&gt;unregister&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;nx&amp;quot;&gt;method&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;this&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;_events&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;===&lt;/span&gt; &lt;span class=&amp;quot;kc&amp;quot;&gt;undefined&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
            &lt;span class=&amp;quot;k&amp;quot;&gt;throw&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;new&lt;/span&gt; &lt;span class=&amp;quot;nx&amp;quot;&gt;NoEventException&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;
                &lt;span class=&amp;quot;sb&amp;quot;&gt;`Can not unregister method, the event named &amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;si&amp;quot;&gt;${&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;si&amp;quot;&gt;}&lt;/span&gt;&lt;span class=&amp;quot;sb&amp;quot;&gt;&amp;quot; is not existed!`&lt;/span&gt;
            &lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
        &lt;span class=&amp;quot;kr&amp;quot;&gt;const&lt;/span&gt; &lt;span class=&amp;quot;nx&amp;quot;&gt;index&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;this&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;_events&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;].&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;indexOf&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;method&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;index&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;===&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
            &lt;span class=&amp;quot;k&amp;quot;&gt;throw&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;new&lt;/span&gt; &lt;span class=&amp;quot;nx&amp;quot;&gt;NoEventException&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;
                &lt;span class=&amp;quot;sb&amp;quot;&gt;`Can not unregister method, the method named &amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;si&amp;quot;&gt;${&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;method&lt;/span&gt;&lt;span class=&amp;quot;si&amp;quot;&gt;}&lt;/span&gt;&lt;span class=&amp;quot;sb&amp;quot;&gt;&amp;quot; is not in event &amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;si&amp;quot;&gt;${&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;si&amp;quot;&gt;}&lt;/span&gt;&lt;span class=&amp;quot;sb&amp;quot;&gt;&amp;quot;!`&lt;/span&gt;
            &lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;this&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;_events&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;].&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;splice&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;index&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;this&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;_events&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;].&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;length&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;===&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
            &lt;span class=&amp;quot;k&amp;quot;&gt;delete&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;this&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;_events&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;];&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;

    &lt;span class=&amp;quot;nx&amp;quot;&gt;dispatch&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;this&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;_events&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;===&lt;/span&gt; &lt;span class=&amp;quot;kc&amp;quot;&gt;undefined&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
            &lt;span class=&amp;quot;k&amp;quot;&gt;throw&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;new&lt;/span&gt; &lt;span class=&amp;quot;nx&amp;quot;&gt;NoEventException&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;
                &lt;span class=&amp;quot;sb&amp;quot;&gt;`Can not dispatch event, the event named &amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;si&amp;quot;&gt;${&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;si&amp;quot;&gt;}&lt;/span&gt;&lt;span class=&amp;quot;sb&amp;quot;&gt;&amp;quot; is not existed!`&lt;/span&gt;
            &lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;this&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;_events&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;event&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;].&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;map&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;
            &lt;span class=&amp;quot;nx&amp;quot;&gt;method&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt;
                &lt;span class=&amp;quot;nx&amp;quot;&gt;method&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;();&lt;/span&gt;
            &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Friday, 01 Jul 2016 21:20:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2016.07.01 21:20:article/Skill-2016_07_01_b</guid>
<category>Javascript</category>
<category>事件</category>
<category>事件管理</category>
</item>

<item>
<title>【CSAPP】笔记-Cp3-1-程序编码、数据格式、访问信息和数据操作</title>
<link>http://dtysky.moe/article/Skill-2016_07_01_a</link>
<description>&lt;p&gt;CSAPP（深入理解计算机系统）第三章“程序的机器级表示”第一部分“程序编码、数据格式、访问信息和数据操作”的笔记和课后习题。 &lt;br /&gt;
&lt;a href=&amp;quot;https://github.com/dtysky/CSAPP&amp;quot;&gt;Github的同步工程在这&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;计算机执行的是&lt;strong&gt;机器码&lt;/strong&gt;，即一条一条的01序列，这些序列经过CPU的&lt;strong&gt;控制译码器&lt;/strong&gt;译码后以数字电路的形式操作CPU的其他部件进行工作。但机器码对人的可读性极其差，所以有了&lt;strong&gt;汇编代码&lt;/strong&gt;。汇编代码可以看做是机器码的文本表现，十分接近于机器码的原本性质，但其抽象程度过低，难以构建大型工程，所以又有了&lt;strong&gt;C&lt;/strong&gt;这样系统级语言，他可读性和抽象性更高，同时不会损失太多性能，但对于日渐膨胀的效率需求，系统及语言很多时候也无法更上迭代的速度，所以便有了&lt;strong&gt;C#&lt;/strong&gt;这种编译型的高级语言和&lt;strong&gt;Python&lt;/strong&gt;这种解释型的脚本语言，他们比&lt;strong&gt;C&lt;/strong&gt;更上层，开发效率更高，门槛更低。但一般而言，开发效率和运行效率是不可兼得的。  &lt;/p&gt;
&lt;p&gt;对于C，需要一个&lt;strong&gt;编译器&lt;/strong&gt;将其编译到汇编，&lt;strong&gt;汇编器&lt;/strong&gt;再将汇编转换为机器码，而不同硬件平台的汇编代码往往有差异，所以高级语言还有一个重要的特点就是帮我们屏蔽了硬件底层，将兼容工作交给工具去做。  &lt;/p&gt;
&lt;p&gt;“精通细节是理解更深和更基本概念的先决条件。”  &lt;/p&gt;
&lt;h2&gt;程序编码&lt;/h2&gt;
&lt;p&gt;在xinx系统中，可以使用以下代码编译一个C文件：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gcc -o1 -o p p1.c p2.c
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;编译两个C文件到&lt;code&gt;p&lt;/code&gt;中，使用第一级优化。优化随着等级上升性能提高，但和原始代码的对应会下降，并且会增加编译时间。  &lt;/p&gt;
&lt;p&gt;在编译过程中，编译器文件首先会将代码中的&lt;code&gt;#include&lt;/code&gt;和&lt;code&gt;#define&lt;/code&gt;扩展插入代码，然后编译成汇编文件&lt;code&gt;.s&lt;/code&gt;，随后汇编为机器码&lt;code&gt;.o&lt;/code&gt;文件，然后和预制库进行连接，生成最后的可执行文件。  &lt;/p&gt;
&lt;p&gt;程序中的代码段存储在程序存储器中，比如操作系统信息、运行时栈等，其使用虚拟地址来寻址，操作系统负责将虚拟地址转换成物理地址。  &lt;/p&gt;
&lt;h3&gt;一个例子&lt;/h3&gt;
&lt;p&gt;如果我们有一段C代码&lt;code&gt;code.c&lt;/code&gt;，运行&lt;code&gt;gcc -O1 -S code.c&lt;/code&gt;将其编译为汇编文件后便是&lt;code&gt;code.s&lt;/code&gt;，其中是这段代码对应的汇编代码，这段代码一般会用&lt;code&gt;push&lt;/code&gt;指令保护现场，然后执行函数，最后&lt;code&gt;pop&lt;/code&gt;指令恢复现场。运行&lt;code&gt;gcc -O1 -c code.s&lt;/code&gt;会得到&lt;code&gt;code.o&lt;/code&gt;，这是二进制的机器码，其大小很大因为包含了执行开始等附加信息。可以通过反汇编器来从机器码中得到原始函数的字节长度并用&lt;code&gt;gdb&lt;/code&gt;来检查。  &lt;/p&gt;
&lt;p&gt;作为&lt;strong&gt;CISC&lt;/strong&gt;，即复杂指令集的CPU，&lt;strong&gt;IA32&lt;/strong&gt;和&lt;strong&gt;X86&lt;/strong&gt;架构的机器指令长度均不一致，有的长有的短。&lt;/p&gt;
&lt;h2&gt;数据格式&lt;/h2&gt;
&lt;p&gt;机器中的数据格式和C中的数据类型有一定的对应关系。整形数据格式有8bits的&lt;strong&gt;字节&lt;/strong&gt;，16bits的&lt;strong&gt;字&lt;/strong&gt;，32bits的&lt;strong&gt;双字&lt;/strong&gt;和64bits的&lt;strong&gt;四字&lt;/strong&gt;等，浮点数据格式有32bits的&lt;strong&gt;单精度&lt;/strong&gt;，64bits的&lt;strong&gt;双精度&lt;/strong&gt;和60~72bits的&lt;strong&gt;扩展精度&lt;/strong&gt;。这些格式在汇编中拥有各自专属的指令，会在一般指令后加上后缀，比如两个双字相加就是&lt;code&gt;addl&lt;/code&gt;等。  &lt;/p&gt;
&lt;p&gt;对于IA32处理器，由于四字不被直接支持，所以四字的运算和操作会被扩展。  &lt;/p&gt;
&lt;h2&gt;访问信息&lt;/h2&gt;
&lt;p&gt;新时代的CPU对寄存器的专用性需求不再存在，所以CPU中的寄存器都是通用寄存器，但一般有一种约定，IA32中每一个CPU包含八个32bits的寄存器，有些指令会使用固定的源寄存器和目的寄存器，&lt;code&gt;eax&lt;/code&gt;、&lt;code&gt;ecx&lt;/code&gt;、&lt;code&gt;edx&lt;/code&gt;特殊，&lt;code&gt;ebp&lt;/code&gt;和&lt;code&gt;esp&lt;/code&gt;保存栈指针和帧指针，等等。  &lt;/p&gt;
&lt;p&gt;每一个指令都有其操作数，一些指令又分为&lt;strong&gt;源操作数&lt;/strong&gt;和&lt;strong&gt;目的操作数&lt;/strong&gt;，这些操作数可以是&lt;strong&gt;立即数&lt;/strong&gt;、&lt;strong&gt;存储器地址&lt;/strong&gt;和&lt;strong&gt;寄存器&lt;/strong&gt;，对于存储器，可以用许多种方式进行寻址，比如&lt;strong&gt;绝对寻址&lt;/strong&gt;、&lt;strong&gt;变址寻址&lt;/strong&gt;等，详细请自行查找CPU寻址相关。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据传送&lt;/strong&gt;指令将数据从一个位置复制到另一个位置，&lt;code&gt;mov&lt;/code&gt;系列传送数据，&lt;code&gt;movs&lt;/code&gt;系列传送符号扩展字节，&lt;code&gt;movz&lt;/code&gt;系列传送零扩展字节，&lt;code&gt;push&lt;/code&gt;和&lt;code&gt;pop&lt;/code&gt;分别压栈和出栈。需要注意的是，传送指令的两个操作数不能都为存储器。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;栈&lt;/strong&gt;是一种特殊的数组，遵循先入后出原则，但由于其和一般数据的存储本质上并无不同之处，所以还是也可以使用一般的寻址方式访问其中的任意元素。  &lt;/p&gt;
&lt;p&gt;C中的&lt;strong&gt;间接引用&lt;/strong&gt;运算符&lt;code&gt;*&lt;/code&gt;可以将一个指针指向地址的值取出放入一个局部变量之内，这和&lt;strong&gt;取地址&lt;/strong&gt;操作符&lt;code&gt;&amp;amp;&lt;/code&gt;相反，后者返回一个变量的地址，而&lt;code&gt;*p=x&lt;/code&gt;这种形式则是指针间接引用形式，它把&lt;code&gt;x&lt;/code&gt;复制到&lt;code&gt;x&lt;/code&gt;指向的位置。  &lt;/p&gt;
&lt;p&gt;C中的&lt;strong&gt;局部变量&lt;/strong&gt;一般保存在寄存器中，访问起来比在存储器中要快得多。  &lt;/p&gt;
&lt;h2&gt;算术和操作逻辑&lt;/h2&gt;
&lt;p&gt;算术像是加减乘除移位这些操作大多都可以对应汇编里的一条单独指令，比如&lt;code&gt;ADD S, D&lt;/code&gt;就是将&lt;code&gt;S+D&lt;/code&gt;的结果放到&lt;code&gt;D&lt;/code&gt;中，&lt;code&gt;INC D&lt;/code&gt;就是将&lt;code&gt;D&lt;/code&gt;中的数据自加1等。  &lt;/p&gt;
&lt;p&gt;除此之外，还有&lt;code&gt;leal&lt;/code&gt;指令，即&lt;strong&gt;加载有效地址&lt;/strong&gt;指令，是&lt;code&gt;movl&lt;/code&gt;指令的变形，它可以看做是普通计算，&lt;code&gt;lea 7(%edx, %edx, 4)， %eax&lt;/code&gt;表示将&lt;code&gt;%eax&lt;/code&gt;中的值设定为&lt;code&gt;5x+7&lt;/code&gt;，括号中三个操作数记为x1、x2、x3则表示&lt;code&gt;x1 + x2 * x3&lt;/code&gt;。此指令最大的好处在于他不通过ALU，可以&lt;strong&gt;单周期&lt;/strong&gt;进行计算，效率极高。&lt;/p&gt;
&lt;p&gt;移位操作&lt;code&gt;SAR&lt;/code&gt;、&lt;code&gt;SHR&lt;/code&gt;等的源操作数是立即数或&lt;code&gt;cl&lt;/code&gt;寄存器中的数，并且范围在&lt;code&gt;0~31&lt;/code&gt;，功用基本和C中的一一对应。&lt;/p&gt;
&lt;p&gt;对于乘除法，除了提供截断到32位的乘除法之外，IA32指令集同样提供&lt;code&gt;mull&lt;/code&gt;、&lt;code&gt;imull&lt;/code&gt;这样的存储64位结果的无符号或者有符号指令，分别有单操作数和双操作数。对于单操作数，其中一个参数在&lt;code&gt;%eax&lt;/code&gt;中，对于乘法，结果高位存储在&lt;code&gt;%edx&lt;/code&gt;、地位存储到&lt;code&gt;%eax&lt;/code&gt;；对于除法，商在&lt;code&gt;%eax&lt;/code&gt;，余数在&lt;code&gt;%edx&lt;/code&gt;。还有像是&lt;code&gt;cltd&lt;/code&gt;这种指令，设置除数，将&lt;code&gt;%eax&lt;/code&gt;符号扩展到&lt;code&gt;%edx&lt;/code&gt;。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;习题&lt;/h2&gt;
&lt;p&gt;所有有代码的练习都以以题号为名字的单个文件内。  &lt;/p&gt;
&lt;p&gt;代码位于&lt;a href=&amp;quot;https://github.com/dtysky/CSAPP/tree/master/CSAPP/Chapter3&amp;quot;&gt;CSAPP-Chapter3&lt;/a&gt;内。&lt;/p&gt;
&lt;h3&gt;1&lt;/h3&gt;
&lt;p&gt;基础，略过。&lt;/p&gt;
&lt;h3&gt;2&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;movl&lt;/li&gt;
&lt;li&gt;movw&lt;/li&gt;
&lt;li&gt;movb&lt;/li&gt;
&lt;li&gt;movb&lt;/li&gt;
&lt;li&gt;pushl&lt;/li&gt;
&lt;li&gt;movw&lt;/li&gt;
&lt;li&gt;popl&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;3&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;%bl不能作为存储器地址&lt;/li&gt;
&lt;li&gt;应该使用movw&lt;/li&gt;
&lt;li&gt;源操作数和目的操作数不应该都为存储器地址&lt;/li&gt;
&lt;li&gt;寄存器sh不存在&lt;/li&gt;
&lt;li&gt;不能将立即数作为目的操作数&lt;/li&gt;
&lt;li&gt;指令和目的寄存器的大小不符&lt;/li&gt;
&lt;li&gt;应该是movw&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;4&lt;/h3&gt;
&lt;p&gt;基础，略过。&lt;/p&gt;
&lt;p&gt;只要认清8bitsyong&lt;code&gt;al&lt;/code&gt;，符号扩展用&lt;code&gt;movs&lt;/code&gt;等即可。  &lt;/p&gt;
&lt;h3&gt;5&lt;/h3&gt;
&lt;p&gt;这段汇编代码本质上是将&lt;code&gt;xp&lt;/code&gt;的内容复制到&lt;code&gt;yp&lt;/code&gt;，&lt;code&gt;yp&lt;/code&gt;的内容复制到&lt;code&gt;zp&lt;/code&gt;，&lt;code&gt;zp&lt;/code&gt;的内容复制到&lt;code&gt;xp&lt;/code&gt;。  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;void&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;decode1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;xp&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;yp&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;zp&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;z&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;yp&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;zp&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;xp&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;z&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;6&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;x + 6&lt;/li&gt;
&lt;li&gt;x + y&lt;/li&gt;
&lt;li&gt;x + 4y&lt;/li&gt;
&lt;li&gt;9x + 7&lt;/li&gt;
&lt;li&gt;4y + 10&lt;/li&gt;
&lt;li&gt;x + 2y + 9&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;7&lt;/h3&gt;
&lt;p&gt;基本操作，略过。&lt;/p&gt;
&lt;h3&gt;8&lt;/h3&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;nf&amp;quot;&gt;movl&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;8&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;nv&amp;quot;&gt;%ebp&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;),&lt;/span&gt; &lt;span class=&amp;quot;nv&amp;quot;&gt;%eax&lt;/span&gt;
&lt;span class=&amp;quot;nf&amp;quot;&gt;sal&lt;/span&gt; &lt;span class=&amp;quot;no&amp;quot;&gt;$2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;nv&amp;quot;&gt;%eax&lt;/span&gt;
&lt;span class=&amp;quot;nf&amp;quot;&gt;movl&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;12&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;nv&amp;quot;&gt;%ebp&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;),&lt;/span&gt; &lt;span class=&amp;quot;nv&amp;quot;&gt;%ecx&lt;/span&gt;
&lt;span class=&amp;quot;nf&amp;quot;&gt;sar&lt;/span&gt; &lt;span class=&amp;quot;nv&amp;quot;&gt;%cl&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;nv&amp;quot;&gt;%eax&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;9&lt;/h3&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;arith&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;z&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;t1&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;t2&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;t1&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;^&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;t3&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;!&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;t2&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
    &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;t4&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;z&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;t3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;t4&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;10&lt;/h3&gt;
&lt;p&gt;A. 两个相同的数异或，结果恒为0，本质上是将&lt;code&gt;%edx&lt;/code&gt;寄存器置零&lt;br /&gt;
B. 更直接的操作是&lt;code&gt;movl $0, %ebx&lt;/code&gt;&lt;br /&gt;
C. &lt;code&gt;xorl&lt;/code&gt;版本只需要2个字节，&lt;code&gt;mov&lt;/code&gt;版本需要5个&lt;/p&gt;
&lt;h3&gt;11&lt;/h3&gt;
&lt;p&gt;将&lt;code&gt;cltd&lt;/code&gt;指令替换为&lt;code&gt;mov $0, %edx&lt;/code&gt;，并且将&lt;code&gt;idivl&lt;/code&gt;替换为&lt;code&gt;divl&lt;/code&gt;即可。  &lt;/p&gt;
&lt;h3&gt;12&lt;/h3&gt;
&lt;p&gt;A. 这显然是64位数的运算并且第四行使用的是无符号运算，所以&lt;code&gt;num_t&lt;/code&gt;是&lt;code&gt;unsigned long long&lt;/code&gt;类型。&lt;br /&gt;
B. 首先将&lt;code&gt;x&lt;/code&gt;和&lt;code&gt;yh&lt;/code&gt;相乘，结果记为&lt;code&gt;s&lt;/code&gt;，&lt;code&gt;sl&lt;/code&gt;存入&lt;code&gt;%ecx&lt;/code&gt;，而后将&lt;code&gt;x&lt;/code&gt;与&lt;code&gt;yl&lt;/code&gt;相乘得&lt;code&gt;t&lt;/code&gt;，&lt;code&gt;th&lt;/code&gt;存入&lt;code&gt;%edx&lt;/code&gt;，&lt;code&gt;tl&lt;/code&gt;存入&lt;code&gt;%eax&lt;/code&gt;，而后将&lt;code&gt;s&lt;/code&gt;和&lt;code&gt;th&lt;/code&gt;相加得到的&lt;code&gt;r&lt;/code&gt;存入&lt;code&gt;%edx&lt;/code&gt;，最后将&lt;code&gt;$dest=2^{32}tl + r$&lt;/code&gt;。&lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Friday, 01 Jul 2016 21:00:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2016.07.01 21:00:article/Skill-2016_07_01_a</guid>
<category>CSAPP</category>
<category>计算机系统</category>
<category>汇编</category>
<category>程序编码</category>
<category>数据</category>
</item>

<item>
<title>【CSAPP】笔记-Cp2-2-数的表示与运算</title>
<link>http://dtysky.moe/article/Skill-2016_06_22_a</link>
<description>&lt;p&gt;CSAPP（深入理解计算机系统）第二章“信息的表示和处理”第二部分“数的表示与运算”的笔记和课后习题。&lt;br /&gt;
&lt;a href=&amp;quot;https://github.com/dtysky/CSAPP&amp;quot;&gt;Github的同步工程在这&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;整形&lt;/h2&gt;
&lt;p&gt;整形数据顾名思义，是指&lt;code&gt;整数&lt;/code&gt;，整数在计算机中的表示是精确的，也是有限的。一般而言，如果一个整数的位宽为&lt;code&gt;w&lt;/code&gt;，则其表示的无符号整数所能表示数的范围为&lt;code&gt;$0 \sim 2^w-1$&lt;/code&gt;，而有符号整数则能表示&lt;code&gt;$-2^{w/2} \sim 2^{w/2}-1$&lt;/code&gt;。比如，对于一个32位的系统，其&lt;code&gt;int&lt;/code&gt;型有符号整数的位宽是32，所以其范围是&lt;code&gt;-2147483648 ~ 2147483647&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;C中的整形数据类型一般有&lt;code&gt;char&lt;/code&gt;、&lt;code&gt;short&lt;/code&gt;、&lt;code&gt;int&lt;/code&gt;、&lt;code&gt;long&lt;/code&gt;、&lt;code&gt;long long&lt;/code&gt;，位宽逐级递增，具体位宽取决于系统，在这些类型前加上&lt;code&gt;unsigned&lt;/code&gt;便可以定义一个无符号数。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;再次声明注意，在依赖于通信的应用中，字节序和位宽的匹配是&lt;strong&gt;特别重要&lt;/strong&gt;的，如果可以，尽量使用c++中的&lt;code&gt;stdint&lt;/code&gt;中的类型，或者自己定义一些&lt;code&gt;uint_8t&lt;/code&gt;之类的类型。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;编码&lt;/h3&gt;
&lt;p&gt;整数的编码可以区分为有符号和无符号两种，无符号编码整数对应的值即为其二进制对应的值，无需多言。有符号编码整数对应的值，一般是其二进制对应的补码。&lt;br /&gt;
补码是一种表示有符号数的编码形式，对于一个n位的有符号数A，其最高位为符号位，为1表示负数，为0表示正数，其他位为数值位。当A为正数时，数值位对应的二进制数即为A所代表的值，比如&lt;code&gt;0111&lt;/code&gt;所代表的有符号数为&lt;code&gt;7&lt;/code&gt;；A为负数时，数值位对应的二进制数的补码加上负号为A的值，比如&lt;code&gt;1111&lt;/code&gt;表示&lt;code&gt;-1&lt;/code&gt;。其计算规则为：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A的补码 = A的取反加1。比如当&lt;code&gt;A = 111&lt;/code&gt;时，其补码为&lt;code&gt;000 + 1 = 001&lt;/code&gt;。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然，这并非最简单和最原始的算法，书中给出的方法是，对于有符号数&lt;code&gt;A = abcd&lt;/code&gt;，其中abcd均为0或者1：  &lt;/p&gt;
&lt;p&gt;$$A = -a*2^3 + b*2^2 + c*2 + d $$&lt;/p&gt;
&lt;p&gt;除了补码之外，有符号数的表示方式还有反码和原码，反码即为补码减1，而原码即为将数值位直接作为其绝对值的负数。在整数的表示形式中，这二者除了在某些底层硬件应用外并不常用，不再过多讨论。需要注意的是这二者的&lt;code&gt;0&lt;/code&gt;都有&lt;code&gt;+0&lt;/code&gt;和&lt;code&gt;-0&lt;/code&gt;两种形式。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;补码的英文为&lt;code&gt;Two&apos;s complement&lt;/code&gt;，反码为&lt;code&gt;Ones&apos; complement&lt;/code&gt;。我们可以用&lt;code&gt;$2^w - x$&lt;/code&gt;来计算一个位宽w并且原码为x的数的补码，可以用&lt;code&gt;$2^w\{1\} - x$&lt;/code&gt;来计算其反码。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;转换&lt;/h3&gt;
&lt;p&gt;C中有符号数和无符号的转换在不同基础的计算机上不同，但都遵循同样的原则——不改变其最底层的字节本身，而只是改变解释的方式。这样会导致这种转换出现反直觉的结果，比如下面代码：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;111&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;kt&amp;quot;&gt;unsigned&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;unsigned&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;printf&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;%u&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输出为&lt;code&gt;4294967185&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;通过以上定义，不难推出一系列的所谓补码和无符号数转换公式，但目测作用不大。&lt;/p&gt;
&lt;h3&gt;在C中&lt;/h3&gt;
&lt;h4&gt;转换&lt;/h4&gt;
&lt;p&gt;C中的基础数据类型转换可以显示进行，也可以隐式进行。前者表现为&lt;code&gt;float y = (float) x;&lt;/code&gt;这样的语句，其中&lt;code&gt;x&lt;/code&gt;是&lt;code&gt;int&lt;/code&gt;型变量；后者的表现则丰富的多，有&lt;code&gt;float y = x;&lt;/code&gt;这种，也有在格式化输出时的&lt;code&gt;printf(&amp;quot;%u&amp;quot;, x);&lt;/code&gt;这种，他会把&lt;code&gt;int&lt;/code&gt;型变量&lt;code&gt;x&lt;/code&gt;转换为无符号数输出。  &lt;/p&gt;
&lt;p&gt;在运算中，如果一个数是有符号而另一个为无符号的，则有符号数会被隐式转换为无符号数，这体现在加减乘除个各种比较运算中，比如：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;kt&amp;quot;&gt;unsigned&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;printf&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;得到的结果是&lt;code&gt;0&lt;/code&gt;，即&lt;code&gt;false&lt;/code&gt;，因为此时x被当做无符号数处理了，是一个很大的正数。  &lt;/p&gt;
&lt;p&gt;在标准库文件&lt;code&gt;limits.h&lt;/code&gt;中定义了&lt;code&gt;int&lt;/code&gt;的最大和最小值，其中：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;cp&amp;quot;&gt;#define INT_MIN (-INT_MAX - 1)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这是由于一些比较隐晦的原因。&lt;/p&gt;
&lt;h4&gt;扩展和截断&lt;/h4&gt;
&lt;p&gt;数的&lt;code&gt;位扩展&lt;/code&gt;一般发生在不同字长的整数的转换时，例如当一个整数从&lt;code&gt;char&lt;/code&gt;型转换为&lt;code&gt;int&lt;/code&gt;型时，就需要将8bits的数转换为32bits（在32bits的系统下）。对于无符号数，直接将低八位保留，高八位补零即可，但对于有符号数，则需要根据符号位的情况选择补零还是补一。&lt;/p&gt;
&lt;p&gt;数的&lt;code&gt;截断&lt;/code&gt;类似于&lt;code&gt;扩展&lt;/code&gt;，不过与后者相反。截断在位级对于有符号数和无符号数都是相同的，都是高位裁剪，但结果还保留着原先的性质，无需多说。  &lt;/p&gt;
&lt;h4&gt;一个利用符号数的漏洞&lt;/h4&gt;
&lt;p&gt;C中，&lt;code&gt;memcpy&lt;/code&gt;函数将一块内存从一个地址拷贝到另一个地址，这个函数有一个参数&lt;code&gt;n&lt;/code&gt;，表示要拷贝内存的长度，&lt;code&gt;n&lt;/code&gt;的类型是&lt;code&gt;size_t&lt;/code&gt;，是一个无符号数。如果给&lt;code&gt;n&lt;/code&gt;赋予一个有符号的负数，将会导致被复制的内存大小改变，这显然会导致一些意外的结果。  &lt;/p&gt;
&lt;p&gt;这个现象导致了曾经&lt;code&gt;FreeBSD&lt;/code&gt;中&lt;code&gt;getpeername&lt;/code&gt;函数的漏洞。  &lt;/p&gt;
&lt;p&gt;一般而言，高级语言都尽量避免无符号数直接被程序员操作。这也是为了防止错误。  &lt;/p&gt;
&lt;h2&gt;整数运算&lt;/h2&gt;
&lt;p&gt;计算机中的整数运算本质上和数学上的整数运算等价，但由于计算机中数值的有限性，所以可能会出现一些反直觉的现象。  &lt;/p&gt;
&lt;h3&gt;无符号加法&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;无符号加法&lt;/code&gt;最大的一个问题就是&lt;code&gt;溢出&lt;/code&gt;，虽然在Lisp系等语言中无限精度的运算是可能的，但像是C系的语言，运算还是有限精度的，这就会出现溢出问题。比如两个32bits的数进行运算，运算结果超过了32bits，这就造成了一次溢出。  &lt;/p&gt;
&lt;p&gt;对于有限精度的等宽w位无符号整数，其加法本质上等于两个数的&lt;code&gt;算术和&lt;/code&gt;对&lt;code&gt;$2^w$&lt;/code&gt;取模，这表现为对溢出位&lt;code&gt;w+1&lt;/code&gt;的舍弃。比如两个四位整数&lt;code&gt;9&lt;/code&gt;和&lt;code&gt;16&lt;/code&gt;，其算术和为25，二进制表示为&lt;code&gt;11001&lt;/code&gt;，将最高为舍弃后为&lt;code&gt;1001&lt;/code&gt;，即&lt;code&gt;9 = 25 % 16&lt;/code&gt;。  &lt;/p&gt;
&lt;h3&gt;补码加法&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;有符号加法&lt;/code&gt;在此处指补码的加法，其最大的问题同样是溢出。对于一个两个&lt;code&gt;w&lt;/code&gt;位的补码有符号数相加，当其和&lt;code&gt;sum&lt;/code&gt;正向超出&lt;code&gt;w&lt;/code&gt;位可表示的补码有符号数范围时，会发生正溢出，最终结果为&lt;code&gt;$sum - 2^w$&lt;/code&gt;；反之，当逆向超过时发生负溢出，最终结果为&lt;code&gt;$sum + 2^w$&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;补码的非&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;补码的非&lt;/code&gt;由于&lt;code&gt;INT_MIN&lt;/code&gt;的存在变得有点奇怪，对于不等于&lt;code&gt;INT_MIN&lt;/code&gt;的数，其取反就是自己的相反数，反之就是其自身。  &lt;/p&gt;
&lt;h3&gt;无符号乘法&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;无符号乘法&lt;/code&gt;就是加法的叠加，对于两个&lt;code&gt;w&lt;/code&gt;位的补码有符号数&lt;code&gt;x&lt;/code&gt;和&lt;code&gt;y&lt;/code&gt;，其乘法本质为：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;x * y = (x * y) % $2^w$  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;补码乘法&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;补码乘法&lt;/code&gt;在位级上与无符号乘法完全一致，截断也一样，只是在最后的解释上有所不同。  &lt;/p&gt;
&lt;h3&gt;乘以常数&lt;/h3&gt;
&lt;p&gt;一种常用的优化，可以将乘法拆为左移和加减法的组合来提高性能。比如：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;y = x * 3 = x * 1 + x * 2 = x + x &amp;lt;&amp;lt; 2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;2的幂的除法&lt;/h3&gt;
&lt;p&gt;和常数乘法类似，常数除法也可以拆分，不过拆分到的是右移运算。在正整数除法的前提下，无论是算术还是逻辑右移1位和除以2是等价的，虽然在除不尽的情况下，结果应该是一个小数，但在整数除法中定义将&lt;code&gt;商+余数&lt;/code&gt;这种结果中的商，也就是小数结果的&lt;code&gt;向下舍入&lt;/code&gt;后的舍入值作为最终结果。&lt;br /&gt;
而对于负数，则应当是&lt;code&gt;向上舍入&lt;/code&gt; ，并不和算术右移等价。修正的方法是：  &lt;/p&gt;
&lt;p&gt;$$\lceil x/y \rceil = \lfloor (x+y-1)/y \rfloor$$  &lt;/p&gt;
&lt;p&gt;本质上，无论对于正数还是负数，原则都是&lt;code&gt;向零舍入&lt;/code&gt;。它们在计算时唯一的区别是如何构造那个偏置值是&lt;code&gt;y-1&lt;/code&gt;还是&lt;code&gt;0&lt;/code&gt;。详见习题42的解答。&lt;/p&gt;
&lt;h2&gt;浮点数&lt;/h2&gt;
&lt;p&gt;浮点数是计算机内部采用的用于表示实数的系统，他可以表示整形无法表示的小数部分，当然，在某些特殊领域中也常用定点数，但浮点数还是最一般的。但理解定点数仍然对理解浮点数有着不小的好处。  &lt;/p&gt;
&lt;h3&gt;定点数&lt;/h3&gt;
&lt;p&gt;首先考虑十进制实数的表达，一个拥有m位整数位和n为小数位的实数，其本质上是：  &lt;/p&gt;
&lt;p&gt;$$x = \sum_{i=0}^ma_i10^i + \sum_{i=n}^0a_i10^i$$  &lt;/p&gt;
&lt;p&gt;二进制也类似，为：  &lt;/p&gt;
&lt;p&gt;$$x = \sum_{i=0}^ma_i2^i + \sum_{i=n}^0a_i2^i$$  &lt;/p&gt;
&lt;p&gt;在实数的表示中，我们用&lt;code&gt;.&lt;/code&gt;这个符号来分隔整数和小数部分，成为&lt;code&gt;点&lt;/code&gt;。   在计算机中，一个数的位宽确定的情况下，当点的位置固定时，我们就称这个数为定点数，以下便是一个4位整数4位小数的二进制定点数：  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;整数&lt;/th&gt;
&lt;th&gt;点&lt;/th&gt;
&lt;th&gt;小数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0101&lt;/td&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;它代表的数为&lt;code&gt;5.5&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;需要注意的是，计算机中除了整形和部分小数之外，很多数都是不精确的，这其实相当于十进制中有理数和无理数。  &lt;/p&gt;
&lt;h3&gt;IEEE浮点表示&lt;/h3&gt;
&lt;p&gt;IEEE浮点表示规则是一种当前几乎所有计算机遵循的通用标准，它规定一个浮点数的构造如下：  &lt;/p&gt;
&lt;p&gt;$$(-1)^s * M * 2^e$$  &lt;/p&gt;
&lt;p&gt;其中，s为符号，M为尾数，是一个二进制小数，E为阶码，其作用为对浮点数加权，可以为负数。我们可以很清晰看到，这实际上是一种科学计数法。下表表示了一个32位浮点数：  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;31&lt;/th&gt;
&lt;th&gt;30~23&lt;/th&gt;
&lt;th&gt;22~0&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;exp&lt;/td&gt;
&lt;td&gt;frac&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其中&lt;code&gt;s&lt;/code&gt;为符号位，&lt;code&gt;exp&lt;/code&gt;为为模式或者阶码，&lt;code&gt;frac&lt;/code&gt;为尾数，通过设置&lt;code&gt;exp&lt;/code&gt;可以将浮点数设为几种不同的模式：  &lt;/p&gt;
&lt;h4&gt;规格化的值&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;exp&lt;/code&gt;各位不全为0或1时，为规格化的值。此时，阶码被解释为一个以偏置形式表示的有符号整数，为阶码&lt;code&gt;E=exp-Bias&lt;/code&gt;，&lt;code&gt;exp&lt;/code&gt;被作为无符号整数，而&lt;code&gt;Bias&lt;/code&gt;为exp位数减1所能代表的最大有符号数减1。同时，此时&lt;code&gt;frac&lt;/code&gt;被作为一个整数位为0的小数的小数位，尾数为&lt;code&gt;frac+1&lt;/code&gt;，即将整数位替换为1，这种方式被称作&lt;code&gt;隐含的以1开头&lt;/code&gt;的表示。于是，此时的数为：  &lt;/p&gt;
&lt;p&gt;$$x = (-1)^s * (1 + frac) * 2^{exp - Bias}$$&lt;/p&gt;
&lt;h4&gt;非规格化的值&lt;/h4&gt;
&lt;p&gt;这种格式的一个作用是表示&lt;code&gt;0&lt;/code&gt;，&lt;code&gt;exp&lt;/code&gt;和&lt;code&gt;frac&lt;/code&gt;全为0时，当&lt;code&gt;s&lt;/code&gt;为0时，表示数&lt;code&gt;+0.0&lt;/code&gt;，&lt;code&gt;s&lt;/code&gt;为1时，表示数&lt;code&gt;-0.0&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;另一个作用是表示非常接近于0的数，此时&lt;code&gt;exp&lt;/code&gt;仍然为0，但是&lt;code&gt;frac&lt;/code&gt;却不一定，这提供了一种叫做&lt;code&gt;逐渐溢出&lt;/code&gt;的属性。此时的&lt;code&gt;E=1 - Bias&lt;/code&gt;，&lt;code&gt;M=frac&lt;/code&gt;，使得从最小规格数到最大非规格数的平滑过渡。  &lt;/p&gt;
&lt;h4&gt;特殊值&lt;/h4&gt;
&lt;p&gt;当&lt;code&gt;exp&lt;/code&gt;各位全为1时，表示特殊值。若&lt;code&gt;frac&lt;/code&gt;全为0，得到的值表示无穷，&lt;code&gt;s&lt;/code&gt;为0为正无穷，否则为负无穷。若&lt;code&gt;frac&lt;/code&gt;不为0，则值为&lt;code&gt;NaN&lt;/code&gt;，这表示运算结果不是一个实数或者无穷值。  &lt;/p&gt;
&lt;h4&gt;为何如此设计&lt;/h4&gt;
&lt;p&gt;一切设计都是为了平滑、方便。比如如果将浮点数解释为无符号整数，会发现在浮点数自身升序排列时，此整数也是升序的，它们有着一致性，这意味着可以用一套排序解决两个问题。&lt;/p&gt;
&lt;h3&gt;舍入&lt;/h3&gt;
&lt;p&gt;由于浮点数无法准确表示很多数字，所以舍入就显得有些重要，IEEE浮点格式规定了四种不同的摄入方式，分别为&lt;code&gt;向偶数舍入&lt;/code&gt;、&lt;code&gt;向上舍入&lt;/code&gt;、&lt;code&gt;向下舍入&lt;/code&gt;、&lt;code&gt;向零舍入&lt;/code&gt;四种。  &lt;/p&gt;
&lt;p&gt;后三种已经在前面的有符号乘法探讨过，看似最符合直觉，但实际上浮点数中默认使用的却是向偶数舍入。对于一个二进制数，最低位为1则为奇数，否则为偶数。&lt;br /&gt;
当&lt;code&gt;XXX...YYY...Y100&lt;/code&gt;这种形式时，向偶数舍入才有效，我们总是倾向于让最低位为0。&lt;/p&gt;
&lt;h3&gt;运算&lt;/h3&gt;
&lt;p&gt;浮点数运算基本上可以看做是两个浮点数精确运算后的舍入解，但考虑到浮点数种有规格外和特殊的值（&lt;code&gt;Nan&lt;/code&gt;、&lt;code&gt;inf&lt;/code&gt;等），所以运算并非总是可以这么去做。&lt;br /&gt;
由于舍入的存在，浮点数运算也不具备结合性。例如，对于&lt;code&gt;0.000001 + 1000000 - 1000000&lt;/code&gt;和&lt;code&gt;0.000001 + (1000000 - 1000000)&lt;/code&gt;，其结果就完全不同，前一个式子在第一运算中由于舍入会将0.000001丢失。  &lt;/p&gt;
&lt;h3&gt;C中的浮点数&lt;/h3&gt;
&lt;p&gt;在C中，浮点数有&lt;code&gt;float&lt;/code&gt;个&lt;code&gt;double&lt;/code&gt;两种类型，前者单精度，32bits，后者双精度，64bits。但由于C中不要求机器使用IEEE标准，所以对于特殊值，并没有标准要求，不同编译器定义不同。  &lt;/p&gt;
&lt;p&gt;需要注意的是强制类型转换的时候，会发生许多期望之外的状况：  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;int&lt;/code&gt;转为&lt;code&gt;float&lt;/code&gt;或者&lt;code&gt;double&lt;/code&gt;时不会溢出但可能舍入，&lt;code&gt;double&lt;/code&gt;转为&lt;code&gt;float&lt;/code&gt;时可能发生溢出为正负无穷的状况，&lt;code&gt;double&lt;/code&gt;和&lt;code&gt;float&lt;/code&gt;到&lt;code&gt;int&lt;/code&gt;时发生向零舍入。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;习题&lt;/h2&gt;
&lt;p&gt;所有有代码的练习都以以题号为名字的单个文件内。  &lt;/p&gt;
&lt;p&gt;代码位于&lt;a href=&amp;quot;https://github.com/dtysky/CSAPP/tree/master/CSAPP/Chapter2&amp;quot;&gt;CSAPP-Chapter2&lt;/a&gt;内。&lt;/p&gt;
&lt;h3&gt;17&lt;/h3&gt;
&lt;p&gt;基础计算，略过。  &lt;/p&gt;
&lt;h3&gt;18&lt;/h3&gt;
&lt;p&gt;A: 0b0000000110111000 = 440&lt;br /&gt;
B: 0b0000000000010100 = 20&lt;br /&gt;
C: 0b1111111001011000 = - (0b0000000110100111 + 1) = -424&lt;br /&gt;
......  &lt;/p&gt;
&lt;h3&gt;19&lt;/h3&gt;
&lt;p&gt;将十进制的二进制补码表示按照二进制无符号数解释即可。&lt;/p&gt;
&lt;h3&gt;20&lt;/h3&gt;
&lt;p&gt;比如对于&lt;code&gt;-8&lt;/code&gt;，其补码为&lt;code&gt;1000&lt;/code&gt;，位宽&lt;code&gt;w = 4&lt;/code&gt;，所以，补码转换为无符号数的结果为&lt;code&gt;$-8 + 2^4 = 8$&lt;/code&gt;，结果和直接将二进制解释为无符号数时一致。  &lt;/p&gt;
&lt;h3&gt;21&lt;/h3&gt;
&lt;p&gt;只需要注意有符号数和无符号是在计算式会被隐式转换为无符号数即可。  &lt;/p&gt;
&lt;h3&gt;22&lt;/h3&gt;
&lt;p&gt;对于A：  &lt;/p&gt;
&lt;p&gt;$$x = -1 * 2^3 + 1 * 2 + 1 * 1 = -5$$  &lt;/p&gt;
&lt;p&gt;对于其他也一样。  &lt;/p&gt;
&lt;h3&gt;23&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fun1&lt;/code&gt;先对&lt;code&gt;word&lt;/code&gt;左移24位，再逻辑右移24位，之后转换为有符号数。&lt;br /&gt;
&lt;code&gt;fun2&lt;/code&gt;先将&lt;code&gt;word&lt;/code&gt;转换为有符号数，之后左移24位，再算术右移24位。  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;w&lt;/th&gt;
&lt;th&gt;fun1(2)&lt;/th&gt;
&lt;th&gt;fun2(w)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0x00000076&lt;/td&gt;
&lt;td&gt;0x00000076&lt;/td&gt;
&lt;td&gt;0x00000076&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x87654321&lt;/td&gt;
&lt;td&gt;0x00000021&lt;/td&gt;
&lt;td&gt;0x00000021&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x000000c9&lt;/td&gt;
&lt;td&gt;0x000000c9&lt;/td&gt;
&lt;td&gt;0xffffffc9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xedcba987&lt;/td&gt;
&lt;td&gt;0x00000087&lt;/td&gt;
&lt;td&gt;0xffffff87&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;24&lt;/h3&gt;
&lt;p&gt;位级去掉最高位，将剩余解释为有符号或者无符号数即可。  &lt;/p&gt;
&lt;h3&gt;25&lt;/h3&gt;
&lt;p&gt;详见代码。  &lt;/p&gt;
&lt;p&gt;当数组长度为0时，由于&lt;code&gt;length&lt;/code&gt;为无符号数，所以&lt;code&gt;length - 1&lt;/code&gt;语句将得到一个无符号数的结果，在32bits的机器上，此结果为&lt;code&gt;0xffffffff&lt;/code&gt;对应的无符号数，是一个很大的正数。所以在循环时，会有数组越界发生，即访问未初始化的存储区域，发生错误。  &lt;/p&gt;
&lt;p&gt;将&lt;code&gt;i &amp;lt;= length - 1&lt;/code&gt;改为&lt;code&gt;i &amp;lt; length&lt;/code&gt;可破。&lt;/p&gt;
&lt;h3&gt;26&lt;/h3&gt;
&lt;p&gt;详见代码。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;size_t&lt;/code&gt;为无符号数，&lt;code&gt;s&lt;/code&gt;与&lt;code&gt;t&lt;/code&gt;的长度的相减也会的到一个无符号结果，这使得改结果与0相比较大或相等，无法得到正确结果。&lt;br /&gt;
将相减后与0比较直接改为两个长度相比较即可。  &lt;/p&gt;
&lt;h3&gt;27&lt;/h3&gt;
&lt;p&gt;比较x + y 和 x（或y）的大小即可。&lt;/p&gt;
&lt;h3&gt;28&lt;/h3&gt;
&lt;p&gt;套公式，略过。  &lt;/p&gt;
&lt;h3&gt;29&lt;/h3&gt;
&lt;p&gt;基础计算，略过。  &lt;/p&gt;
&lt;h3&gt;30&lt;/h3&gt;
&lt;p&gt;详见代码。  &lt;/p&gt;
&lt;p&gt;溢出只有可能在&lt;code&gt;x&lt;/code&gt;和&lt;code&gt;y&lt;/code&gt;同号时出现，都为正时可能发生正溢出，即最终和为负，都为负时则可能发生负溢出，即和最终为正。&lt;/p&gt;
&lt;h3&gt;31&lt;/h3&gt;
&lt;p&gt;溢出是可逆的，即便&lt;code&gt;sum&lt;/code&gt;溢出了，但&lt;code&gt;sum - x = y&lt;/code&gt;却还是成立的。  &lt;/p&gt;
&lt;h3&gt;32&lt;/h3&gt;
&lt;p&gt;因为补码的值域不是关于y轴对称的，所以当&lt;code&gt;y&lt;/code&gt;为&lt;code&gt;INT_MIN&lt;/code&gt;时，&lt;code&gt;-y&lt;/code&gt;会直接发生溢出，变为&lt;code&gt;y&lt;/code&gt;，此时如果&lt;code&gt;x&lt;/code&gt;为0，题目所示的函数将不会认为溢出，但实际上已经溢出了。  &lt;/p&gt;
&lt;p&gt;在原先的代码加一个分支即可。&lt;/p&gt;
&lt;h3&gt;33&lt;/h3&gt;
&lt;p&gt;0xF的补码是其自身，其他都是相反数。  &lt;/p&gt;
&lt;h3&gt;34&lt;/h3&gt;
&lt;p&gt;基础运算，略过。&lt;/p&gt;
&lt;h3&gt;35&lt;/h3&gt;
&lt;h3&gt;1&lt;/h3&gt;
&lt;p&gt;$$B2T_{2w}(x) = -x_{2w-1} 2^{2w-1} + x_{2w-2} 2^{2w-2} + ... + x_w * 2^2 + \sum_{i=0}^{w-1}x_i2^i$$  &lt;/p&gt;
&lt;p&gt;$$=2^w({-x_{2w-1} 2^{w-1} + x_{2w-2} 2^{w-2} + ... + x_w}) + \sum_{i=0}^{w-1}x_i2^i$$  &lt;/p&gt;
&lt;p&gt;$$=2^w({-x_{2w-1} 2^{w-1} + \sum_{i=0}^{w-2} x_i2^i}) + \sum_{i=0}^{w-1}x_i2^i$$  &lt;/p&gt;
&lt;p&gt;$$=2^wv + u$$  &lt;/p&gt;
&lt;p&gt;已知有符号和无符号乘法在位形式上一致，令上述公式的&lt;code&gt;x=x*y&lt;/code&gt;，其中&lt;code&gt;p&lt;/code&gt;是乘积&lt;code&gt;x*y&lt;/code&gt;在w位时的补码形式，则有：  &lt;/p&gt;
&lt;p&gt;$$u=p_{w-1}2^w+p$$  &lt;/p&gt;
&lt;p&gt;于是有：  &lt;/p&gt;
&lt;p&gt;$$x*y = 2^w(v+p_{w-1})+p$$  &lt;/p&gt;
&lt;p&gt;令&lt;code&gt;$t = v+p_{w-1}$&lt;/code&gt;则：  &lt;/p&gt;
&lt;p&gt;$$x*y = t2^w+p$$  &lt;/p&gt;
&lt;p&gt;即证。  &lt;/p&gt;
&lt;h3&gt;2&lt;/h3&gt;
&lt;p&gt;由于&lt;code&gt;p&lt;/code&gt;是一个整数，所以其总是可以被分解为一个非零整数、商和余数的和，即：  &lt;/p&gt;
&lt;p&gt;$$p = xq + r$$  &lt;/p&gt;
&lt;p&gt;即证。  &lt;/p&gt;
&lt;h3&gt;3&lt;/h3&gt;
&lt;p&gt;令&lt;code&gt;q=y&lt;/code&gt;，则有：  &lt;/p&gt;
&lt;p&gt;$$p = xy + r$$  &lt;/p&gt;
&lt;p&gt;而&lt;code&gt;$p=xy-t2^w$&lt;/code&gt;，固有：  &lt;/p&gt;
&lt;p&gt;$$r=-t2^w$$  &lt;/p&gt;
&lt;p&gt;由于&lt;code&gt;r&lt;/code&gt;的绝对值小于&lt;code&gt;x&lt;/code&gt;的绝对值，而&lt;code&gt;x&lt;/code&gt;又是一个补码，所以&lt;code&gt;x&lt;/code&gt;的最大值为&lt;code&gt;$2^w$&lt;/code&gt;，同时&lt;code&gt;t&lt;/code&gt;为一个大于等于1的数，所以要使此等式成立，&lt;code&gt;r&lt;/code&gt;和&lt;code&gt;t&lt;/code&gt;都必须为0，即证。&lt;/p&gt;
&lt;h3&gt;36&lt;/h3&gt;
&lt;p&gt;详见代码。  &lt;/p&gt;
&lt;h3&gt;37&lt;/h3&gt;
&lt;p&gt;改进是这段代码的乘法计算部分不再溢出，但由于malloc的最后一个参数是&lt;code&gt;size_t&lt;/code&gt;，所以还是存在问题的。  &lt;/p&gt;
&lt;p&gt;解决方法就是将相乘的两个数都声明为int型，这样它们都为正数时，相乘放入一个&lt;code&gt;size_t&lt;/code&gt;中时便不会溢出。&lt;br /&gt;
而实际上，这两个值的确都是正数。&lt;/p&gt;
&lt;h3&gt;38&lt;/h3&gt;
&lt;p&gt;b为0时，可以计算1、2、3、8倍，为a时，可以计算2、3、5、9倍。  &lt;/p&gt;
&lt;h3&gt;39&lt;/h3&gt;
&lt;p&gt;$$(2^{n+1} - 2^m)x = 2^m(2^{n+1-m}-1)x$$  &lt;/p&gt;
&lt;p&gt;即：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;((x &amp;lt;&amp;lt; n+1-m) - x) &amp;lt;&amp;lt; m&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;40&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;x &amp;lt;&amp;lt; 3 - x &amp;lt;&amp;lt; 1 &lt;/li&gt;
&lt;li&gt;x &amp;lt;&amp;lt; 5 - x&lt;/li&gt;
&lt;li&gt;x &amp;lt;&amp;lt; 1 - x &amp;lt;&amp;lt; 3&lt;/li&gt;
&lt;li&gt;y = x &amp;lt;&amp;lt; 2 + x; y &amp;lt;&amp;lt; 1 + y &amp;lt;&amp;lt; 3&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;41&lt;/h3&gt;
&lt;p&gt;如果n有可能超过位宽，选A。&lt;br /&gt;
否则，选B。&lt;/p&gt;
&lt;h3&gt;42&lt;/h3&gt;
&lt;p&gt;详见代码。  &lt;/p&gt;
&lt;p&gt;可以使用31位的符号右移确定&lt;code&gt;x&lt;/code&gt;是正数或者负数，而后使用&lt;code&gt;mask&lt;/code&gt;得到合适的偏置，最后直接根据公式求解。&lt;/p&gt;
&lt;h3&gt;43&lt;/h3&gt;
&lt;p&gt;$$M = 2^6 - 1$$  &lt;/p&gt;
&lt;p&gt;$$N = 2^3$$&lt;/p&gt;
&lt;h3&gt;44&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;要使该式为假则必须要找到整数&lt;code&gt;x&lt;/code&gt;，使得&lt;code&gt;x-1&amp;gt;=0&lt;/code&gt;且&lt;code&gt;x&amp;lt;=0&lt;/code&gt;，这样的&lt;code&gt;x&lt;/code&gt;在C中是存在的，即&lt;code&gt;x=INT_MIN&lt;/code&gt;，减1运算后会发生溢出。  &lt;/li&gt;
&lt;li&gt;若&lt;code&gt;x&amp;amp;7&lt;/code&gt;为7则&lt;code&gt;x&lt;/code&gt;的低三位全为1，而&lt;code&gt;x&amp;lt;&amp;lt;29&lt;/code&gt;大于0则&lt;code&gt;x&lt;/code&gt;的倒数第3位为0，这样的&lt;code&gt;x&lt;/code&gt;不存在，所以原式必然为真。  &lt;/li&gt;
&lt;li&gt;当结果会溢出的时候，原式便可能为假。  &lt;/li&gt;
&lt;li&gt;事实上，整数&lt;code&gt;x&lt;/code&gt;如果不是负数就是0要么就是正数，并且原式没有特别的边界情况，恒成立。  &lt;/li&gt;
&lt;li&gt;与4基本一致，但当&lt;code&gt;x=INT_MIN&lt;/code&gt;的时候，&lt;code&gt;-x&lt;/code&gt;由于溢出仍然为&lt;code&gt;x=INT_MAX&lt;/code&gt;,还是为负，这可以使得原式为假。  &lt;/li&gt;
&lt;li&gt;恒成立，C中，当无符号数和有符号数做运算时，会把有符号数转为无符号数，而有符号数和无符号数在位级上运算又是等价的。  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-y=~y+1&lt;/code&gt; -&amp;gt; &lt;code&gt;~y=-y-1&lt;/code&gt;，所以这个式子本质上和6中的一致，原式成立。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;45&lt;/h3&gt;
&lt;p&gt;基础运算，略过。  &lt;/p&gt;
&lt;h3&gt;46&lt;/h3&gt;
&lt;p&gt;A. 为0.{23个0}1100110011001100.......  &lt;/p&gt;
&lt;p&gt;B. 为$\sum_{i=-\inf}^{-24}a_i2^i$，其中，当&lt;code&gt;i % 4 == 0 or 1&lt;/code&gt;时，&lt;code&gt;$a_i=1$&lt;/code&gt;，否则为&lt;code&gt;0&lt;/code&gt;。求和如下：  &lt;/p&gt;
&lt;p&gt;$$sum = 2^{-24} + 2^{-25} + 2^{-28} + 2^{-29} + ......$$  &lt;/p&gt;
&lt;p&gt;$$=2^{-24}(1 + 1/2) + 2^{-28}(1 + 1/2) + ......$$  &lt;/p&gt;
&lt;p&gt;$$=3 * 2^{-25} * (1 + 2^{-4} + ......)$$  &lt;/p&gt;
&lt;p&gt;$$=1/(2^{20} * 10) \approx 9.53 * 10^{-8}$$  &lt;/p&gt;
&lt;p&gt;C. 约为 $9.53 * 10^{-8} * 36000 = 0.034$秒。  &lt;/p&gt;
&lt;p&gt;D. 约为0.034 * 2000 = 68米。  &lt;/p&gt;
&lt;h3&gt;47&lt;/h3&gt;
&lt;p&gt;基础计算，略过。  &lt;/p&gt;
&lt;h3&gt;48&lt;/h3&gt;
&lt;p&gt;整形数的二进制表示为&lt;code&gt;00000000001 101011001000101000001&lt;/code&gt;。&lt;br /&gt;
浮点数的二进制表示为&lt;code&gt;0 10010100  10101100100010100000100&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;浮点数的&lt;code&gt;s = 1&lt;/code&gt;，&lt;code&gt;exp = 148&lt;/code&gt; -&amp;gt; &lt;code&gt;e = 148 - 127 = 21&lt;/code&gt;，&lt;code&gt;frac = 0.6739811897277832&lt;/code&gt; -&amp;gt; &lt;code&gt;M = 1.6739811897277832&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;通过上面对比可见，整形表示的最后21位和浮点数&lt;code&gt;frac&lt;/code&gt;中的前21位是一致的。  &lt;/p&gt;
&lt;h3&gt;49&lt;/h3&gt;
&lt;p&gt;A.   &lt;/p&gt;
&lt;p&gt;$$min = 2^{n + 1} + 1$$  &lt;/p&gt;
&lt;p&gt;B. &lt;/p&gt;
&lt;p&gt;$$2^24 + 1 = 16777217$$&lt;/p&gt;
&lt;h3&gt;50&lt;/h3&gt;
&lt;p&gt;基本计算，略过。&lt;/p&gt;
&lt;h3&gt;51&lt;/h3&gt;
&lt;p&gt;A. 由于末尾0后两个1，原数加1舍入更为合理，即&lt;code&gt;x&apos; = 0.00011001100110011001101&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;B. 为&lt;code&gt;$\sum_{i=-\inf}^{-24}a_i2^i$&lt;/code&gt;，其中，当&lt;code&gt;i % 4 == 0 or 1&lt;/code&gt;时，&lt;code&gt;$a_i=0$&lt;/code&gt;，否则为&lt;code&gt;1&lt;/code&gt;。求和如下：  &lt;/p&gt;
&lt;p&gt;$$sum = 2^{-26} + 2^{-27} + 2^{-30} + 2^{-31} + ......$$  &lt;/p&gt;
&lt;p&gt;$$=2^{-26}(1 + 1/2) + 2^{-28}(1 + 1/2) + ......$$  &lt;/p&gt;
&lt;p&gt;$$=3 * 2^{-27} * (1 + 2^{-4} + ......)$$  &lt;/p&gt;
&lt;p&gt;$$=1/(2^{22} * 10) \approx  2.38 * 10^{-8}$$  &lt;/p&gt;
&lt;p&gt;C. 约为0.0008秒。  &lt;/p&gt;
&lt;p&gt;D. 约为1.71米。  &lt;/p&gt;
&lt;h3&gt;52&lt;/h3&gt;
&lt;p&gt;基础计算，略过。&lt;/p&gt;
&lt;h3&gt;53&lt;/h3&gt;
&lt;p&gt;假设1e400溢出位正无穷，则有：  &lt;/p&gt;
&lt;p&gt;POS_INFINITY = 1e400&lt;br /&gt;
NEG_INFINITY = -POS_INFINITY&lt;br /&gt;
NEG_ZERO = -1.0 / POS_INFINITY&lt;/p&gt;
&lt;h3&gt;54&lt;/h3&gt;
&lt;p&gt;A. 真，&lt;code&gt;int&lt;/code&gt;到&lt;code&gt;double&lt;/code&gt;的转换不会有任何精度损失，而转回时不会发生舍入。&lt;br /&gt;
B. &lt;code&gt;x&lt;/code&gt;为&lt;code&gt;INT_MAX&lt;/code&gt;时会发生溢出。&lt;br /&gt;
C. &lt;code&gt;d&lt;/code&gt;超过了&lt;code&gt;float&lt;/code&gt;的范围数会发生舍入。&lt;br /&gt;
D. 真，&lt;code&gt;float&lt;/code&gt;到&lt;code&gt;double&lt;/code&gt;的转换不会有任何精度损失，而转回时不会发生舍入。&lt;br /&gt;
E. 真，浮点数取反只影响符号位。&lt;br /&gt;
F. 真，整形和浮点数计算是会被转换为浮点数。&lt;br /&gt;
G. 真，即便&lt;code&gt;d*d&lt;/code&gt;发生了溢出到正无穷，但规则保证此不等式成立。&lt;br /&gt;
H. 当&lt;code&gt;f&lt;/code&gt;远大于&lt;code&gt;d&lt;/code&gt;时，会发生舍入。&lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Wednesday, 22 Jun 2016 21:00:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2016.06.22 21:00:article/Skill-2016_06_22_a</guid>
<category>CSAPP</category>
<category>计算机系统</category>
<category>信息存储</category>
<category>数据类型</category>
<category>整形</category>
<category>浮点数</category>
</item>

<item>
<title>【短篇小说】寒苍-晗樱-S1-α</title>
<link>http://dtysky.moe/article/Art-寒苍-晗樱-S1-α</link>
<description>&lt;p&gt;现实主义写作训练。  &lt;/p&gt;
&lt;p&gt;世界：平凡。&lt;br /&gt;
世界线：1。&lt;br /&gt;
人物：戴寒苍，命月晗樱。&lt;br /&gt;
情节：Scene1，α路线。&lt;br /&gt;
axxx&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;“有时候，我忘了我已不相信自己的话了，我就辩护的好。”——《堕落》，加缪。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;戴TY&lt;/code&gt;的名字并非一开始如此奇怪。刚生下来时，他的父母对他寄予厚望，找到了村里最有名的算命先生，先生说他日后必然非凡，所以名字要起得大气，于是便起了一个相当大气的名字。然而在起完名字后，先生表示这名字太大了，会招致神明的惩罚，但由于名字已经起完所以也管不了这么多，于是就这么定了。TY的父母对这个名字很满意，想着这么牛逼的名字即便是被神明惩罚也值了，全然不顾这个还没有决策权的小奶娃的意见，皆大欢喜。给完筹金后，先生表示很高兴，于是另外透露了一个天机——“这娃命被水克，不能下水”。三年后，他被健忘的父母带入小河中戏耍，差点溺亡，所以直到现在也没有学会游泳。  &lt;/p&gt;
&lt;p&gt;大约五岁时，TY的父母由于工作原因，将其留在了一个偏僻的乡下，由外婆带着（此时他的爷爷奶奶以及外公都以辞世）。这或许是TY第一次感受到无助，然而接下来，这个拥有牛逼名字的小屁孩很好得发挥了他们的特殊能力——健忘与愚蠢。这种无知的状态持续了大概三年——直到他的父亲第一次回来看他。那时，一种奇妙的感觉从他的心头滋生，之前在学校遭受的嘲笑和对自己觉得并不亲的亲戚的恐吓显现出来，这是他第一次感受到了恐惧。他觉得自己得有个朋友，然后他有了个朋友，这个朋友被他称为“TY”，帮他度过了无助与恐惧中的四年。  &lt;/p&gt;
&lt;p&gt;初中时，他被父母接回了工作地，环境的更替的复数次并没有使他习惯多少。之前是因为没有口音而被嘲笑，这次是因为有口音被嘲笑，不过这本质上都是一回事，不过这次的嘲笑还加上了另外的要素——贫穷。但这些其实都不是问题，因为处于初中二年级的他觉醒了某种力量——在对这种力量的修炼中，转眼，他就大学了。  &lt;/p&gt;
&lt;p&gt;大学后的第一件事，就是将他原有的名字替换成了TY，这并没有什么特别的原因，不过或许就是这个力量所推动的。这个力量让他觉得，这个世界上似乎有这么一件事，是他必须要去做的。这件事一开始并不清楚，他总是在尝试，但贫穷限定了他的资源和天赋。但这种情况在他的家庭稍微富裕了一些的时候改善了，并且也使得这件事情逐渐明晰——他并不知道是这个力量让他明白了这件事，还是这件事让他控制住了力量。总之，一切仿佛都在向着Happy end发展。然后，他毕业了。  &lt;/p&gt;
&lt;p&gt;TY毕业已经一年了，这一年中他换了两份工作，尝试了三四种新的兴趣，包括但不限于画画、摄影，甚至是异装等。虽然这些兴趣大都没有延续下来，但却无意中带给了他比大学时更加健康的身体。不错，他的体重下降了十公斤，身体的线条也更加好看了——即便这看起来并不是一个社会性别为“男”的人所应有的。  &lt;/p&gt;
&lt;p&gt;但他还是放弃了这些爱好，可能是由于时间成本太高，也可能是由于新鲜感的消失，亦或是财力不足，他“暂时”搁置了这些新的兴趣。不过最近他又重拾了开源事业，做了一两个项目，项目的过程是痛苦和激情并存，简而言之，是精彩的。但论其成果，却都是不完善的，总是不断有这样那样的bug和不断想添加的新需求，不过这其实也正常，哪个健壮的系统不是长年累月完善起来的。&lt;br /&gt;
然而，由于搞出来的东西实际上也没什么人用，所以也就被他暂时搁置了。  &lt;/p&gt;
&lt;p&gt;这一切或许都并不是问题，谁都有放弃的时候，在这个时代，扔掉十个八个一时起意的兴趣也不是稀奇事。问题在于伴随着这些项目的完结，他越发得沉默了。不久，他便做出了决策——即便是暂时放弃了兴趣，却还是要保留某些习惯，以免失去激情。所以今夜的他仍然一个人穿着那种不符合自己社会身份的衣服躺在这个租来的一百平的房子内——由于定期的保洁，房子的卫生还是很不错的。但似乎房子的面积，或者说，是二氧化碳的密度，和一个人的心境有着某种神秘的关联，密度高了，觉得闷，密度低了，又觉得空虚，这让他感到很不舒服——明明是由于之前住的四十平公寓太小才选的这里，现在一看似乎没有本质的区别，还花了更多的钱。  &lt;/p&gt;
&lt;p&gt;“下一次，租个六十平的单间就行了”。他常常这么自言自语。  &lt;/p&gt;
&lt;p&gt;这是一个深夜，他这阵子的持续性失眠并没有在这一天得到突然的改善。辗转了几个来回后，他摸了摸自己的嘴，觉得有些渴。他掀开被子坐了起来，拿起了手机，却又立马将其扔在一边，随即将身子挪到了床边，踉跄着下了楼，烧了壶水。他是在镜子前等待烧水壶完成工作的，镜子中的他没有以妆容和假发遮盖原始的性征，但却穿着LO服——楼下没有开空调，衣服很快就被汗所污染了。  &lt;/p&gt;
&lt;p&gt;“Shit，这可是Baby家的限定......”  &lt;/p&gt;
&lt;p&gt;他面无表情地对着镜中的自己嘟囔着。他凝视着自己，觉得自己很丑陋，但下一刻，又觉得自己不是那么丑陋，就在这种无聊而反复的意识漂流中，水开了。他拿出杯子，将昨晚没喝完的半杯倒掉，用水冲了一下，倒满了开水。  &lt;/p&gt;
&lt;p&gt;“看来一时半会是睡不着了。”他将水杯放在桌子上等待冷却，然后缓缓走到了窗边。  &lt;/p&gt;
&lt;p&gt;城市很大，也很繁华。即便是在郊区，也只能在这深更半夜才能将人造灯光的踪迹消去多数。得益于晴朗的天气，他透过玻璃向天空望了望，几颗星星那微弱的光映射到了他的眼中。这种平日罕见的景象让他透不过气来，虽然这更可能是由于那并不适宜的衣服，他还是莫名得难过了起来。为了透透气，他打开了窗户，将半个身子都伸了出去。  &lt;/p&gt;
&lt;p&gt;他的期望落空了，夜晚的风并不是那么平静柔和，有些冷，还有些糙。当然，即便有些不舒服，这风反而对驱散他的汗液十分有效，稍许，他便感觉舒服了一些。于是便保持着这样的姿势抬起了头，他视界中的景象也由楼房转移到了这些楼房上方的天空。    &lt;/p&gt;
&lt;p&gt;不知是除去了玻璃的影响——他的光学学的并不好，还是夜里的风，他清醒了许多。那些星星在他眼中也变得更加清晰了，虽然并没有童话中一闪一闪的跃动感，但也比平日要活泼的多。然而，这些占据了他视界大部分的星星以及周边单调的天空却并没有在他的意识中占据相同的空间，占据着他意识中绝大部分空间的，是那轮整体很圆，却又在局部有些扁平的月亮。月亮虽然不够圆满，但亮度却很是不错，差不多到了可以用“皎洁”这个词来形容的程度。  &lt;/p&gt;
&lt;p&gt;望着这个月亮，他想起了那双眼睛。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;第二天是周六，TY像往常一样和同事在公司在项目中愉快得玩耍并由衷地“享受”着这种玩耍。在被故意调低了亮度的显示器上是一个运行着的终端，终端被tmux分为了四个工作区，光标停留在右下角的那个区域——此区域的工作目录名为“NotesLife”，此目录中存的是一些被他作为日记的文档，每个文档都以&lt;code&gt;YYYY-MM-DD&lt;/code&gt;形式格的日期作为文件名。日记本身使用markdown进行编写，简洁又不失丰富。  &lt;/p&gt;
&lt;p&gt;他用vim打开了一篇日记。这种行为对他而言是非常自然的，得益于过去的习惯，他几乎每天都会记上那个几个琐事在日记里然后同步到Github。虽然这一年来每篇日记中的平均字数越来越少，他的确还是在记录着。然而和以往不同，现在的他做出了和惯性完全相悖的行为——此时正在编辑的日记文件名并非今日，而是六天前，也就是上一个周日。此行为的反常在于他在半年前做出的那个决定——绝对不会再修改以前的日记，也不允许翻看。虽然这个行为看起来没有任何的道理，但他还是一如既往得由于自己的原则性遵守着，直到刚才。  &lt;/p&gt;
&lt;p&gt;“你小子在干什么，活干完没就在这摸鱼。”在盯着日记发呆的时候，一个沉稳的男声从方无的后脑勺之上传来，随后，仿佛是膝跳反射一般，他迅速地按下了快捷键，切换了屏幕上的工作区。  &lt;/p&gt;
&lt;p&gt;“不要随便窥视别人的隐私，明明都中年了连这点scene都没有么。”TY的声音一如既往的小，这种小声和他的身躯融合起来，显得有些弱气。但与这种表面上的感觉相反，他说的话却是毫不留情，让人感到十分不舒服。  &lt;/p&gt;
&lt;p&gt;“你这小子，一直都这样说话？”中年男人离开了方无身后，一步就走到了他的侧面。“怪不得没有女朋友。”  &lt;/p&gt;
&lt;p&gt;“我没女朋友吃你家大米啦。”他的眼睛没有离开屏幕，手也没有离开键盘。刚才的情绪波动并没有对他在现实中的身体产生任何影响。  &lt;/p&gt;
&lt;p&gt;“怎么，有什么害羞的事情？”中年男人社会经验十分丰富，并没有对他眼中的这个小屁孩的话语产生任何情绪反应。  &lt;/p&gt;
&lt;p&gt;“你在搞笑么，我什么时候会害羞。”TY的反驳没有丝毫迟疑。  &lt;/p&gt;
&lt;p&gt;“是吗，那你有什么必要这么遮遮挡挡的？”中年男人体态虽然比较丰满，但却十分敏捷，趁TY不注意，他已经凭借丰富的工作经验在转眼之间就将屏幕切回了方才的终端。  &lt;/p&gt;
&lt;p&gt;“......”二者看着终端上的日记，同时陷入了沉默。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# YYYY年MM月DD日&lt;br /&gt;
......&lt;br /&gt;
## 黄昏&lt;br /&gt;
他们拉我去聚会，但其实我TM一点也不想去。不过这次领导也在场，所以不去也不太好——这样来几次这公司就没我的容身之处了。虽然对于完全看不到未来的的我而言，换个公司、频繁跳槽也不是什么事，不过由于最近那种额外的疲惫所以暂时还不想去准备面试跑来跑去的。  &lt;/p&gt;
&lt;p&gt;聚会过程没有任何的意外，无非就是吃吃喝喝闲聊，我对他们的话题没有任何兴趣——即便是有兴趣也懒得发言。当然，我并非一开始就是如此的，过去我也曾尝试过加入这些讨论，然而当我发现我的严肃认真的发言在他们看来不过是狗屎之后便打消了这种念头，他们要的只是消费以及被消费的谈资而已，这毫无意义。我也没有喝酒，因为我觉得那玩意很TM难喝，无法带来任何快感，所以即便是领导表示出了些许的不满，我也没有任何妥协的迹象。总之就在这种无聊刷手机的过程中，时间最终非常明智得放过了我，聚会就这么结束了。  &lt;/p&gt;
&lt;p&gt;按照以往的经验，这样的一次活动基本就毁了我的整个周末——虽然我周末也只是在发呆而已，但我认为即便是发呆也比这种行为有价值。然而这次却不同，因为我在归程发现了她——虽然感觉整体的设计和装束华丽得过于浮夸，非常不符合我的审美习惯，但她的那双眼睛中似乎有着什么东西在吸引着我。在假装离开众人回家之后，我立马返回了她所在的那个展览柜，看着她的眼睛，不知不觉中在那呆呆站了许久，或许是一个小时，又或许是两个小时，也或许更长。我最终是被这家商场的员工赶走的，那家店的名字叫做“MagicDoll”......&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;“年轻人，看来你的想法很多啊。”中年男人早已将手早已离开了键盘，并放在了TY的一个肩膀上。“这个社会，没你想的这么简单。”接下来的语气与方才的豪爽不同，分贝小了几度的同时也显得有些沉重，同时将TY肩膀上的手移开了。  &lt;/p&gt;
&lt;p&gt;“你是想说你曾经与我一样，但最后还是无可避免得成为了无聊的中年人么？”TY并没有被这忽然严肃的氛围吓到，尽管他的心里的确有些不适，但这并没有体现在身体上。  &lt;/p&gt;
&lt;p&gt;“......”中年男人顿了顿，“或许吧，你说的没错。”他没有反驳，但很快便恢复了刚才的轻松状态——他丰富的社会经验告诉他，生活和工作不能走得太近，不能把所有的同事都当做是朋友。“看起来你对那个娃娃很感兴趣？”他紧接着转移了话题。  &lt;/p&gt;
&lt;p&gt;“不是娃娃，是人偶，它很明显不是你们所想的那种东西。而且就算是那种东西，使用起来也很麻烦好么？不要想得这么简单。”&lt;br /&gt;
“看起来你在某些方面的经验也很丰富。”&lt;br /&gt;
“我只是对任何东西都很严肃而已。”  &lt;/p&gt;
&lt;p&gt;几句交锋之间，话题已经被成功转移了，按照既定的惯性，这个中年男人应该返回他的工位，继续着他尚未完成的工作，然后大家各自回家——回家前可能还会一起去吃顿饭。但他并没有这么做，而是再次陷入了沉默，在这种沉默的气氛中，大约过了五分钟，中年男人再次说话了。  &lt;/p&gt;
&lt;p&gt;“小子，有想法是不错，但要注意保护自己。即使你现在觉得自己一无所有，但最终还是要承担责任的。在这个过程中，要务必保持清醒，不要迷失自己。”他站在了一个长者的立场，说着这些明知会被TY厌恶的话。  &lt;/p&gt;
&lt;p&gt;“......”而TY却少有地没有作出反驳。  &lt;/p&gt;
&lt;p&gt;“她的眼睛的确很漂亮。”中年男人慢慢转过了身，走向了自己的工位。“对了，还有一句忠告。”然后在半路停下来。&lt;br /&gt;
“结婚前，要务必考虑清楚。婚姻为你带来脱离空虚的价值后，可能会顺便毁了你的一切。”  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;周日的休息是TY一直所坚守的底线，虽然这个休息对他的身体本质上而言并不会造成特别的改善，或者说并非是绝对必要的，而且放弃这种休息还能给他带来更好的发展前景，但他仍然如此坚持着。这对他而言，是一种仪式，是保证自己不被某些无聊玩意湮没的重要的仪式。所以，今天他也保持着这个底线。  &lt;/p&gt;
&lt;p&gt;然而不同于以往，今天的TY没有在家里——在那个对于二氧化碳浓度过低的地方放空自己，而是走上了地铁。他使用耳机产生了随身而动的BGM力场，拿出一本书无聊得看着，在这种状态中时间过得总是很快，他到达了目的车站。望了望前上方写着&lt;code&gt;4-&amp;gt;&lt;/code&gt;的牌子，跟随着指引走出了地铁站。人的密度并没有随着场景的切换变少，但由于绝对空间体积的变化，二氧化碳的密度低了许多。人们走来走去，汇成了几条河流，TY就在最宽、最汹涌的那条河流中流动着，大概十五分钟后，他到达了目的地。  &lt;/p&gt;
&lt;p&gt;这是一个标准的现代综合型商城，划分为不同功能的若干层和中间的螺旋式走廊构成了它的主体，无论是什么类型的商户，只要是合法的，基本都可以在这里找到自己的容身之处。当然，这个容身之处的成本还是不低的。租一个店面的成本和店面的位置非常相关，这个一般是根据店铺运营者对于自己营业额的期望和商品性质决定的，对于那些一般不怎么会有人感兴趣、去购买的商品或者装饰品之类的店面，一般都会放在不怎么起眼的位置——比如那些拐角、夹缝之中。而现在处于TY对面的，就是这样的一家店面。或许连“店面”都称不上，不过是一个单纯的展示柜而已。  &lt;/p&gt;
&lt;p&gt;“......”TY瞟了一眼不远处的店员，欲言又止，直到最后也没有发出询问。而是不断地观察、观察着对面这个人偶的每一处，试图找到一些信息——上次他已经得知了她的名字叫做&lt;code&gt;Sakura&lt;/code&gt;，是某个濒临破产的、不知名的手工作坊的作品。但这点信息是完全不够的，TY有一种冲动，一种想要得到她的冲动，所以，他需要得到一个方法，一个如何才能得到她的方法。而作为一个商品，最合理的方法自然是&lt;code&gt;消费&lt;/code&gt;。通过交易来获取商品似乎是这个社会天经地义的铁则，所以，他正在寻找的，自然也就是商品的&lt;code&gt;价格&lt;/code&gt;，其具象化的表现也就是价格标牌。然而TY找了许久也没有找到这样的标牌，似乎Sakura的身上并没有除了构成她的必要存在之外的任何东西。这作为一个这样的一个标准的现代综合型商城中的商品显然是失职的，也是不怎么可能的，所以TY仍然在尽力找着——这让他的姿势在店员眼中变得十分可疑。  &lt;/p&gt;
&lt;p&gt;“客人，你在做什么？”店员走进，质问着TY。  &lt;/p&gt;
&lt;p&gt;“嗯？啊，不好意思。”TY礼貌得道了个歉。“我在找东西。”  &lt;/p&gt;
&lt;p&gt;“没关系，不过客人很面熟啊，是不是上周也一直看着我们的这个商品？”&lt;br /&gt;
“啊，大概吧，不过只看了一会。”  &lt;/p&gt;
&lt;p&gt;TY含糊其词，不想让对方想起他是在若干次提醒后被赶走的。  &lt;/p&gt;
&lt;p&gt;“这样啊，那么您在找什么？”店员友好得想要伸出援手。  &lt;/p&gt;
&lt;p&gt;“这个嘛...”TY犹豫了一下，他知道他在犹豫什么，但还是问出口了：“Sakura的价格是？”  &lt;/p&gt;
&lt;p&gt;“嗯？”店员迟疑了些许，然后忍不住笑了起来，虽有又迅速得憋住——这让他的面颊通红。“Sakura是说这个吧？”他指了指人偶。  &lt;/p&gt;
&lt;p&gt;“是...怎么。”TY感到有些不爽，不过这种不爽已经在方才的犹豫中被预演过了，所以并没有造成什么影响。  &lt;/p&gt;
&lt;p&gt;“没什么。”店员很快恢复了营业姿态，然后问道：“您，今年多大了？”  &lt;/p&gt;
&lt;p&gt;“干什么，人口调查？”&lt;br /&gt;
“不，只是觉得，您其实可以选择更加符合您这个年龄的，比如那家。”店员一边说着一边指向了不远处的一家店面。  &lt;/p&gt;
&lt;p&gt;“......”TY当然明白店员为什么会这么说。他对那家店再熟悉不过——那是一家卖DD娃娃专卖店，一般裸娃价格在三千左右，加上几套衣服也不过几千，还是可以轻易承担得起的。  &lt;/p&gt;
&lt;p&gt;“怎么，你们店连报价都分阶级？”虽然做过了充分的准备，TY还是表现出了些许的愤怒。  &lt;/p&gt;
&lt;p&gt;“没有，只是个人建议而已。”店员微笑着。“那么就说了，这个东西的价格是——”  &lt;/p&gt;
&lt;p&gt;TY在归程的地铁上，不断回想着Sakura的姿态，虽然外表过于浮夸，虽然衣服过于繁复，虽然皮肤过于透亮，虽然嘴唇过于妖艳，虽然头发过于晶莹，但那双眼睛已经印在了他的脑海深处——他在那双眼睛中看到了什么，那似乎是纯净的天空，又似乎是整个浩瀚的宇宙。此刻，他下定了决心，他要改变自己。为了得到Sakura，他要改变自己，即使放弃一些东西。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;TY选择了离职，之前的环境对于他计划的实行实在过于障碍，所以他在第二天就提交了离职申请。公司内部对他的这个决定非常惊讶，不过又纷纷表示在意料之中——只不过没想到会这么快而已。不过介于流程，领导还是找他谈了次话，他顺利通过了流程，他感谢了公司，感谢了领导，感谢了大家，在一番寒暄之后，他迅速得拿到了离职证明。在这个过程中他表现了前所未有的情商，大家纷纷表示很受用，除了那个窥视过他秘密的中年男人。那个男人似乎想对TY说些什么，但TY并不想听他说，总是用一些空洞无意义的话题掩盖过去——就像他们在聚会时惯用的那样。  &lt;/p&gt;
&lt;p&gt;离职后的生活远没有工作时轻松。由于还有些积蓄，预交的房租也还够两个月，所以他并没有选择去立即找工作。这段时间中，他购买了《编程之美》、《算法大全》、《程序员面试宝典》等书，在&lt;code&gt;LeetCode&lt;/code&gt;中刷题，针对各大公司的招聘需求针对性得学习&lt;code&gt;react&lt;/code&gt;等框架、学习&lt;code&gt;webpack&lt;/code&gt;等构建工具，他甚至还专门去找一些没什么意义的类bug以便于提交issue。两个月后，他获得了一份工作，薪水是现在的两倍。  &lt;/p&gt;
&lt;p&gt;新公司公司规模较大，氛围虽然感觉不好于之前的，但也还不错。作为业界的领头羊之一，改一个控件需要走两周的流程是十分正常的。在这种公司，技术本质上只是作为面试的门槛而已，它们在实际的工作中并不重要——这对于TY有些难以忍受。但他没有表示出任何的不快，而是表现出十分努力的样子。他虚心请教他的导师——即便那些问题根本不是问题；他主动承担部门的一切活动——即便在过程中他感到恶心；他在聚会中总是在敬酒——为此他专门训练了酒量。然而即便是如此，年底的绩效评优中他并不是A，而是B。领导对他的新年寄语中写的是——“再接再厉，争做部门伟大的基石。”  &lt;/p&gt;
&lt;p&gt;“QNMB的基石。”TY对着屏幕上的寄语恶狠狠得说着。随后，他离开了房间，坐了比以往更远的地铁到达了那个商场——即便是如此忙碌的一年，他还是保证着这样一周一次的频率来看Sakura。  &lt;/p&gt;
&lt;p&gt;TY看着Sakura，对方的外观没有任何变化，即便是没有人员维护，壁橱里也没有落上任何的灰尘——据后面和他混熟的店员说这是由于经营者根本就不认为会有人来以买为前提仔细验货，所以就直接弄了个方便的无尘环境。不知何时，也或许是从一开始，Sakura在他心中就根本不是什么人偶，而仿佛是一个人，她在他心中甚至比起现在的女友占据着更深层的空间。  &lt;/p&gt;
&lt;p&gt;“哟，钱攒够了么？”店员比起一年前随意了许多，虽然话语了仍然带着那种让人不爽的嘲讽。  &lt;/p&gt;
&lt;p&gt;“......”TY对这个问题的回答仍然是沉默。“怎么，这段时间有人来买么？”  &lt;/p&gt;
&lt;p&gt;“没有，除了你估计没什么人有这闲心吧——毕竟这东西作为没有实用性的娃娃还是太贵......”&lt;br /&gt;
“她不是娃娃！”这已经不知道第几次的反驳了，但那种愤怒却没有丝毫的减弱。  &lt;/p&gt;
&lt;p&gt;“......”店员不再说多余的话，转身离开了。  &lt;/p&gt;
&lt;p&gt;TY仍然注视着Sakura，只不过这一次，他长久以来积攒的、自己给自己的莫名其妙的压力终于爆发了。他判定现在这种稳步积累的策略是错误的，他渴望着，他需要更快，他渴望着能够更快得得到Sakura，这样他就能解放了，从一切的压力、一切的怀疑和嘲笑中解放了。  &lt;/p&gt;
&lt;p&gt;TY回到了家中后，开始思考之前做法的错误。他查阅了许多“人生经验”，知道了如何真正得让人舒服，如何不让人嫉妒，如何成为一个合格的、友善的倾听者，如何广交朋友，如何收集资源，如何融入大众。然后他改变了策略，不再像去年一样什么都包，而是配合着随便哪个领导者做事；不再锋芒毕露，而是保留着自己的能力；不再逞强，而是寻求大家的帮助；不再从表面接受领导的任务，而是分析领导真正的需求，即便是没有，也要自己造一个让领导有面子的需求；不再只是陈述自己的观点，而是倾听他人的诉求，即便那只是废话，他甚至还交了一个女朋友。这种种迹象表明，他的确被改善了。  &lt;/p&gt;
&lt;p&gt;但有一点似乎并没有变，那就是他对Sakura的追求——某次偶然的机会中，他将他对Sakura的追求作为一个故事叙述了出来，这个故事意外得引起了共情和大家的兴趣。这一切被他平时优秀的表现增幅了，这个故事在部门中、乃至其他部门中传开了，相当一部分人都对TY的这种追求报以了尊敬的态度，认为这是一个很有前途的偏执狂——似乎大家都喜欢用这个词来褒奖某类人。  &lt;/p&gt;
&lt;p&gt;TY从未有如此愉快的感觉，自己的努力终于有人被他人肯定，而且是许多人——这在他过去的人生中从未有过。他开始觉得自己的所作所为都是&lt;code&gt;真正&lt;/code&gt;有价值的了。这种愉快的感觉让他更加投入地以现在的模式工作，更加投入地研究如果下次还有机会讲这个故事，如何将其讲得更好。  &lt;/p&gt;
&lt;p&gt;又一年过去了，虽然绩效还没下来，但TY没有任何恐惧和焦躁。他做的很好，作为一名员工他是光荣的，而这个公司也是公平的，恰当的付出一定会有回报。他的预想是正确的，他今年的绩效是——A+。  &lt;/p&gt;
&lt;p&gt;“小戴，我给你申请了，两周后有一个答辩，过了你就能直接升17级专家，没过也能到16！”在他看着绩效单的时候，部门主管L麦面笑容对他说着。  &lt;/p&gt;
&lt;p&gt;“谢谢主管，我一定会全力以赴！”  &lt;/p&gt;
&lt;p&gt;他很充实，他从未觉得Sakura与自己如此接近。“这是值得的。”虽然与Sakura的见面频率已经由于各种活动被完全打乱了，但这不过是&lt;code&gt;阵痛&lt;/code&gt;。他觉得，他很快就能把Sakura带回家了。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;“纯粹的，纯粹的，纯粹的，纯粹的，我......纯粹的......”  &lt;/p&gt;
&lt;p&gt;“小戴？喂，小戴！”TY的肩膀被旁边的L重重拍了一下，瞬间清醒了。  &lt;/p&gt;
&lt;p&gt;“呃，主管......可能是昨天演练得太晚了，刚才有点迷糊”TY的确觉得有些迷糊，但又隐约觉得不是迷糊那么简单。  &lt;/p&gt;
&lt;p&gt;“没事，清醒了就好。”L松了口气。“还有，别叫我主管，叫我L，反正这次没意外我们就平级了。”  &lt;/p&gt;
&lt;p&gt;“嗯。”TY拍了拍自己的脸，又将胶片（PPT）过了一遍。  &lt;/p&gt;
&lt;p&gt;答辩开始了，由于是跨级答辩，所以人员配置比较严肃，评审席上坐满了人，一个二十级，两个十九级，四个十八级，好几个十七级——他们当然并非是TY这个部门这个技术方向的，不过多一些人评价总是好的，为了避免出错，这是有必要的。  &lt;/p&gt;
&lt;p&gt;TY站在投影幕布前，迅速收集了一下现场的人员配置，二十级的领导当然是坐在第一排的正中间，十九级的则坐在他的两边，十八级的四个独占了第二排，剩下的全部坐在后面。他们情绪稳定，目光如炬，神情严肃，像极了一个训练有素的狼群。  &lt;/p&gt;
&lt;p&gt;“咳咳。”TY感受到了压力，现在的他就像是被狼群盯紧猎物一样，极力避免任何差错。“那么，答辩就开始了。”他打开了PPT，讲了起来。  &lt;/p&gt;
&lt;p&gt;PPT是很丰富的，这对于他而言也是自然的。第一年的他被描述为初入公司、十分有干劲但缺乏适当的方法的新人，在这一年，他独自完成了许多开发任务，得到了很多开发测试人员的信赖，是组里的&lt;code&gt;小能手&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;“虽然缺乏适当的方法，但作为新人而言有着尤其突出的潜力，也是因为这点我重点关注了他。”L在第一年总结结束后对着评审们说着。  &lt;/p&gt;
&lt;p&gt;评审们，在听的时候虽然神态各异，似乎都在努力想着如何说点什么，但都在L这句话之后露出了满意的表情。与此同时，TY的压力也减小了不少。他松了口气，继续说了下去。  &lt;/p&gt;
&lt;p&gt;“第二年我修正了工作的方法，我感受到集体的力量才是最重要的，如果没有大家的支持，我什么都做不到。”&lt;br /&gt;
“在这一年，我们完成了对以往不合时代的代码的大重构，提高了十倍的性能，这将使得我们在未来的两年内都无需担心。”&lt;br /&gt;
“虽然我是这次项目的主要负责人，但这一切本质上还是大家一起努力地结果，不是任何一个个人就能够做到的。”  &lt;/p&gt;
&lt;p&gt;当然，他没说那段代码是原来不知道哪个SB写的SB代码，用正常方法重写了一遍就达到了这个效果。不过这不重要，重要的是他以无数个这样的事例为自己的努力做出了证明。刺客，他觉得，成功几乎已经是唾手可得了。  &lt;/p&gt;
&lt;p&gt;“好。”二十级似乎很满意。“但是，我有一个问题。”但转眼又回归了严肃。“你，为什么会来这家公司，他有哪一点吸引你？”  &lt;/p&gt;
&lt;p&gt;“......”TY知道，这是答辩的必备题目，他也早就预备好了答案。但此刻，他却有些动摇。  &lt;/p&gt;
&lt;p&gt;“怎么，小伙子，没准备？”某个十九级有些不满意。  &lt;/p&gt;
&lt;p&gt;“因为钱。”&lt;br /&gt;
“什么？”评审中的大半、连带L都一脸懵逼。  &lt;/p&gt;
&lt;p&gt;“我需要钱，需要钱去得到她，得到我的梦想。”TY话锋一转，开始背出那预备好的讲稿——这也是那个故事的最终版本。  &lt;/p&gt;
&lt;p&gt;“那时候我刚毕业一年，觉得生活没有未来，梦想也无法实现，很绝望。我无法施展我的能力，只能每天以愤世嫉俗的态度浑浑噩噩混日子。”&lt;br /&gt;
“这一切一直持续着，直到我遇见了她——Sakura，那个人偶。她很特别，白皙的肌肤，华丽的服饰，还有美丽的眼睛，没有一处不是精雕细琢的。”&lt;br /&gt;
“我一直看着她，看了许久，我一直在思考她为什么会如此吸引我，难道只是纯粹肉体上的吸引？不，我觉得并不是那样。”&lt;br /&gt;
“我在她的身上看到了我的梦想。那遥不可及，却又并非无法达成的梦想。”&lt;br /&gt;
“这听起来很可笑，是吗？从一个人偶身上看到自己的梦想，多么愚蠢——当时我也这么想过，但真的是如此吗？梦想不就是那种华美的、复杂的、却又充满魅力的存在吗？”&lt;br /&gt;
“所以我想得到她，我询问了她的价格，那个价格，是我以那时那种态度下做那种工作再久也无法消费的。”&lt;br /&gt;
“所以，我来到了这里。来了这里，我才知道我之前的确错了，公司教给我了许多，教会我如何为人处事，也给了我希望——去得到Sakura的希望。”&lt;br /&gt;
“这也就是为什么我会站在这里。”  &lt;/p&gt;
&lt;p&gt;十秒钟的沉默后，以二十级为起始，评审席爆发出了热烈的掌声，大家都很满意，L也很满意。甚至，有一个十九级，两个十八级和好几个十七级的眼中泛起了泪花——他们一定是看到了自己曾经的影子。  &lt;/p&gt;
&lt;p&gt;“这小子不错，要好好培养。”答辩结束后，二十级对L给出了TY的评价。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;TY成功升到了十七级别。他逐渐远离了那些尊敬着他的同事，认识了更多的十七、十八、十九级。之后是，二十、二十一、二十二级。他和这些级们都打下了不错的关系，五年后，他升到了二十级，这个级别的他已经不再需要去做直接和技术相关的了，而且实现了基本的财务自由。这五年中他也换了两三个女友，经历了恋爱的甜蜜和分手的痛苦，也结识了能够谈心的哥们。这些人中有不少是慕名而来的，而他也没有辜负这些人的期望，不断得重复着那个故事。  &lt;/p&gt;
&lt;p&gt;生活逐渐稳定，不为财务所担忧，这一切都让TY觉得进入这个公司是正确的。他也在一年前成立了自己的家庭，对方是一个温柔的妹子，被他和Sakura的故事所打动，锲而不舍得追求他，最终可喜可贺地修成了正果。他们决定一年后生一个孩子，来满足父母的心愿——他与父母也和解了，他长大了，懂事了，明白了父母的苦处。  &lt;/p&gt;
&lt;p&gt;一切都很好，很光明。他过上了令人羡慕的生活，也满足于自己的事业。直到那一天。  &lt;/p&gt;
&lt;p&gt;那天，他在计划和妻子的接下来的旅行，这次他们打算去日本京都——那正好是四月份，赏樱的季节。正在他为选什么镜头而苦恼的时候，妻子忽然拍了下他的背。  &lt;/p&gt;
&lt;p&gt;“来看看，好可爱。”妻子的手指向笔记本的屏幕。  &lt;/p&gt;
&lt;p&gt;“什么啊。”他顺着妻子的手望去。“这是......”那上面是一个三分之一的DD娃娃，名字是Sakura。  &lt;/p&gt;
&lt;p&gt;“......”无视妻子的干扰的、长达五分钟的沉默。  &lt;/p&gt;
&lt;p&gt;“我出去一趟。”丢下这句话，他夺门而出。  &lt;/p&gt;
&lt;p&gt;到高铁站买了一张行程五个小时票后，他坐上了高铁。在高铁上用信息告知了自己的状况后，他关闭了手机，呆呆地望着窗外不但倒退的景象，望着它们的植被类型从阔叶变为了针叶。他下了车，并在四点左右到达了目的地。  &lt;/p&gt;
&lt;p&gt;商场一如既往得繁华，虽然有些角落已经显露出了陈旧感，但整体仍然被人气打磨得非常干净。他已经三年没有来这里了，那或许是和第一个女友分手后，也或许是和第二个女友热恋时——总之，他只能凭借模糊的记忆寻找那个壁橱。  &lt;/p&gt;
&lt;p&gt;五分钟，十分钟，二十分钟，半个小时......时间不断流逝，他也早已把商场翻了个遍，但却没有丝毫的壁橱的踪迹。他找了个凳子坐了下来，低头保持着沉默。  &lt;/p&gt;
&lt;p&gt;“TY？”就在这时，有人叫了他的名字。这个声音，他很熟悉。  &lt;/p&gt;
&lt;p&gt;“你......”在他面前的，就是之前的那个店员。  &lt;/p&gt;
&lt;p&gt;“对啊，好久不见了。”店员比起当年胖了不少，胸前的标志看起来是升了几级。“听说你混得不错？”  &lt;/p&gt;
&lt;p&gt;“我有一个问题。”TY无视了对方的寒暄，直奔此次的主题。“Sakura去哪了？”  &lt;/p&gt;
&lt;p&gt;“我就知道。”店员苦笑。“你来这，也只有这个目的了，虽然我还以为你已经忘了。”  &lt;/p&gt;
&lt;p&gt;“Sakura会被回收了，因为你最后一次来看她后的两年之内都没有人表现出兴趣，她被当做了废品，回收了。”  &lt;/p&gt;
&lt;p&gt;“什...么...”TY觉得有些难受。但，似乎没有想象中的那样难受。  &lt;/p&gt;
&lt;p&gt;他在思绪中寻找着Sakura的记忆，很模糊，在回溯的记忆流中，他的妻子、前女友、朋友、L、二十级、十九级不断得出现，还有他在工作中得到的肯定，在大会上的演讲。  &lt;/p&gt;
&lt;p&gt;“不过这样也蛮好，你现在看起来挺幸福的。”&lt;br /&gt;
“不过，还是有些遗憾。”  &lt;/p&gt;
&lt;p&gt;TY的确在遗憾，他在回想他为何感到遗憾。  &lt;/p&gt;
&lt;p&gt;“爸爸，这个叔叔是？”店员的身边跑过来一个小女孩，小女孩看起来五岁左右，有着一双天真的大眼睛。  &lt;/p&gt;
&lt;p&gt;“这个是戴叔叔，爸爸的老朋友。”店员摸了摸孩子的头，眼中充满了爱意。  &lt;/p&gt;
&lt;p&gt;“你的孩子？之前没听你说过...”&lt;br /&gt;
“那时候我们还没这么熟嘛...虽然现在也差不多。”  &lt;/p&gt;
&lt;p&gt;“哦。”TY看着小女孩，笑了笑。“你很漂亮呢，要听爸爸的话哦。”  &lt;/p&gt;
&lt;p&gt;“嗯！”小女孩回应着。“戴叔叔是来做什么的呢？”  &lt;/p&gt;
&lt;p&gt;“......”&lt;br /&gt;
“叔叔给你将一个故事。”&lt;br /&gt;
“好。”  &lt;/p&gt;
&lt;p&gt;故事讲完了。  &lt;/p&gt;
&lt;p&gt;“那么，Sakura姐姐，到底长什么样呢？”小女孩听入迷了。“叔叔说的那么神圣，一定有什么特别的地方吧。”  &lt;/p&gt;
&lt;p&gt;“嗯。”TY顿了顿。&lt;br /&gt;
“大概，是那女神一般皎洁的躯体，和华丽、精致的衣服吧。”  &lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">命月天宇</dc:creator>
<pubDate>Thursday, 09 Jun 2016 02:00:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2016.06.09 02:00:article/Art-寒苍-晗樱-S1-α</guid>
<category>小说</category>
<category>短篇</category>
<category>现实主义</category>
<category>平凡</category>
<category>梦想</category>
<category>寒苍</category>
<category>晗樱</category>
<category>梦见星空之诗</category>
</item>

<item>
<title>【Python】内建函数</title>
<link>http://dtysky.moe/article/Skill-2016_06_08_c</link>
<description>&lt;p&gt;Python中一些很有用的内建函数，包括zip、类型转换、反射等。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;zip&lt;/h2&gt;
&lt;p&gt;zip函数用于改变数据的构造，它将会返回一个元组，元组的构造视传入的参数而定，在一般的应用中，一般会传入几个长度相等的可迭代量，比如列表。  &lt;/p&gt;
&lt;p&gt;例子：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;test&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;zip&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;([&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;],&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;],&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输出为：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[(1, 3, 2), (2, 2, 1), (3, 1, 3)]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可见，zip本质上是将三个列表进行了某种合并。  &lt;/p&gt;
&lt;p&gt;那么如何将已经被合并的三个列表还原呢？  &lt;/p&gt;
&lt;p&gt;加上不定参数符号&lt;code&gt;*&lt;/code&gt;即可，如以下代码，其本质上是将test中的三个元组作为参数传入：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;zip&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;test&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输出为：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[(1, 2, 3), (3, 2, 1), (2, 1, 3)]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;bin/hex/oct/chr/str&lt;/h2&gt;
&lt;p&gt;一组相似的函数，可以将一个数组转换为某种进制下的字符串：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;mh&amp;quot;&gt;0x40&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;bin&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;hex&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;oct&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;chr&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;分别输出：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;bin&lt;/code&gt;为二进制： &apos;0b1000000&apos;
&lt;code&gt;hex&lt;/code&gt;为十六进制： &apos;0x40&apos;&lt;br /&gt;
&lt;code&gt;oct&lt;/code&gt;为八进制： &apos;0100&apos;&lt;br /&gt;
&lt;code&gt;chr&lt;/code&gt;为ascii码： &apos;@&apos;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当不在ascii码范围内时，&lt;code&gt;chr&lt;/code&gt;输出和&lt;code&gt;hex&lt;/code&gt;一致。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;str&lt;/code&gt;函数将任意数据类型转换为字符串：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;str&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;([&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输出为&lt;code&gt;[1, 2, 3]&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;ord/int/float&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ord&lt;/code&gt;和&lt;code&gt;int&lt;/code&gt;、&lt;code&gt;float&lt;/code&gt;函数的功能皆为数据类型转换，不过三者对象有所不同。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;ord&lt;/code&gt;是&lt;code&gt;chr&lt;/code&gt;的逆函数，将一个ascii码还原为整形数字：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;ord&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;@&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输出是&lt;code&gt;40&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;int&lt;/code&gt;可以看作是&lt;code&gt;bin&lt;/code&gt;、&lt;code&gt;hex&lt;/code&gt;和&lt;code&gt;oct&lt;/code&gt;等的逆函数，其形式为&lt;code&gt;int(c, base)&lt;/code&gt;，第一个参数是字符，第二个是数的基，一般是2（十六进制）、8（八进制）、10（十进制）以及16（十六进制），默认是十进制。  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;int&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;c1&amp;quot;&gt;# 10&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;int&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;c1&amp;quot;&gt;# 2&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;int&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;16&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;c1&amp;quot;&gt;# 15&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;int&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;8&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;c1&amp;quot;&gt;# 8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当然，&lt;code&gt;int&lt;/code&gt;函数也有数字类型转换的功能，它可以将浮点等类型等转换为整形：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;int&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mf&amp;quot;&gt;1.1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;c1&amp;quot;&gt;# 1&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;int&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mf&amp;quot;&gt;1.9&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;c1&amp;quot;&gt;# 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可见，int对于浮点数的转换使用的是&lt;code&gt;向下取整&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;float&lt;/code&gt;函数接受形式为小数的字符串或者整形等：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;float&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;1.1&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;c1&amp;quot;&gt;# 1.1&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;float&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;c1&amp;quot;&gt;# 1.0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;isinstance/issubclass/dir/getattr/type&lt;/h2&gt;
&lt;p&gt;Python的反射特性，详见此处：  &lt;/p&gt;
&lt;p&gt;&lt;a href=&amp;quot;http://dtysky.moe/article/Skill-2015_02_22_b&amp;quot;&gt;【Python】反射&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;eval/execfile&lt;/h2&gt;
&lt;p&gt;这两个函数本质上是一回事，不过一个参数是字符串，一个是文件。&lt;code&gt;execfile&lt;/code&gt;可以看做是将文件的文本完整读入后传入&lt;code&gt;eval&lt;/code&gt;函数执行。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;eval&lt;/code&gt;函数是一种高级特性，它将文本解析后作为python的表达式执行：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;
&lt;span class=&amp;quot;nb&amp;quot;&gt;eval&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;x += 1&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输出是2，可见&lt;code&gt;x += 1&lt;/code&gt;作为表达式被执行了。  &lt;/p&gt;
&lt;h2&gt;map/filter&lt;/h2&gt;
&lt;p&gt;这两个函数都针对可迭代量，比如元组和列表。&lt;br /&gt;
要注意可迭代量&lt;code&gt;iterable&lt;/code&gt;和迭代器&lt;code&gt;iterators&lt;/code&gt;是不同的东西。这两个可能会在后面的文章说到。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;map&lt;/code&gt;函数的参数是一个可迭代量&lt;code&gt;I&lt;/code&gt;和一个函数&lt;code&gt;F&lt;/code&gt;，调用时，&lt;code&gt;L&lt;/code&gt;中的元素&lt;code&gt;Li&lt;/code&gt;被逐个取出，送入&lt;code&gt;F&lt;/code&gt;中，&lt;code&gt;F&lt;/code&gt;需要返回处理后的值&lt;code&gt;Lia&lt;/code&gt;，然后&lt;code&gt;Li&lt;/code&gt;将会被&lt;code&gt;Lia&lt;/code&gt;替换。  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;def&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;inc&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;):&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;map&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;inc&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;结果是&lt;code&gt;[2, 3, 4]&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;filter&lt;/code&gt;函数顾名思义，是一个滤波器，他的参数和&lt;code&gt;map&lt;/code&gt;函数一致，不过函数&lt;code&gt;F&lt;/code&gt;的返回值是一个bool量，表示是否要保留该元素，如果为&lt;code&gt;True&lt;/code&gt;则会保留。&lt;code&gt;filter&lt;/code&gt;返回的是一个被筛选过的数组：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;def&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;odd&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;):&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;filter&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;odd&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;结果是&lt;code&gt;[1, 3]&lt;/code&gt;。  &lt;/p&gt;
&lt;h2&gt;open/file&lt;/h2&gt;
&lt;p&gt;属于文件操作的一部分，后面开文章单写。&lt;/p&gt;
&lt;h2&gt;sorted/reversed&lt;/h2&gt;
&lt;p&gt;该函数用于排序，比较复杂，以后开文章单写。  &lt;/p&gt;
&lt;h2&gt;abs/max/min/pow/divmod/round/sum&lt;/h2&gt;
&lt;p&gt;一些运算。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;abs&lt;/code&gt;对数字取绝对值： &lt;code&gt;abs(-1) = 1&lt;/code&gt;。&lt;br /&gt;
&lt;code&gt;max/min&lt;/code&gt;对列表或者元组取最大/最小值： &lt;code&gt;max([1, 2, 3]) = 3&lt;/code&gt;，&lt;code&gt;min([1, 2, 3]) = 1&lt;/code&gt;，这两个函数和&lt;code&gt;sorted&lt;/code&gt;函数一样，也可以自定义排序规则。&lt;br /&gt;
&lt;code&gt;pow&lt;/code&gt;是乘方： &lt;code&gt;pow(2, 3) = 8&lt;/code&gt;。&lt;br /&gt;
&lt;code&gt;divmod&lt;/code&gt;返回两个参数的商和余 ： &lt;code&gt;divmod(3, 2) = (1, 1)&lt;/code&gt;。&lt;br /&gt;
&lt;code&gt;round&lt;/code&gt;是取整，采用四舍五入： &lt;code&gt;round(1.4) = 1.0&lt;/code&gt;，&lt;code&gt;round(1.5) = 2.0&lt;/code&gt;。&lt;br /&gt;
&lt;code&gt;sum&lt;/code&gt;是求和： &lt;code&gt;sum([1, 2, 3]) = 6&lt;/code&gt;，&lt;code&gt;sum(1, 2, 3) = 6&lt;/code&gt;。&lt;/p&gt;
&lt;h2&gt;range/xrange&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;range&lt;/code&gt;生成一个列表：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;range&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;4&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输出&lt;code&gt;[1, 2, 3]&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;xrange&lt;/code&gt;生成一个&lt;code&gt;xrange&lt;/code&gt;对象：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;print&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;xrange&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;4&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输出&lt;code&gt;xrange(1, 4)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;二者皆可用于循环，以&lt;code&gt;for i in xrange(1, 10)&lt;/code&gt;类似的形式，但是&lt;code&gt;xrange&lt;/code&gt;对大规模循环的支持更好，效率也更高。&lt;/p&gt;
&lt;h2&gt;input/raw_input&lt;/h2&gt;
&lt;p&gt;这两个函数用于读取控制台输入，将开文章单写。&lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Wednesday, 08 Jun 2016 17:00:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2016.06.08 17:00:article/Skill-2016_06_08_c</guid>
<category>Python</category>
<category>内建函数</category>
<category>zip</category>
<category>迭代器</category>
<category>类型转换</category>
<category>反射</category>
</item>

<item>
<title>【CSAPP】笔记-Cp2-1-信息存储</title>
<link>http://dtysky.moe/article/Skill-2016_06_08_b</link>
<description>&lt;p&gt;CSAPP（深入理解计算机系统）第二章“信息的表示和处理”第一部分“信息存储”的笔记和课后习题。&lt;br /&gt;
&lt;a href=&amp;quot;https://github.com/dtysky/CSAPP&amp;quot;&gt;Github的同步工程在这&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;计算机本质上是开关电路，底层就是MOSFET等的打开、关断和饱和为基础所构成的一系列变化，“开”和“关”可以抽象为0和1两种状态，计算机中的一切都是有0和1构成的，信息的存储也不例外。  &lt;/p&gt;
&lt;p&gt;信息在计算机中以0和1的系列表示，再高一点就是bytes序列，不过没有本质区别。单纯的0、1序列没有任何意义，意义是我们所赋予的，我们人为地定义一些数据类型，再通过这种定义01序列转义，便可以使它们表现出具体的含义。&lt;/p&gt;
&lt;p&gt;比如，&lt;code&gt;1111&lt;/code&gt;这个二进制数，如果是无符号整形，它代表&lt;code&gt;15&lt;/code&gt;，如果是有符号整形，则是&lt;code&gt;-1&lt;/code&gt;，如果是定点位为3的定点数，则是&lt;code&gt;7.5&lt;/code&gt;。&lt;br /&gt;
同时，这种由4个bit构成的一个数，其值域为0~15，是一个十六进制数，十六进制数在计算机中十分重要。&lt;/p&gt;
&lt;p&gt;一般来讲，有符号数用补码表示，小数由浮点数表示，不过在一些特殊的领域，比如FPGA，定点数使用地更为广泛，定点化问题也是值得关注的。  &lt;/p&gt;
&lt;h2&gt;原始数据类型&lt;/h2&gt;
&lt;p&gt;和代数定义基本相同，可以分为：  &lt;/p&gt;
&lt;p&gt;整数： 有符号整数和无符号整数，在C中，可以按照位宽分为很多类型，有8bits的&lt;code&gt;char&lt;/code&gt;，有32bits的&lt;code&gt;int&lt;/code&gt;，也有64bits的&lt;code&gt;int&lt;/code&gt;等，但它们都遵循一个规则。  &lt;/p&gt;
&lt;p&gt;小数： 在计算机软件中，小数都是有符号的，也可以根据位数进行划分，在C中，有32bits的&lt;code&gt;float&lt;/code&gt;，有64bits的&lt;code&gt;double&lt;/code&gt;等。  &lt;/p&gt;
&lt;p&gt;注：在C中，指针本身定义为一个全字长的变量。其它详见下面几节。&lt;/p&gt;
&lt;h2&gt;溢出和误差&lt;/h2&gt;
&lt;p&gt;溢出是指——运算结果的大小超越了该类型的数所能表示的最大值。比如对于一个无符号char型变量，如果给他赋予一个超过255的值，则发生了溢出，结果会被截断（当然有的编译器会发现这个错误）。  &lt;/p&gt;
&lt;p&gt;误差则是指浮点数和定点数系统的有限，对于整数，总是存在一个二进制数可以作为十进制数的对应，但对于小数或者分数则并非如此，例如&lt;code&gt;0.2&lt;/code&gt;这个数，你就无法找到一个二进制的数来表达他，只可能在有限的精度下非常接近它。  &lt;/p&gt;
&lt;p&gt;总而言之，整数在计算机中是有限但精确的，而小数是无限却近似的。  &lt;/p&gt;
&lt;h2&gt;指针&lt;/h2&gt;
&lt;p&gt;指针提供了引用数据结构的元素的机制，它指向某个存储块的第一个字节的虚拟地址。&lt;br /&gt;
指针包含一个值和一个类型，值就是指向对象的地址，而类型则是对象的类型。  &lt;/p&gt;
&lt;p&gt;在C中，用&lt;code&gt;T *p&lt;/code&gt;定义一个名为p的指针，T可以使任意基本的数据类型，用&lt;code&gt;p&lt;/code&gt;可以获取p的首字节地址，&lt;code&gt;*p&lt;/code&gt;可以直接获取该变量。而使用&lt;code&gt;&amp;amp;&lt;/code&gt;可以获取任何一个变量的首字节地址，它返回一个指针变量，如果定义的是一个int型指针变量，那么p指向的对象实际占据的地址空间就是p、p+1、p+2和p+3。&lt;br /&gt;
根据不同的系统，这四个字节的排序各有不同。低字节在前的称为&lt;strong&gt;小端LE&lt;/strong&gt;，反之则为&lt;strong&gt;大端BE&lt;/strong&gt;，这可能是一个坑，要注意。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;比如&amp;amp;p=0x100，则同时p指向的对象为int型，表示0x01234567，则：
1. 大端表示，0x100 ~ 0x103地址分别为 0x01 ~ 0x67。
2. 小端表示，0x100 ~ 0x103地址分别为 0x67 ~ 0x01。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一般来说，x86 系列 CPU 都是 little-endian 的字节序，PowerPC 通常是 big-endian，网络字节顺序也是 big-endian还有的CPU 能通过跳线来设置 CPU 工作于 Little endian 还是 Big endian 模式。  &lt;/p&gt;
&lt;p&gt;指针的引用可以用数组表示法来表示，比如对于&lt;code&gt;int *p&lt;/code&gt;，&lt;code&gt;p[1]&lt;/code&gt;取得是&lt;code&gt;&amp;amp;p&lt;/code&gt;后1*4个字节开始的int型变量，和数组的使用十分相似。
指针的只允许被赋值指针型变量，也就是一个&lt;code&gt;&amp;amp;&lt;/code&gt;返回的一个变量的地址或者由&lt;code&gt;*&lt;/code&gt;定义的数据。  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;char&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;p&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;kt&amp;quot;&gt;char&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;10&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;p&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;printf&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;p&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]);&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;printf&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;p&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;结果都是10。&lt;/p&gt;
&lt;h2&gt;强制类型转换&lt;/h2&gt;
&lt;p&gt;cast，强制类型转换，可以将一个类型的数据以另一种类型的形式表现出来。在系统编程中极为重要。&lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;void&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;show_as_float&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;p&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;printf&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;%f&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;float&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;p&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;位宽&lt;/h2&gt;
&lt;p&gt;处理器位宽决定了虚拟存储器的寻址范围，n位的寻址范围是 2&lt;sup&gt;n&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sizeof(T)&lt;/code&gt;函数可以给出当前系统中，类型T占据的字节数。由于不同系统对各种基本类型赋予的位宽可能不同，为了避免麻烦，在c++中应尽量使用&lt;code&gt;stdint&lt;/code&gt;包中的&lt;code&gt;uint_8t&lt;/code&gt;等类型。&lt;/p&gt;
&lt;h2&gt;字符串&lt;/h2&gt;
&lt;p&gt;字符串也是对二进制流的一种编码，它被编码为一个以null(值为0)字符结尾的字符(char)数组。每个字符都需要指定编码，常见的为ASCII码，当然，多用unicode，善待程序员（对Python我就是在说你）。&lt;/p&gt;
&lt;h2&gt;逻辑运算与位运算&lt;/h2&gt;
&lt;p&gt;逻辑运算是布尔代数中的一部分，基本包括与预算、或运算、非运算、异或运算，可以用于进行一些基本的逻辑运算。这也是数字电路的基础，其实很简单。&lt;br /&gt;
逻辑运算也有各种运算定律、化简方法（卡诺图）等，可以自行研究。  &lt;/p&gt;
&lt;p&gt;一般的，在软件中，逻辑运算通常有两种，单目运算&lt;code&gt;&amp;amp;&lt;/code&gt;等和双目运算&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;等，前者是位运算，返回原始类型的值，后者是逻辑运算，返回逻辑值。所以单目运算符常常可以被用于位屏蔽和掩码等，比如&lt;code&gt;0xff &amp;amp; 0x0f&lt;/code&gt;就屏蔽了前者的前四位。&lt;/p&gt;
&lt;p&gt;除以上，还有一种位相关的操作，被称为&lt;code&gt;移位操作&lt;/code&gt;，移位操作一般分为逻辑移位（无符号扩展）和算数移位（有符号扩展），也有被称为循环移位的存在但不在此讨论。移位即将一个二进制数的所有位向左或向右平移若干位，他可以用于替换一些特殊的乘除法，速度快很多。比如除以二可以用左移两位表示。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是，在C中，如果移动的位数超过了字长w，可能会造成类似循环移位的异常状况，所以要尽量避免。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一般情况下，加减乘除逻辑运算位运算移位操作都可以直接对应为CPU的一条指令。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;习题&lt;/h2&gt;
&lt;p&gt;所有有代码的练习都以以题号为名字的单个文件内。  &lt;/p&gt;
&lt;p&gt;代码位于&lt;a href=&amp;quot;https://github.com/dtysky/CSAPP/tree/master/CSAPP/Chapter2&amp;quot;&gt;CSAPP-Chapter2&lt;/a&gt;内。&lt;/p&gt;
&lt;h3&gt;1，2，3，4，&lt;/h3&gt;
&lt;p&gt;略过。&lt;/p&gt;
&lt;h3&gt;5&lt;/h3&gt;
&lt;p&gt;A：&lt;br /&gt;
BE -&amp;gt; 0x87&lt;br /&gt;
LE -&amp;gt; 0x21  &lt;/p&gt;
&lt;p&gt;B:&lt;br /&gt;
BE -&amp;gt; 0x8765&lt;br /&gt;
LE -&amp;gt; 0x2143  &lt;/p&gt;
&lt;p&gt;C:&lt;br /&gt;
BE -&amp;gt; 0x876543&lt;br /&gt;
LE -&amp;gt; 0x214365  &lt;/p&gt;
&lt;h3&gt;6&lt;/h3&gt;
&lt;p&gt;这实际上是浮点数和整形的模型问题，略过。&lt;/p&gt;
&lt;h3&gt;7&lt;/h3&gt;
&lt;p&gt;为各个字符对应的ascii码，略过。&lt;/p&gt;
&lt;h3&gt;8&lt;/h3&gt;
&lt;p&gt;基本逻辑运算，略过。  &lt;/p&gt;
&lt;h3&gt;9&lt;/h3&gt;
&lt;p&gt;颜色的补就是把每一位取反，B是基本逻辑运算，略过。  &lt;/p&gt;
&lt;h3&gt;10&lt;/h3&gt;
&lt;p&gt;异或运算满足自反率：  &lt;/p&gt;
&lt;p&gt;$$A \oplus A \oplus B = B$$&lt;br /&gt;
$$A \oplus B \oplus B = A$$  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;步骤&lt;/th&gt;
&lt;th&gt;*x&lt;/th&gt;
&lt;th&gt;*y&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;初始&lt;/td&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;a ^ b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;a ^ b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;11&lt;/h3&gt;
&lt;p&gt;原来函数只能对偶数个数元素的数组工作，是因为对于奇数个数元素的数组，会出现&lt;code&gt;first = last&lt;/code&gt;的状况，这种状况下实际上是数组中间的元素自己和自己做运算，即&lt;code&gt;inplace(&amp;amp;a[first], &amp;amp;a[first])&lt;/code&gt;，此运算将返回0。&lt;br /&gt;
返回0是因为以上三步运算中，步骤1使得&lt;code&gt;a = a, b = 0&lt;/code&gt;，步骤2使得&lt;code&gt;a = a, b = a&lt;/code&gt;，步骤3使得&lt;code&gt;a = a, b = 0&lt;/code&gt;，由于&lt;code&gt;inplace&lt;/code&gt;函数的两个参数指向同一个元素，所以对b赋值的结果会覆盖对a的赋值，所以结果为0。&lt;br /&gt;
如何改动请见代码，将奇数作为特殊情况即可，也就是，将&lt;code&gt;first &amp;lt;= last&lt;/code&gt;改为&lt;code&gt;first &amp;lt; last&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;12&lt;/h3&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;c1&amp;quot;&gt;// A&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&amp;quot;mh&amp;quot;&gt;0x000000ff&lt;/span&gt;
&lt;span class=&amp;quot;c1&amp;quot;&gt;// B&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;^&lt;/span&gt; &lt;span class=&amp;quot;mh&amp;quot;&gt;0xffffff00&lt;/span&gt;
&lt;span class=&amp;quot;c1&amp;quot;&gt;// C&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;|&lt;/span&gt; &lt;span class=&amp;quot;mh&amp;quot;&gt;0x000000ff&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;13&lt;/h3&gt;
&lt;p&gt;本质上：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;bis(x, y) = or(x, y)&lt;br /&gt;
bic(x, y) = and(x, ~y)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;bool_or&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;kt&amp;quot;&gt;int&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;){&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;bis&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;);&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以用逻辑代数通过&lt;code&gt;or&lt;/code&gt;求得&lt;code&gt;xor&lt;/code&gt;：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;xor(x, y) = or(and(x, ~y), and(y, ~x))&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;int bool_xor(int x, int y){
    return bis(bic(x, y), bic(y, x));
}
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;14&lt;/h3&gt;
&lt;p&gt;基本运算，略过。&lt;/p&gt;
&lt;h3&gt;15&lt;/h3&gt;
&lt;p&gt;详见代码。&lt;/p&gt;
&lt;h3&gt;16&lt;/h3&gt;
&lt;p&gt;基本运算，略过。&lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Wednesday, 08 Jun 2016 12:00:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2016.06.08 12:00:article/Skill-2016_06_08_b</guid>
<category>CSAPP</category>
<category>计算机系统</category>
<category>信息存储</category>
<category>数据类型</category>
<category>指针</category>
<category>逻辑运算</category>
</item>

<item>
<title>【CSAPP】笔记-Cp1-计算机系统漫游</title>
<link>http://dtysky.moe/article/Skill-2016_06_08_a</link>
<description>&lt;p&gt;CSAPP（深入理解计算机系统）第一章“计算机系统漫游”的笔记和课后习题。&lt;br /&gt;
&lt;a href=&amp;quot;https://github.com/dtysky/CSAPP&amp;quot;&gt;Github的同步工程在这&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt=&amp;quot;抽象&amp;quot; src=&amp;quot;http://src.dtysky。moe/image/csapp/cp1/1.png&amp;quot; /&gt;&lt;/p&gt;
&lt;h2&gt;编译系统&lt;/h2&gt;
&lt;h3&gt;步骤&lt;/h3&gt;
&lt;p&gt;一次编译分为以下步骤：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;预处理cpp：根据#开头的命令修改和注入代码，处理完的代码一般为“.i”文件。  &lt;/li&gt;
&lt;li&gt;编译ccl：将“.i”文件翻译成文本“.s”文件，里面是汇编代码。  &lt;/li&gt;
&lt;li&gt;汇编as：将汇编代码翻译成机器语言，保存在“.o”文件中。  &lt;/li&gt;
&lt;li&gt;连接ld：将某些预编译好的代码合并到目标程序中，比如标准库中的一些函数，最终得到可执行文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;CNU项目&lt;/h3&gt;
&lt;p&gt;GNU&apos;s Not Unix。&lt;br /&gt;
开发出一个完整的类unix系统，内核是linux。包括EMACS、GCC、GDB、汇编器、连接器等等，GCC支持许多种编译型语言。  &lt;/p&gt;
&lt;h2&gt;系统硬件&lt;/h2&gt;
&lt;h3&gt;构成&lt;/h3&gt;
&lt;p&gt;CPU、存储器（磁盘存储器算外设）和外设构成，现代中一般是CPU和存储器中由存储器总线连接，和外设则是IO总线，还有加速计算的GPU等。  &lt;/p&gt;
&lt;p&gt;学学HDL，写个简单的CPU可以加深理解，一个简单的CPU的例子，使用Verilog编写：  &lt;/p&gt;
&lt;p&gt;&lt;a href=&amp;quot;https://github.com/dtysky/SIMPLE_MIPS_CPU&amp;quot;&gt;SIMPLE_MIPS_CPU&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;GPU一般由用于计算的ALU（包括加减乘除法器、逻辑运算单元），寄存器堆（特殊的高速存储器，存储特殊数据），控制译码单元（将机器码转译为各个模块的控制信号），指令存储器（存储代码数据），数据存储区（存储数据）以及连接各个模块的数据路径（指令地址计数器PC算一部分）。运行时，PC借由ALU的运算来使自己跳转，而后CPU取出PC指向的指令存储器中的数据作为指令送入控制译码单元，而后调动各模块执行操作。&lt;/p&gt;
&lt;h2&gt;运行开销&lt;/h2&gt;
&lt;p&gt;比如运行一个简单的打印字符串的程序，加载时，复制到主存（SDRAM），运行时，主存复制到CPU的寄存器堆中，显示时，又复制到显示设备，这些“复制”就是主要开销之一。  &lt;/p&gt;
&lt;h3&gt;高速缓存&lt;/h3&gt;
&lt;p&gt;高速缓存是为了解决“复制”开销而构造的，它们由SRAM构成，容量介于寄存器堆和主存之间，速度也介于寄存器堆和主存之间。  &lt;/p&gt;
&lt;p&gt;一般来讲，会有一个CPU片上的L1缓存，容量高于寄存器堆但访问速度等同于寄存器堆，但速度高于主存两个数量级；L2缓存容量高于L1缓存，速度为L1的五分之一；一些系统拥有L3缓存。  &lt;/p&gt;
&lt;p&gt;高速缓存中会存放一些经常会使用到的指令，合理提高cache的命中率将会有效提高性能。（大概现在还有必要？）&lt;br /&gt;
&lt;img alt=&amp;quot;高速缓存&amp;quot; src=&amp;quot;http://src.dtysky。moe/image/csapp/cp1/2.png&amp;quot; /&gt;&lt;/p&gt;
&lt;h2&gt;操作系统&lt;/h2&gt;
&lt;p&gt;操作系统隔离了上层应用和底层硬件，它提供两个功能：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;防止硬件被失控的应用程序滥用。  &lt;/li&gt;
&lt;li&gt;向应用程序提供简单一致的机制来控制复杂而多样的硬件设备。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;简而言之，OS通过自身高度的复杂度对上层应用提供了简单而良好的抽象，使得程序员不需要关心乱七八糟的兼容问题，使得分工和高效率成为了可能。  &lt;/p&gt;
&lt;p&gt;这些抽象基本包括：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;文件：对IO设备的抽象。&lt;/li&gt;
&lt;li&gt;虚拟存储器：对主存和IO设备的抽象。  &lt;/li&gt;
&lt;li&gt;进程：对IO设备、主存和CPU的抽象。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;进程&lt;/h3&gt;
&lt;p&gt;进程是操作系统对一个正在运行的程序的一种抽象。一个系统可以运行多个进程。&lt;br /&gt;
但本质上，一个CPU在同一个时刻只能执行一个进程，多进程的假象（或者说也并不完全是假象）是通过交叉执行实现的，这种交叉执行的流程如下：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;正在执行A进程，发现需要切换到B进程。&lt;/li&gt;
&lt;li&gt;保存A进程的状态（上下文），将执行控制权转移给B进程，执行B进程。&lt;/li&gt;
&lt;li&gt;B进程执行一段时间，需要切换到A进程，保存B进程上下文，恢复A进程的上下文。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;线程&lt;/h3&gt;
&lt;p&gt;线程是对进程的进一步分割，它们可以是同一进程中的若干执行单元，共享进程的上下文、代码和全局数据，所以一般也比多进程更加高效，也适合多并发场景。  &lt;/p&gt;
&lt;h3&gt;虚拟存储器&lt;/h3&gt;
&lt;p&gt;虚拟存储器是一种抽象，它使得进程可以认为它们都是在独占地使用主存，即主存对于它们而言都是一致的。&lt;br /&gt;
虚拟存储器提供了一个抽象的&lt;strong&gt;虚拟地址空间&lt;/strong&gt;，每一个地址段中存储器的内容都有着严格的定义，它们包括：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;程序代码和数据：对所有进程，代码从同一固定地址开始，然后是数据。  &lt;/li&gt;
&lt;li&gt;堆：代码和数据区后就是运行时的堆，堆是可以动态改变大小的。&lt;/li&gt;
&lt;li&gt;共享库：存储库。  &lt;/li&gt;
&lt;li&gt;栈：编译器使用它进行函数调用，也是可以动态改变大小的。&lt;/li&gt;
&lt;li&gt;内核虚拟存储器：这是OS的一部分，为内核保留。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;写几段汇编，调试调试可以加深理解。&lt;/p&gt;
&lt;h3&gt;文件&lt;/h3&gt;
&lt;p&gt;文件就是二进制序列，在类unix系统中，一切皆为文件，系统所有的输入输出都是抽象成文件读写来实现的。&lt;/p&gt;
&lt;h2&gt;通信&lt;/h2&gt;
&lt;p&gt;通信通过网络实习，网络也可以被视为一个IO设备。&lt;/p&gt;
&lt;h2&gt;一些重要概念&lt;/h2&gt;
&lt;h3&gt;并发和并行&lt;/h3&gt;
&lt;p&gt;并发只一个系统同时具有多个活动，并行只用并发使得一个系统更快地运行。&lt;/p&gt;
&lt;h4&gt;线程级并发&lt;/h4&gt;
&lt;p&gt;在单处理器系统中，并发是通过多个进程的快速切换实现的。&lt;br /&gt;
一个处理器上如果拥有多个带有独立处理单元和高速缓存的处理器，则为多核处理器，它们共享更高层的高速缓存，但相互保持独立。&lt;br /&gt;
超线程，即让一个处理器可以“同时”执行多个线程。要注意的是，这个同时也并非真同时，这种处理器的某些硬件有多个备份，可以在单个周期级别去决定执行哪一个线程，这不同于常规的处理器——它们需要大约20000个时钟周期去做不同线程转换，所以基本可以看做是拥有可以同时执行两个线程的能力。&lt;/p&gt;
&lt;h4&gt;指令级并行&lt;/h4&gt;
&lt;p&gt;一个周期可以执行多个指令，这个理论效率可以通过一些不那么疯狂和疯狂、不那么玄学和玄学的技术达到。通常，这些手段包括“流水线”、“分支预测”等。&lt;br /&gt;
“超标量”这个术语指处理器可以比一个周期一个指令的速度更快。  &lt;/p&gt;
&lt;h4&gt;单指令、多数据并行&lt;/h4&gt;
&lt;p&gt;允许一条指令产生多个可以并行执行的操作称为“单指令、多数据”，即SIMD并行。比如并行对多对浮点数做加法的特殊指令。&lt;br /&gt;
一般建议用特殊的数据类型来编写需要这些运算的程序，比如在GCC中的向量数据和SIMD优化配置。  &lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Wednesday, 08 Jun 2016 11:00:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2016.06.08 11:00:article/Skill-2016_06_08_a</guid>
<category>CSAPP</category>
<category>计算机系统</category>
</item>

<item>
<title>【Python】二进制字节流处理库struct</title>
<link>http://dtysky.moe/article/Skill-2016_06_06_b</link>
<description>&lt;p&gt;struct类用于打包和解包二进制字节流，对于二进制数据的处理至关重要。  &lt;/p&gt;
&lt;h2&gt;pack&lt;/h2&gt;
&lt;p&gt;pack方法用于将数据打包成字节流，数据可以是数字、字符串、数组，其使用方法为：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kn&amp;quot;&gt;import&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;struct&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;struct&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;pack&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;fmt&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;data&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;fmt是格式化的格式，data为数据，fmt的规则为&lt;code&gt;[order][format]&lt;/code&gt;，order为字节顺序，比如小端LE、大端BE等，format就是字节的格式了，可以是字节、整形、浮点数等，比如：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;In&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;13&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]:&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;struct&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;pack&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;&amp;gt;II&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;Out&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;13&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]:&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;se&amp;quot;&gt;\x00\x00\x00\x01\x00\x00\x00\x02&lt;/span&gt;&lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;In&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;14&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]:&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;struct&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;pack&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;&amp;lt;II&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;Out&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;14&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]:&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;se&amp;quot;&gt;\x01\x00\x00\x00\x02\x00\x00\x00&lt;/span&gt;&lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下是详细规则：  &lt;/p&gt;
&lt;h3&gt;字节顺序&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Character&lt;/th&gt;
&lt;th&gt;Byte order&lt;/th&gt;
&lt;th&gt;Size&lt;/th&gt;
&lt;th&gt;Alignment&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;native&lt;/td&gt;
&lt;td&gt;native&lt;/td&gt;
&lt;td&gt;native&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;native&lt;/td&gt;
&lt;td&gt;standard&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;little-endian&lt;/td&gt;
&lt;td&gt;standard&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;big-endian&lt;/td&gt;
&lt;td&gt;standard&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!&lt;/td&gt;
&lt;td&gt;network (= big-endian)&lt;/td&gt;
&lt;td&gt;standard&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;格式&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Format&lt;/th&gt;
&lt;th&gt;C Type&lt;/th&gt;
&lt;th&gt;Python type&lt;/th&gt;
&lt;th&gt;Standard size&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;pad byte&lt;/td&gt;
&lt;td&gt;no value&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;char&lt;/td&gt;
&lt;td&gt;string of length&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;signed char&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;(3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;unsigned char&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;(3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;_Bool&lt;/td&gt;
&lt;td&gt;bool&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;(1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;h&lt;/td&gt;
&lt;td&gt;short&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;(3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;unsigned short&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;(3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;(3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;unsigned int&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;(3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;l&lt;/td&gt;
&lt;td&gt;long&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;(3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;td&gt;unsigned long&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;(3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;q&lt;/td&gt;
&lt;td&gt;long long&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;(2), (3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Q&lt;/td&gt;
&lt;td&gt;unsigned long long&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;(2), (3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;(4)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;(4)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;char[]&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;td&gt;char[]&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;void *&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;(5), (3)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;注意&lt;/h3&gt;
&lt;p&gt;首先要注意的是大端小端的问题，这个在上面的例子已经有所体现，如果不加order标志，默认使用的是&lt;code&gt;@&lt;/code&gt;这个order。&lt;br /&gt;
其次，使用时如果相对数组使用，必须要加上不定参数标志&lt;code&gt;*&lt;/code&gt;。  &lt;/p&gt;
&lt;h2&gt;unpack&lt;/h2&gt;
&lt;p&gt;用于解包二进制数据，基本和&lt;code&gt;pack&lt;/code&gt;的用法一致，不过是逆运算，&lt;code&gt;fmt&lt;/code&gt;的格式和&lt;code&gt;pack&lt;/code&gt;一模一样，第二个参数为二进制字节流，返回一个由结果构成的元祖。  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;In&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;15&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]:&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;struct&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;unpack&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;&amp;lt;II&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;se&amp;quot;&gt;\x01\x00\x00\x00\x02\x00\x00\x00&lt;/span&gt;&lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;Out&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;15&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]:&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;效率&lt;/h2&gt;
&lt;p&gt;测试表明，打包和解包的性能的确会随着数据量的大小而发生变化。这个变化似乎并不是线性的，在一定数据量以下时，性能并不会成为瓶颈，但当数据量超过某个数量级时，性能会极速恶化，这一点需要注意。&lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Monday, 06 Jun 2016 13:00:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2016.06.06 13:00:article/Skill-2016_06_06_b</guid>
<category>Python</category>
<category>struct</category>
<category>二进制字节流</category>
</item>

<item>
<title>【Python】科学绘图库Matplotlib</title>
<link>http://dtysky.moe/article/Skill-2016_06_06_a</link>
<description>&lt;p&gt;这是一个Python的科学绘图库的使用心得，涉及平面绘制、子图绘制、格点、三维(3D)绘制以及动态绘图。&lt;br /&gt;
&lt;a href=&amp;quot;http://matplotlib.org/&amp;quot;&gt;http://matplotlib.org/&lt;/a&gt;  &lt;/p&gt;
&lt;h2&gt;基本绘制&lt;/h2&gt;
&lt;p&gt;直接导入库后，提供数组进行绘制即可：  &lt;/p&gt;
&lt;h3&gt;基础&lt;/h3&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kn&amp;quot;&gt;import&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&amp;quot;kn&amp;quot;&gt;as&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;plt&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
&lt;span class=&amp;quot;c1&amp;quot;&gt;# 绘制线图&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;plot&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;color&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;...&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;c1&amp;quot;&gt;# 绘制散点图&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;scatte&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;()&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;show&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt=&amp;quot;基本二维图&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/blog/skill-2016-06-06a/1.png&amp;quot; /&gt;  &lt;/p&gt;
&lt;p&gt;还可以绘制别的图像，详见官网。  &lt;/p&gt;
&lt;h3&gt;进阶&lt;/h3&gt;
&lt;h4&gt;子图&lt;/h4&gt;
&lt;p&gt;可以添加多张子图进行绘制，并且修改图像的标题和坐标轴等：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;subplot&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;title&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;子图像1&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;subplot&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;title&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;子图像2&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;subplot&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;title&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;子图像3&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;subplot&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;4&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;title&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;子图像4&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt=&amp;quot;基本二维图&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/blog/skill-2016-06-06a/2.png&amp;quot; /&gt;  &lt;/p&gt;
&lt;h4&gt;面向对象&lt;/h4&gt;
&lt;p&gt;除了这种类似于matlab的用法，还可以用面向对象的用法来进行绘制：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kn&amp;quot;&gt;import&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&amp;quot;kn&amp;quot;&gt;as&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;plt&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;figure&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;()&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;axi&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;add_subplot&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;axi&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_title&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;子图1&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;axi&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;x轴&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;axi&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_ylabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;y轴&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_xlim&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;nb&amp;quot;&gt;min&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;10&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_ylim&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;10&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;o&amp;quot;&gt;......&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;细化分隔&lt;/h4&gt;
&lt;p&gt;也可以进一步细化控制每一个子图所占区域范围：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kn&amp;quot;&gt;import&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;matplotlib.gridspec&lt;/span&gt; &lt;span class=&amp;quot;kn&amp;quot;&gt;as&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;gridspec&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;gs&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;gridspec&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;GridSpec&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;figure&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;figsize&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;16&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;9&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;),&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;dpi&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;72&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;suptitle&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;Distance offset from start&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;add_subplot&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;gs&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[:,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_title&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;Total&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;X(m)&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_ylabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;Y(m)&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax2&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;add_subplot&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;gs&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax2&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_title&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax2&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;t(s)&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax2&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_ylabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;0m&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax3&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;add_subplot&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;gs&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax3&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_title&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;Y&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax3&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;t(s)&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax3&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_ylabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;0m&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt=&amp;quot;基本二维图&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/blog/skill-2016-06-06a/3.png&amp;quot; /&gt;  &lt;/p&gt;
&lt;p&gt;这种情况下，第一张子图将占据第一行，第二张子图占据第二行的第一列，第三张则是第二行的第二列。  &lt;/p&gt;
&lt;h4&gt;三维&lt;/h4&gt;
&lt;p&gt;三维图的绘制也是被支持的，只需要导入一个模块便可以在绘制的时候加上z轴的参数：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kn&amp;quot;&gt;import&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&amp;quot;kn&amp;quot;&gt;as&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;plt&lt;/span&gt;
&lt;span class=&amp;quot;kn&amp;quot;&gt;from&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;mpl_toolkits.mplot3d&lt;/span&gt; &lt;span class=&amp;quot;kn&amp;quot;&gt;import&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;Axes3D&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;figure&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;figsize&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;16&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;9&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;),&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;dpi&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;72&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;add_subplot&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;projection&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;3d&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_title&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;三维图&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_ylabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;Y&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_zlabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;Z&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;scatter&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;([&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;],&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;],&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;3&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt=&amp;quot;基本二维图&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/blog/skill-2016-06-06a/4.png&amp;quot; /&gt;  &lt;/p&gt;
&lt;h3&gt;动画&lt;/h3&gt;
&lt;p&gt;动画也是被支持的，其核心在于一个模块和一个方法，以下是我常用的方案更详细可以看&lt;a href=&amp;quot;http://matplotlib.org/api/animation_api.html&amp;quot;&gt;这里&lt;/a&gt;：  &lt;/p&gt;
&lt;p&gt;导入核心库和使用核心方法：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;c1&amp;quot;&gt;# 核心库&lt;/span&gt;
&lt;span class=&amp;quot;kn&amp;quot;&gt;import&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;matplotlib.animation&lt;/span&gt; &lt;span class=&amp;quot;kn&amp;quot;&gt;as&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;animation&lt;/span&gt;
&lt;span class=&amp;quot;c1&amp;quot;&gt;# 生成动画对象&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;ani&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;animation&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;FuncAnimation&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;fig_p&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;draw_distances_run&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;draw_distances_data_gen&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;interval&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;200&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中&lt;code&gt;draw_distances_run&lt;/code&gt;方法是绘制每一帧更新时用于绘制的方法，&lt;code&gt;draw_distances_data_gen&lt;/code&gt;方法用于在绘制中修改绘制数据，而&lt;code&gt;interval&lt;/code&gt;参数则是一个毫秒的时间，是每两帧之间的间隔。
那么如何具体的来使用呢？  &lt;/p&gt;
&lt;p&gt;我此处选择的是一个并非那么合理但是快速的方法，当然，其实外面用个类包起来其实就好，满足需求就行。。。  &lt;/p&gt;
&lt;h4&gt;初始化数据&lt;/h4&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;def&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;draw_distances_start&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;():&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;plt&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;figure&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;figsize&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;16&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;9&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;),&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;dpi&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;120&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;suptitle&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;Distance offset from start&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;add_subplot&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;projection&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;3d&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_title&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;图1&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_ylabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;Y&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_zlabel&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;Z&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;data1&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;scatter&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;([],&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[],&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[])&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;data1&lt;/span&gt;
&lt;span class=&amp;quot;c1&amp;quot;&gt;# 全局变量&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;fig&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;data1&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;draw_distances_start&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;()&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;data_now&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[],&lt;/span&gt; &lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[],&lt;/span&gt; &lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;z&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[]]&lt;/span&gt;
&lt;span class=&amp;quot;n&amp;quot;&gt;data_new&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[],&lt;/span&gt; &lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[],&lt;/span&gt; &lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;z&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;更新数据&lt;/h4&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;def&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;draw_distances_data_gen&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;():&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;key&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;data_now&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;data_now&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;key&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;extend&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;data_new&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;key&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;yield&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;data_now&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;更新绘制&lt;/h4&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;def&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;draw_distances_run&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;):&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;z&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;],&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;],&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;z&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;data1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_offsets&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;([(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;],&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])])&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;data1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_3d_properties&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;([&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;z&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]],&lt;/span&gt; &lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;z&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_xlim&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;nb&amp;quot;&gt;min&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;),&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;max&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;))&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_ylim&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;nb&amp;quot;&gt;min&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;),&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;max&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;))&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;ax1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;set_zlim&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;nb&amp;quot;&gt;min&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;z&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;),&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;max&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;z&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;))&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;data1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意，这里更新x和y用的是&lt;code&gt;set_offsets&lt;/code&gt;方法，而更新z用的是&lt;code&gt;set_3d_properties&lt;/code&gt;方法。&lt;/p&gt;
&lt;h4&gt;提供新数据&lt;/h4&gt;
&lt;p&gt;以上代码中，一个全局的&lt;code&gt;data_now&lt;/code&gt;变量用于存储当前要绘制的数据，而&lt;code&gt;data_new&lt;/code&gt;则是该帧的新数据。在实际使用中，为了防止卡顿，一般选择用一个新的线程来更新&lt;code&gt;data_new&lt;/code&gt;的数据：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;k&amp;quot;&gt;def&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;refresh&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;():&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;while&lt;/span&gt; &lt;span class=&amp;quot;bp&amp;quot;&gt;True&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;data_new&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;get_new_data&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;()&lt;/span&gt;

&lt;span class=&amp;quot;n&amp;quot;&gt;thread&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;start_new&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;refresh&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一切准备就绪后，调用&lt;code&gt;plt.show()&lt;/code&gt;即可开始绘制动画。&lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Monday, 06 Jun 2016 11:00:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2016.06.06 11:00:article/Skill-2016_06_06_a</guid>
<category>Python</category>
<category>Matplotlib</category>
<category>科学绘图</category>
<category>三维绘图</category>
<category>动态绘图</category>
</item>

<item>
<title>【Lolita】任务-超越岛娘</title>
<link>http://dtysky.moe/article/Life-2016_06_04_a</link>
<description>&lt;h2&gt;任务概要&lt;/h2&gt;
&lt;p&gt;等级：A。&lt;br /&gt;
保密程度：公开。&lt;br /&gt;
预期时间成本：无法估计。&lt;br /&gt;
预期成功率：50%。&lt;br /&gt;
性质：竞争。&lt;br /&gt;
对象：&lt;a href=&amp;quot;http://www.shuizilong.com/house/about-me/&amp;quot;&gt;岛娘&lt;/a&gt;。&lt;br /&gt;
描述：超越岛娘涉及两个几乎豪不相关的维度的努力。这两个维度分别代表了人类对于自身理性与智力的追求，以及对于激情和身体的追求。二者对于个人行动力和毅力的水准皆有一个较高的要求，同时在更加深刻的层面上，后者已经被认定对“颠覆现存不合理与愚昧的社会规则”这一时代性的反抗活动有着显著的贡献。事实上，如果说有什么人能够真正推动社会的进度，那他们首先必然是一个反抗者。  &lt;/p&gt;
&lt;h2&gt;必要知识&lt;/h2&gt;
&lt;p&gt;完成任务的前提是对于任务本身有着明确而深刻的认识，通过对以下概念的了解，可以越过一个初步的门槛，这将作为进一步认知的一种必要途径。&lt;/p&gt;
&lt;h3&gt;维度一&lt;/h3&gt;
&lt;p&gt;相关于理性与智力的这个维度，被体现于一种名为&lt;strong&gt;编程&lt;/strong&gt;的创造性智力活动中。这种活动完全由人类所创造，其本身自从出现以来已经发生了数次的迭代，在若干次迭代中变得越来越复杂，分工也越来越明确（注：这只发生在专业群体中，对于刚入门或者试图通过其他领域的专业知识来类比本活动的人群，可能觉得此活动意外简单并且没有任何实质上的难度，当然，他们本质上并无法通过这个活动产生任何可用的事物）。在现在的环境中，此活动已经将为其贡献的人群分为了若干抽象的&lt;strong&gt;层次&lt;/strong&gt;。一般而言，为&lt;strong&gt;底层&lt;/strong&gt;的做贡献的群体似乎更能体会到智力上的乐趣，同时其似乎也更加接近于该活动的数学本源；而为&lt;strong&gt;上层&lt;/strong&gt;做贡献的群体则更能体会到由复杂性和实用性带来的快感，但此群体似乎会在智力上被底层群体所不屑（事实证明，维护好上层所需要的努力并不比底层要低，造成“有智力差距”的这种错觉似乎是由&lt;strong&gt;幸存者偏差&lt;/strong&gt;造成的一种单纯的偏见）。&lt;br /&gt;
但事实证明，在现在的复杂环境中，对底层做出真正意义上贡献或者爱着底层这种活动的群体似乎更加体现出了一种对此活动本源的一种单纯的追求。这种判定被解读后有了如下解释——“在现在的环境下继续做底层所可以预期的回报（社会意义上）远不及上层，这意味着付出同样的努力后回报率可能不到上层的50%（粗略估计），即，这种行为本质上是一种&lt;strong&gt;类似于宗教信徒的仪式性质的狂热献祭&lt;/strong&gt;。” &lt;br /&gt;
这种仪式行为在上层也有所体现，并且有极大概率出现在那些曾经在底层浸染过许久的群体身上。这种群体在整个上层群体中所占的比例可以用“稀少”来评价，虽然有许多试图尝试并且似乎已经举行过仪式的对象被观察到，但事实表明这些对象完全不知道仪式的本质或者只是一知半解，他们的仪式并不仅不能产生应有的效果，反而可能会伪装并混入正确的仪式成果并为这个环境的毁灭埋下定时炸弹。  &lt;/p&gt;
&lt;h3&gt;维度二&lt;/h3&gt;
&lt;p&gt;相关于激情与身体的追求，主要体现在&lt;strong&gt;非本社会性别装束&lt;/strong&gt;与一种名为&lt;strong&gt;Lolita fashion&lt;/strong&gt;的特殊装扮之上。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;社会性别&lt;/strong&gt;是一种社会学概念，用于描述人类在当前社会的特征之一。目前已经证实社会性别起源于人类的自然性别，虽然这两个性别目前保持着几乎是完全的一致性，但实际上并不是这回事（部分资料可以参考&lt;strong&gt;酷儿理论&lt;/strong&gt;）。但无法改变的是，一个人最初的社会性别是由其出生时的自然性别被判定的，这实际上是一种社会学意义上的规则限定，也是其它可以作为一种快感的来源——这种快感源于对社会规则的僭越。在现今环境下，除了少数群体，大部分人群在这种僭越发生还是持有负面的态度，他们将其称为&lt;strong&gt;异装癖&lt;/strong&gt;，毋庸置疑。这种评价是一种愚蠢和反智的、为了维护自己落后和可怜价值体系的一种自我保护行为。&lt;br /&gt;
现有的道德体系最终一定会被颠覆，但颠覆后“异装癖”改变本身也将会被消除，也即，规则会变得不再是有被僭越的意义的规则。这时快感应当会消失，但考虑到渴望异性装束的群体和只是为了感受到快感的人群并非完全相交，为了自由和平等的进一步实现，牺牲这部分变态的快感来源是可行的。  &lt;/p&gt;
&lt;p&gt;Lolita fanshon，中译&lt;strong&gt;洛丽塔风尚&lt;/strong&gt;，是一种装扮风格。其是欧洲中世纪的洛可可和哥特风格传入日本后，在日本被改造后的风格，暂不知和小说《Lolita》有何关系。Lolita服装（以下简称LO服）整体呈现出与日常服装完全不同的风格，其基本以洋服一般的外形和大量的印花作为主要元素（并非所有都有大量印花，看风格），其派系主要分为“Sweet”、“Gosick”和“Class”三类。Sweet系体现为甜美，Gosick和Class则体现为较为标准的中世纪风格。一般而言，对于比较娇小的着装者，Sweet系是比较建议的（~165cm），这种着装者一般被称为可爱等；对于身高比较高的（170cm~），一般被称为&lt;strong&gt;天空树&lt;/strong&gt;的的群体，Gosick和Class风格更加本建议。当然，这种搭配并不是必须的，严格意义上来讲，“最终，一切皆甜”。&lt;br /&gt;
LO服现今在国内分为国牌和日牌（山寨不算在内）。一般而言日牌无论是设计还是质量都更好，不过价格很高，并且都是均码，一般程度的JSK（详见小裙子分类）价格大概在2K~2K5人民币，衬衫在600~1K人民币。国牌可能有各种各样的问题，但价格相对较低，一般一件JSK的价格在500~1K人民币之间。日牌比较著名的牌子有AP、Baby、ANP（Baby副牌）、JNJ、IW、BOZ等。AP主要出产Sweet系，一般比较短小，不适合天空树，Baby、ANP和IW比较杂食，JNJ主要是Class系，但设计通常比较奇葩，BOZ主要是Gosick系，基佬服首选。  &lt;/p&gt;
&lt;h3&gt;特别说明&lt;/h3&gt;
&lt;p&gt;目前社会上有传言表明维度一和维度二并非完全意义上的不相关。有不少事实表明，在某些对象对&lt;strong&gt;编程&lt;/strong&gt;活动达到一定的狂热后，&lt;strong&gt;非本社会性别装束&lt;/strong&gt;冲动将会在该对象身上开始体现，并有大概80%的概率会付出初步的实践。在初步实践后，其中的50%对象会就社会、世界和宇宙的本质进行怀疑并对相关知识进行贪婪性的索取。在一定规模的研究后，有25%的对象会发生价值体系崩坏并试图重建，在重建之后，对象表现为一种虚无主义和自由主义的混杂状态，并且部分对象可能会滑向犬儒主义。当然，无论如何，这些对象对&lt;strong&gt;非本社会性别装束&lt;/strong&gt;不再抱有任何罪恶感，反而会喜欢上它并对其做出更多的努力，包括但不限于——改善体型、学习伪装以及愿意花更多的资金去购置漂亮的服装，比如LO服。  &lt;/p&gt;
&lt;p&gt;而&lt;strong&gt;非本社会性别装束&lt;/strong&gt;似乎也会对&lt;strong&gt;编程&lt;/strong&gt;活动产生反哺效应，据称，在&lt;strong&gt;非本社会性别装束&lt;/strong&gt;状态下，&lt;strong&gt;编程&lt;/strong&gt;活动的效率将会提高~50%，有待证实。&lt;br /&gt;
追加：&lt;strong&gt;LO服&lt;/strong&gt;对&lt;strong&gt;编程&lt;/strong&gt;活动的效率似乎可以提升~200%，有待证实。  &lt;/p&gt;
&lt;h2&gt;现状分析&lt;/h2&gt;
&lt;p&gt;目前，岛娘在&lt;strong&gt;编程&lt;/strong&gt;活动和&lt;strong&gt;LO服装扮&lt;/strong&gt;两个领域均有杰出的能力，而我大概处于一个平均线的程度。&lt;br /&gt;
但我认为我的潜力是巨大的，对岛娘的超越并非一个不可能的任务。  &lt;/p&gt;
&lt;p&gt;注：我的好友，伟大的&lt;strong&gt;西兰花教主&lt;/strong&gt;认为我是在搞笑，他说&lt;strong&gt;岛娘的女子力是我三辈子都不可能超越的&lt;/strong&gt;。我为此感到沮丧，但这并不能削减我努力的信心。&lt;/p&gt;
&lt;p&gt;这是我的一张LO服照片，作为未来的对照组：  &lt;/p&gt;
&lt;p&gt;&lt;img alt=&amp;quot;LO-dtysky&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/blog/life-2016-06-04a/1.jpg&amp;quot; /&gt;&lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Saturday, 04 Jun 2016 23:59:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2016.06.04 23:59:article/Life-2016_06_04_a</guid>
<category>Lolita</category>
<category>Lo服</category>
<category>任务</category>
<category>A级</category>
</item>

<item>
<title>【UWB/室内定位】坑和结论</title>
<link>http://dtysky.moe/article/Skill-2016_01_30_a</link>
<description>&lt;p&gt;年轻人，初入职场，没事不要给自己找坑。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;继续深入研究，身心俱疲，这里是一些坑和结论。&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;1 坑和结论&lt;/h1&gt;
&lt;p&gt;这里所用UWB芯片皆为Decawave家的DW1000，分别使用TREK1000套件和某公司的产品进行了测试。&lt;br /&gt;
这里首先声明，DWM1000这个小模块基本只能拿来玩玩,想要做正事的可以直接跳过。&lt;/p&gt;
&lt;h2&gt;1.0 算法&lt;/h2&gt;
&lt;p&gt;TREK1000套件的定位算法基本是直接解算，产品则对原始的测距信息有限幅，定位输出有卡尔曼滤波。&lt;br /&gt;
以下Python随便写的用最小二乘法通过同一个平面的若干个基站和tag的距离求xy坐标的函数，比较糙，有兴趣自己看看吧：&lt;br /&gt;
函数输入是每个anchor的位置构成的数组,以及每个anchor和tag的距离序列构成的数组.&lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;kn&amp;quot;&gt;from&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;scipy.optimize&lt;/span&gt; &lt;span class=&amp;quot;kn&amp;quot;&gt;import&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;leastsq&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;curve_fit&lt;/span&gt;
&lt;span class=&amp;quot;kn&amp;quot;&gt;from&lt;/span&gt; &lt;span class=&amp;quot;nn&amp;quot;&gt;numpy&lt;/span&gt; &lt;span class=&amp;quot;kn&amp;quot;&gt;import&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;sqrt&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;square&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;array&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;subtract&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;add&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;multiply&lt;/span&gt;
&lt;span class=&amp;quot;k&amp;quot;&gt;def&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;get_xyz_by_ls&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;anchors&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;distances&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;):&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;def&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;fun&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;ds&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;):&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;res_x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res_y&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;anchors_x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;anchors_y&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;ds&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;add&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;add&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;multiply&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;multiply&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;anchors_x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;],&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res_x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)),&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;anchors_x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]),&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;add&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;multiply&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;multiply&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;anchors_y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;],&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res_y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)),&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;anchors_y&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]))&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;

    &lt;span class=&amp;quot;k&amp;quot;&gt;def&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;error&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;ds&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;dis&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;):&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;dis&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;fun&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;ds&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;

    &lt;span class=&amp;quot;n&amp;quot;&gt;length&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;len&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;distances&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;a&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;a&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;anchors&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;],&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;a&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;a&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;anchors&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
    &lt;span class=&amp;quot;c1&amp;quot;&gt;# ps[0]: xi+1 - xi, xi+1 ^ 2 - xi ^ 2&lt;/span&gt;
    &lt;span class=&amp;quot;c1&amp;quot;&gt;# ps[1]: yi+1 - yi, yi+1 ^ 2 - y1 ^ 2&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;
                 &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;][&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;][&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;xrange&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;length&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)],&lt;/span&gt;
                 &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;square&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;][&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;square&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;][&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;xrange&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;length&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)]&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;
                 &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;][&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;][&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;xrange&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;length&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)],&lt;/span&gt;
                 &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;square&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;][&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;square&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;][&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;xrange&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;length&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)]&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;array&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;c1&amp;quot;&gt;# ds: di+1 ^ 2 - di ^ 2&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;ds&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;square&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;distances&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;square&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;distances&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;])&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;xrange&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;length&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)]&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;x0&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;leastsq&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;error&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;args&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;ps&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;ds&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;))[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;x&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;y&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;1.1 适用范围&lt;/h2&gt;
&lt;p&gt;UWB一般应用场合是室内定位，低空定位，动态性能要求不太高的定位。&lt;br /&gt;
定位原理在上一篇说过了，都是测距后用三边法或者多基站下的线性拟合。而测距使用的原理一般是TOF（飞行时间），这个和微波雷达、激光测距等基本是一个原理，所以也面临相同的问题。&lt;br /&gt;
定位对基站的布局是有需求的，基本要求tag不能越过anchor所框的区域内，同时基站的布置和定位要求密切相关，有几个维度的需求，基站就应该有几个维度的变化，如果要三维定位，一般要求至少一个基站在空中。  &lt;/p&gt;
&lt;h2&gt;1.2 精度&lt;/h2&gt;
&lt;p&gt;精度方面，由于我们用于空中的水平定位，所以关心的是水平、也就是xy轴的精度，我分别进行了地面的静态测试和无人机上的动态测试，结论如下：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;单对精度可以认为始终在15cm之内，但要求天线位置最佳，天线的坑会在下面说道。与此同时，两米之内的测距误差可能较大，这个是原理所决定的，暂时无解。&lt;/li&gt;
&lt;li&gt;定位精度和基站围成的范围与tag到基站的距离都有着很大关系，一般要求需要定位的距离和基站围成的距离越接近越好。在13m x 6m的布局下，tag随着和基站绝对距离的增加，其定位精度会有所下降： 5-15m时，精度在20cm左右；15-25m时，精度在30cm左右；25-35m时，精度在40cm左右。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2&gt;1.3 静态性能&lt;/h2&gt;
&lt;p&gt;静态性能指测距和定位可以达到的帧率，实测最高大概在三十多帧（产品），开发套件只有10帧左右（算法决定），不过对于一般应用也足够了。&lt;br /&gt;
在静态测试中，测距的定位均有一定的失效率，失效率大概在3%左右。失效率和tag到基站的距离密切相关，同时微波传播的路径也有不小关系，和电源、机械振动、电磁环境都有一定的关系。以上3%的失效率只是去除了机械振动与环境干扰后的结论。&lt;/p&gt;
&lt;h2&gt;1.4 动态性能&lt;/h2&gt;
&lt;p&gt;动态性能指的是在运动时的定位的失效率以及跟随性。&lt;br /&gt;
和无人机上的差分GPS进行对比，跟随性方面基本可以认为是实时跟随，这个和算法有很大的关系（这里采用限幅和卡尔曼滤波）。失效率方面，距离越远失效率越高，基本可以认为每十米会增加20%左右的失效率。  &lt;/p&gt;
&lt;h2&gt;1.5 失效分析&lt;/h2&gt;
&lt;p&gt;综上，影响UWB测距（这个是定位的基本）性能的元素如下：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;距离：距离越远，测距性能受环境的影响越明显，这是一个被动技能，可以理解为基础能力下降，受到异常状态的概率上升。&lt;/li&gt;
&lt;li&gt;传播路径：空中明显比地面性能差，室外明显比楼道性能差，这应该是由于墙面对微博的反射导致的信号增强造成的，虽然反射同时也会出现多径效应，但在实验中体现并不明显，所以基本可以认为有墙面对测距性能是有利的。&lt;/li&gt;
&lt;li&gt;电源：电源功率不足时，可能会导致信号发射接收时基站/TAG宕机，笔记本的USB口供电时出现过这个问题。  &lt;/li&gt;
&lt;li&gt;机械振动：这个不同于一定范围内运动时的失效，而是电机等造成的小幅度高频机械振动，这种振动会对二十米以上的测距性能造成毁灭性影响。&lt;/li&gt;
&lt;li&gt;电磁干扰：这个比较玄学了，我这没什么好的解释。 &lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;影响定位，却无关于测距的元素就是算法方面了，由于算法的问题，所以基站的布局必须和tag和基站之间的最大距离同步，比如tag可能在空中100m，那么最好有一个100m x 100m的基站布局，如果要测三维，应该至少有两个基站将tag夹在中间。  &lt;/p&gt;
&lt;p&gt;完。&lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Saturday, 30 Jan 2016 23:00:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2016.01.30 23:00:article/Skill-2016_01_30_a</guid>
<category>UWB</category>
<category>DW1000</category>
<category>TREK1000</category>
<category>TOF</category>
<category>室内定位</category>
</item>

<item>
<title>【UWB/室内定位】DW1000大坑-基础系统搭建1</title>
<link>http://dtysky.moe/article/Skill-2015_11_21_a</link>
<description>&lt;p&gt;如果自嘲只不过是将真诚化为伪装的工具。&lt;br /&gt;
那么。&lt;br /&gt;
就让我将之坚持到底吧。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;由于公司项目需求所以研究了一下UWB定位，UWB即超宽频定位，一般用于室内离线定位，在众多离线定位方法中它算是精度最高的之一，其定位原理一般为TOA活着TDOA。DW1000则是公司研发的一款UWB定位芯片，它同时也可以用于通信。此芯片据说可以达到300M、6.8mbps的传输速度，定位精度可以到达10cm，并且除了官方的开发套件外也有现成的开源方案。本章将会说明如何搭建一个基础的UWB硬件系统，着重于说明期间遇到的一些大坑，比如电源...  &lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;1 UWB&lt;/h1&gt;
&lt;p&gt;UWB定位，超宽频定位，本质上和GPS卫星定位的原理是一样的，它不过是将卫星放在了地面上，也就是自己搭建作为卫星的基站，然后去根据和GPS定位相同的算法计算出每个Anchor（基站）到Tag（移动站）的距离，从而解算出移动站的空间坐标，对于三维空间定位而言一般至少需要四个Anchor，Anchor的数量增加不但可以构建超定方程组使用一些算法提高精度，同时也可以作为通信质量不佳下的冗余设计，所以在可以接受的条件下，基站的数量一般越多越好。  &lt;/p&gt;
&lt;p&gt;&lt;img alt=&amp;quot;UWB&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/-1.jpg&amp;quot; /&gt;&lt;/p&gt;
&lt;h2&gt;1.1 DW1000&lt;/h2&gt;
&lt;p&gt;&lt;a href=&amp;quot;http://www.decawave.com/products/dw1000&amp;quot;&gt;DW1000&lt;/a&gt;是&lt;a href=&amp;quot;http://www.decawave.com/&amp;quot;&gt;DecaWave&lt;/a&gt;公司推出的一款UWB定位芯片，按照其DATASHEET说明，其有效距离可以达到300m，同时据代理商提供的信息，其定位精度可以到到10cm的程度，这在业内算是一个非常不错的参数。不过介于每个厂商总会吹一些牛的这个业界常识，我们还是要自己测试一下才知道具体的事实。&lt;br /&gt;
对于有钱的开发者，建议直接购买&lt;a href=&amp;quot;http://www.decawave.com/products/evk1000-evaluation-kit&amp;quot;&gt;EVK1000&lt;/a&gt;或者&lt;a href=&amp;quot;http://www.decawave.com/products/trek1000&amp;quot;&gt;TREK1000&lt;/a&gt;进行开发，这两者都是官方自己生产的开发板，无论是电路走线还是电源方面都有着很可靠的保证，操作上更是做到了去除对PC的依赖，开机即可在LCD屏上看到测距效果。对于一般的开发者，则建议购买&lt;a href=&amp;quot;http://www.decawave.com/products/dwm1000-module&amp;quot;&gt;DWM1000&lt;/a&gt;这个官方封装好的模块进行开发，相对于裸片，它集成了时钟和天线等，比较便于测试。  &lt;/p&gt;
&lt;p&gt;下面是我购买到的DWM1000模块，260一块~：  &lt;/p&gt;
&lt;p&gt;&lt;img alt=&amp;quot;DWM1000&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/0.jpg&amp;quot; /&gt;    &lt;/p&gt;
&lt;p&gt;DW1000的控制比较简单，其指令和数据的传输全部是基于SPI总线的，这是最简单的一种总线，通过有SPI支持的单片机几乎可以进行无痛操作，而具体的寄存器介绍和配置请见&lt;a href=&amp;quot;http://www.decawave.com/support&amp;quot;&gt;DW1000 UserManual&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;1.2 TOA/TDOA&lt;/h2&gt;
&lt;p&gt;UWB定位的原理是TOA或者TODA，当然也有还有AOA等，不常见。  &lt;/p&gt;
&lt;h3&gt;1.2.1 TOA&lt;/h3&gt;
&lt;p&gt;TOA即“到达时间”，这种方式定位是通过Anchor和Tag之间的多次通信实现的，如下图：&lt;br /&gt;
&lt;img alt=&amp;quot;TOA&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/1.jpg&amp;quot; /&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Anchor首先发给Tag一个包，同时记录下Anchor当前的时间信息，记为T1。  &lt;/li&gt;
&lt;li&gt;Tag收到基站的信息，返回一个ACK。  &lt;/li&gt;
&lt;li&gt;Anchor收到Tag的ACK，记录当前的时间信息，记为T2。  &lt;/li&gt;
&lt;li&gt;Anchor计算时间差Tr = T2 - T1，并且根据此计算出距离：  &lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;d = c * Tr / 2  &lt;/p&gt;
&lt;p&gt;其中c为光速。  &lt;/p&gt;
&lt;p&gt;当然，实际应用中为了更加靠谱，往往不仅仅是利用两次通信来测距，还会有更加复杂的多次通信来提高精度，详细的同样可以看DW1000的UserManual最后一节。&lt;br /&gt;
对于空间定位，只需要利用&lt;a href=&amp;quot;https://en.wikipedia.org/wiki/Trilateration&amp;quot;&gt;SX（球面相交法）&lt;/a&gt;便可以得出最后的坐标。&lt;br /&gt;
可见，为了一次定位，每个Anchor和Tag之间要进行两次通信，故DecaWave又将这种定位方式称为“Two-way-ranging”。这种定位的优势在于其实现的便捷性和对硬件的宽容，只需要有几个摆放在不同位置的Anchor和一个Tag便可进行定位，而缺点嘛...首先自然是定位速度了，其次，由于每次通信的质量无法保证，而一对Anchor/Tag又无法做自我的校准，精度自然也会受到相当的影响。&lt;/p&gt;
&lt;h3&gt;1.2.2 TDOA&lt;/h3&gt;
&lt;p&gt;TODA即“到达时间差”，这种方式的一次测距是由两个Anchor和一个Tag实现的。在这种模式下，多个时钟完全同步的Anchor同时接受来自一个Tag的包，对于不同位置的Anchor，同一个Tag的同一次广播包到达的时间是不同的，所以便有有以下算法：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Tag发出一个广播包。  &lt;/li&gt;
&lt;li&gt;两个Anchor接收到同一个包，Anchor1接收到的时间为T1，Anchor2接收到的时间为T1。  &lt;/li&gt;
&lt;li&gt;计算时间差Td = T2 - T1。&lt;/li&gt;
&lt;li&gt;对于至少四个Anchor，可以得到三组这样的两两之间的信息。&lt;/li&gt;
&lt;li&gt;通过数学方法（&lt;a href=&amp;quot;https://en.wikipedia.org/wiki/Multilateration&amp;quot;&gt;multi-lateration&lt;/a&gt;）可以解算出Tag的空间坐标。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于算法比较复杂，这里不再赘述。  &lt;/p&gt;
&lt;p&gt;由此可见，TDOA的优势首先在于一次定位的通信次数显著减少，其次由于是用时间差而非绝对时间进行测距，其精度也比TOA高出一些。但优势总是以一些代价换来的，TDOA系统中各个Anchor的时钟必须严格同步，由于这种定位本质上是依赖于光速的，所以1ns的固有时钟误差便可以造成30cm的固有距离误差，这一点显然是不可接受的。而要打造一个间距比较大的精确同步系统成本又是比较高昂的，所以从这个层面来讲，TDOA并非一般人或者公司可以玩得起的。&lt;br /&gt;
当然，DecaWave自身研究出了另一种TDOA的方式(详见APS003)，也就是在时钟之外另外加了一个同步位用于同步，不过看起来也是比较复杂的，暂时没有深究。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;2 基础系统搭建/电源需求&lt;/h1&gt;
&lt;p&gt;在搭建系统之前首先调研有没有现成的项目可以用于测试，寻找后首先进入视线的是&lt;a href=&amp;quot;https://github.com/thotro/arduino-dw1000&amp;quot;&gt;基于arduino的这个项目&lt;/a&gt;，此项目使用Arduino作为主控，提供了一系列的API和例子。  &lt;/p&gt;
&lt;h2&gt;2.1 基于Arduino的系统&lt;/h2&gt;
&lt;p&gt;首先在淘宝上购买了二十多一片的山寨Arduino Nano，用面包板搭建了一个最基础的两片测距系统进行测试，系统如图，测试遇到的一些问题如下：&lt;br /&gt;
&lt;img alt=&amp;quot;山寨&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/2.jpeg&amp;quot; /&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;程序无法工作，重复setup或者跑着跑着跑飞了。   &lt;/li&gt;
&lt;li&gt;使用示波器检测SPI通信，表明正常；使用逻辑分析仪抓SPI包，分析正常。排除SPI接口问题。  &lt;/li&gt;
&lt;li&gt;可连接性测试例子调试，程序跑飞，操蛋过程略，在每次打印设备信息前加100ms的延迟，跑通。  &lt;/li&gt;
&lt;li&gt;基础收发例子，跑飞，在打印信息前加延迟，无效，全部注释逐个取消注释，发现代码超过一定量跑飞，初步定为为片子质量有问题。  &lt;/li&gt;
&lt;li&gt;基础收发例子，将缓冲数组的长度从1024改为了256，程序跑通，第二天到公司又跑不通。   &lt;/li&gt;
&lt;li&gt;经过提醒在电源和地之间加了个大电容，跑的时间长了点，粗略定位为供电问题。  &lt;/li&gt;
&lt;li&gt;不再使用山寨Arduino的3.3v输出口给DWM1000供电，而是换上了独立的线性电源，程序基本跑通，定位为电源问题。  &lt;/li&gt;
&lt;li&gt;测试基础收发，发现程序虽然可以跑但是收不到数据，于是对源代码进行了改造，不对数据进行判断直接读DW1000的RX_BUFFER之中的数据进行打印，发现一部分数据数对的，但后面都会乱码。  &lt;/li&gt;
&lt;li&gt;将“Hello DW1000”改成了“Fuck DW1000”，程序跑通，初步定位为山寨片子质量问题。  &lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;以下为测试过程中的一些现场图：  &lt;/p&gt;
&lt;p&gt;&lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/3.jpg&amp;quot; /&gt;&lt;br /&gt;
&lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/4.jpg&amp;quot; /&gt;&lt;br /&gt;
&lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/5.png&amp;quot; /&gt;&lt;br /&gt;
&lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/6.jpg&amp;quot; /&gt;&lt;br /&gt;
&lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/7.jpg&amp;quot; /&gt;&lt;br /&gt;
&lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/8.jpg&amp;quot; /&gt;&lt;br /&gt;
&lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/9.png&amp;quot; /&gt;  &lt;/p&gt;
&lt;p&gt;之后购买了Arduino中文网推荐的卖家之一的DFROBOT生产的正版Arduino Nano，搭建了系统进行测试：&lt;br /&gt;
&lt;img alt=&amp;quot;正版&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/10.JPG&amp;quot; /&gt;  &lt;/p&gt;
&lt;p&gt;测试经历：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;测试基础收发，还是和之前一样的问题，看来山寨片子或许只是供电差了一些，其他也倒还好。  &lt;/li&gt;
&lt;li&gt;测试MessagePingPong，发现可以跑通，但通信质量并不好，有时还是会出现乱码。  &lt;/li&gt;
&lt;li&gt;测距测试，使用其中一个座位Anchor，一个作为Tag，初步测距成功，并且RX_POWER和开源项目自身的指标比较相近。  &lt;/li&gt;
&lt;li&gt;多个Anchor测距测试，通信质量急速下降，再次判定为电源问题。  &lt;/li&gt;
&lt;li&gt;改进电源后再次测试，发现测距很不稳定，总是某个Anchor信号很强，其他很弱，或者都很弱。  &lt;/li&gt;
&lt;li&gt;对Anchor和Tag之间距离进行了变换，发现当前系统的有效距离和稳定性很差。  &lt;/li&gt;
&lt;li&gt;由于电子工程师为了省钱买的线性电源，Arduino全烧了，实验中止。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;以下是这一段测试的一些现场图：  &lt;/p&gt;
&lt;p&gt;&lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/11.JPG&amp;quot; /&gt;&lt;br /&gt;
&lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/12.png&amp;quot; /&gt;&lt;br /&gt;
&lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/14.JPG&amp;quot; /&gt;  &lt;/p&gt;
&lt;h2&gt;2.2 基于MBED的系统&lt;/h2&gt;
&lt;p&gt;虽然Arduino全烧了，但我们还有山寨的MBED，虽然是山寨的，也比正版的Arduino Nano贵不了多少，但其性能还是要高出不少的，加上无意中发现了&lt;a href=&amp;quot;https://developer.mbed.org/users/manumaet/code/DecaWave/&amp;quot;&gt;这个开源项目&lt;/a&gt;，所以就不妨尝试了一下。  &lt;/p&gt;
&lt;p&gt;&lt;img alt=&amp;quot;MBED&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/15.JPG&amp;quot; /&gt;  &lt;/p&gt;
&lt;p&gt;基于MEBD的这套系统比起前面那个开源项目的例子要成熟一些，可以直接指定几个Anchor并且同步串口打印Tag到几个Anchor的距离，测试结果也比较喜人，稳定性和速度皆甩出Arduino一截，并且自身的3.3v输出可以带的动DW1000。注意，在实际使用中，三个MBED加上DW1000在测距时的功率达到了12W左右，可见功耗还是非常可观的，并且远远超出了官方文档标出的3.3v/500ma的极限。  &lt;/p&gt;
&lt;p&gt;以下是一些测试结果，比较不幸的是三号姬的DW1000在两次炸板事件中光荣牺牲了（后来换到了二号姬的面包板上），所以测试数据少一组：  &lt;/p&gt;
&lt;p&gt;&lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/16.jpg&amp;quot; /&gt;&lt;br /&gt;
&lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/17.jpg&amp;quot; /&gt;&lt;br /&gt;
&lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;/theme/image/2015-11-22-a/18.jpg&amp;quot; /&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;3 结论&lt;/h1&gt;
&lt;p&gt;由于补充的片子暂时没有到货，实验暂时如此，以下是这次总结出的DW1000使用注意点：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;供电很重要，DW1000非常吃功率，其瞬间电流可能非常大，对电源的稳定性也有一定要求，这一点务必注意。  &lt;/li&gt;
&lt;li&gt;对于复杂一点的应用，低端Arduino还是不要用。  &lt;/li&gt;
&lt;li&gt;如果可能，电路问题还是交给专业的玄学工程师去解决，否则容易事倍功半。  &lt;/li&gt;
&lt;li&gt;对于某些开源项目，你还是要明白底层原理，要能改源代码，这是没有办法的。  &lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Over，暂时进行距离-&amp;gt;坐标的算法实现。&lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Sunday, 22 Nov 2015 01:00:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2015.11.22 01:00:article/Skill-2015_11_21_a</guid>
<category>UWB</category>
<category>DW1000</category>
<category>Arduino</category>
<category>Mbed</category>
<category>TOA</category>
</item>

<item>
<title>【FPGA/图像处理】几何变换-旋转</title>
<link>http://dtysky.moe/article/Art-test</link>
<description>&lt;p&gt;旋转同样是仿射变换的一种特例，它接受一个角度，将图像绕着某个中心进行转动，适合逆向映射。旋转的实现有多种，比如两次错切的旋转&lt;sup&gt;[26]&lt;/sup&gt;、直接坐标变换&lt;sup&gt;[27]&lt;/sup&gt;等，中心点的选取方式也有许多，但对于FPGA采用图像的几何中心较为合适。。本节将会说明如何用FPGA实现旋转的模块。
这个IP核的资源在这里：
&lt;a href=&amp;quot;https://github.com/dtysky/FPGA-Imaging-Library/tree/Publish/Geometry/Rotate&amp;quot;&gt;Rotate&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;test quote&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h1&gt;3 算法实现&lt;/h1&gt;
&lt;p&gt;明确了设计和架构，便可以进行算法的实现。本章将会说明如何实现图像处理的算法，以及如何运用它们。&lt;/p&gt;
&lt;h2&gt;3.21 几何变换-旋转&lt;/h2&gt;
&lt;p&gt;旋转同样是仿射变换的一种特例，它接受一个角度，将图像绕着某个中心进行转动，适合逆向映射。旋转的实现有多种，比如两次错切的旋转&lt;sup&gt;[26]&lt;/sup&gt;、直接坐标变换&lt;sup&gt;[27]&lt;/sup&gt;等，中心点的选取方式也有许多，但对于FPGA采用图像的几何中心较为合适。。本节将会说明如何用FPGA实现旋转的模块。&lt;/p&gt;
&lt;h3&gt;3.21.1 原理&lt;/h3&gt;
&lt;p&gt;此设计中旋转的前向映射基本原理如式3-21-1，其中angle为旋转角度,$x_c$和$y_c$分别为图像中心横纵坐标。对于逆向映射应该对此式进行调整，变换为3-21-2的形式，可见旋转操作比较复杂，不仅涉及多次符号乘法、符号加法，还涉及到三角函数的计算。&lt;/p&gt;
&lt;p&gt;$$\begin{cases}Q[x_t,y_t] = I[x,y]  \\x_t = xc + (x - xc) * cos(a) - (y - yc)*sin(a)\\ y_t = yc + (x - xc) * sin(a) + (y - yc)*cos(a)\\x \in[0, w) ,y \in[0, h)\ \end{cases}.\ \ \ \ \ \ \ \ (3-21-1)$$&lt;/p&gt;

&lt;p&gt;$$\begin{cases}I[x,y] = Q[x_t,y_t]  \\x = (x_t - xc) * cos(a) + (y_t - yc) * sin(a) + xc\\ y = (-x_t + xc) * sin(a) + (y_t - yc) * cos(a) + yc\\x_t \in[0, w) ,y_t \in[0, h)\ \end{cases}.\ \ \ \ \ \ \ \ (3-21-2)$$&lt;/p&gt;

&lt;p&gt;首先要考虑三角函数的计算，如3.1中所述，FPGA中的特殊函数计算需要用查找表来实现，所以需要编写一个脚本来生成查找表，同时由于三角函数的值可能为负数，并且verilog中符号系统是补码系统，所以需要生成的是角度和此角度下三角函数值的补码。由于正弦和余弦的值域为[-1, 1]，同时一般用于变换的角度为[0,359]，所以综合考虑，最终选择将角度划分为360个点，使用1位符号位、1位整数位和18位的小数位的数据来表示函数值，这其中的难点在于如何将一个浮点数转换为20位的定点数补码，实现函数如下。&lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class=&amp;quot;k&amp;quot;&gt;def&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;format&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;num&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;):&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;format&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;num&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;split&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;len&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;float&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0.&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;xrange&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;18&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;):&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;eval&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;bin&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;**&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;19&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;eval&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0b&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;))[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:]&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;xrange&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;19&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;len&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)):&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;10000000000000000000&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;00000000000000000000&amp;#39;&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;旋转变换同样需要符号舍入，但整数位只有1位，所以没有溢出风险，可以将其简化，仅仅裁剪输出即可。&lt;/p&gt;
&lt;h3&gt;3.21.2 设计&lt;/h3&gt;
&lt;p&gt;根据原理可知，Rotate核(以下简称RTT核)需要四次符号乘法、四次符号舍入操作和四次符号加法，并且需要和基于行列计数的帧控制器进行合作。故其需要的配置参数与端口如表3-21-1和表3-21-2。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;名字&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;范围&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;td&gt;work_mode&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;0为流水线模式，1为请求响应模式&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;模块的工作模式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;tr&gt;
&lt;td&gt;data_width&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;1 - 12&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;数据位宽。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;im_width&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;1 - 4096&lt;/td&gt;
&lt;td&gt;320&lt;/td&gt;
&lt;td&gt;图像宽度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;im_height&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;1 - 4096&lt;/td&gt;
&lt;td&gt;240&lt;/td&gt;
&lt;td&gt;图像高度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;im_width_bits&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;取决于图像宽度&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;图像宽度的位宽。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mul_delay&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;取决于乘法器配置，1-14&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;乘法器延迟。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ram_RL&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;取决于帧控制器&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;帧控制器输出延迟。&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-21-1 配置参数
&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;名字&lt;/th&gt;
&lt;th&gt;端口&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;范围&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;td&gt;clk&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;Clock.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rst_n&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;复位，低有效。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;angle&lt;/td&gt;
&lt;td&gt;input&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;0 - 359&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;旋转角度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;in_enable&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;输入数据使能，在流水线模式下，它是另一个复位信号，在请求响应模式下，只有在它有效的时候in_data才会被真正地改变。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frame_in_ready&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的out_ready。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frame_in_data&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;data_width - 1 : 0&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的out_data。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frame_enable&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的in_enable。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frame_out_count_x&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;im_width_bits - 1 : 0&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的in_count_x。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;out_count_y&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;im_width_bits - 1 : 0&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的in_count_y。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;out_ready&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;输出数据有效，在两种模式下，这个信号都会在out_data可以被读取的时候有效。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;out_data&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;color_width - 1 : 0&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;输出数据，将会和out_ready同步输出。&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-21-2 端口
&lt;/center&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;名字&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sin&lt;/td&gt;
&lt;td&gt;SinLUT&lt;/td&gt;
&lt;td&gt;获取角度的正弦。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cos&lt;/td&gt;
&lt;td&gt;CosLUT&lt;/td&gt;
&lt;td&gt;获取角度的余弦。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MulX1&lt;/td&gt;
&lt;td&gt;Multiplier13Sx20SRTT&lt;/td&gt;
&lt;td&gt;13位有符号数和20位有符号数的乘法器，被用于定点数的乘法。你可以自己配置这个乘法器，然后更改&amp;quot;mul_delay&amp;quot;，但所有的乘法器必须拥有相同的流水线级数，并且不能更改端口的配置！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MulX2&lt;/td&gt;
&lt;td&gt;Multiplier13Sx20SRTT&lt;/td&gt;
&lt;td&gt;13位有符号数和20位有符号数的乘法器，被用于定点数的乘法。你可以自己配置这个乘法器，然后更改&amp;quot;mul_delay&amp;quot;，但所有的乘法器必须拥有相同的流水线级数，并且不能更改端口的配置！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MulY1&lt;/td&gt;
&lt;td&gt;Multiplier13Sx20SRTT&lt;/td&gt;
&lt;td&gt;13位有符号数和20位有符号数的乘法器，被用于定点数的乘法。你可以自己配置这个乘法器，然后更改&amp;quot;mul_delay&amp;quot;，但所有的乘法器必须拥有相同的流水线级数，并且不能更改端口的配置！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MulY2&lt;/td&gt;
&lt;td&gt;Multiplier13Sx20SRTT&lt;/td&gt;
&lt;td&gt;13位有符号数和20位有符号数的乘法器，被用于定点数的乘法。你可以自己配置这个乘法器，然后更改&amp;quot;mul_delay&amp;quot;，但所有的乘法器必须拥有相同的流水线级数，并且不能更改端口的配置！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FRSX1&lt;/td&gt;
&lt;td&gt;FixedRoundSigned&lt;/td&gt;
&lt;td&gt;用于有符号浮点数的舍入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FRSX2&lt;/td&gt;
&lt;td&gt;FixedRoundSigned&lt;/td&gt;
&lt;td&gt;用于有符号浮点数的舍入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FRSY1&lt;/td&gt;
&lt;td&gt;FixedRoundSigned&lt;/td&gt;
&lt;td&gt;用于有符号浮点数的舍入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FRSY2&lt;/td&gt;
&lt;td&gt;FixedRoundSigned&lt;/td&gt;
&lt;td&gt;用于有符号浮点数的舍入。&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-3-3 子模块
&lt;/center&gt;&lt;/p&gt;
&lt;h3&gt;3.21.3 实现&lt;/h3&gt;
&lt;p&gt;根据3.21.2的设计便可以实现一个RTT核，流水线模式和请求响应模式实现如下。&lt;/p&gt;
&lt;h4&gt;3.21.3.1 流水线模式&lt;/h4&gt;
&lt;p&gt;在帧控制器的输出使能后1个周期第一个结果被输出，开始流水化工作，波形如图3-21-1。
&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-1 流水线模式时序&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/1.png&amp;quot; /&gt;
图3-21-1 流水线模式时序
&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;3.21.3.2 请求响应模式读取&lt;/h4&gt;
&lt;p&gt;基本同3.21.3.1，但只有在in_enable上升沿时计数器才会加1才会被改变，波形如图3-21-2。
&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-1 流水线模式时序&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/2.png&amp;quot; /&gt;
图3-21-1 流水线模式时序
&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;3.21.3.3 IP核GUI&lt;/h4&gt;
&lt;p&gt;完成功能后对RTT核进行了封装，封装如图3-21-3。
&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-3 RTT核的GUI&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/3.png&amp;quot; /&gt;
图3-21-3 RTT核的GUI
&lt;/center&gt;&lt;/p&gt;
&lt;h3&gt;3.21.4 仿真&lt;/h3&gt;
&lt;p&gt;只对RGB图像和灰度图像进行测试，考虑到仿真设计模块比较多，出于仿真压力，我选择了一张图像的灰度模式进行三套参数的测试，原始图像如图3-21-4。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-4 仿真原始图像&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/4.jpg&amp;quot; /&gt;
图3-21-4 仿真原始图像
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;仿真参数如表3-16-4所示，选择原则是可以被二进制表示和不可以被表示的值都包含。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;angle&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;131&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;270&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-16-4 仿真参数
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;仿真并进行PSNR测试，仿真结果如图3-21-5所示。
&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-5 仿真结果&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/5.png&amp;quot; /&gt;
图3-21-5 仿真结果，左侧为流水线模式下的HDL功能仿真结果，中间为请求响应模式下的HDL功能仿真结果，右侧为软件仿真结果
&lt;/center&gt;&lt;/p&gt;
&lt;h3&gt;3.21.5 资源和时序&lt;/h3&gt;
&lt;p&gt;最终实现与图像大小和数据位宽有关，这里只分析大小为512x512和数据位宽为8时的状况，根据Vivado生成的报表，主要资源耗费如表3-21-5。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;Slice LUTs*&lt;/th&gt;
&lt;th&gt;Slice Registers&lt;/th&gt;
&lt;th&gt;DSP&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;543&lt;/td&gt;
&lt;td&gt;245&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-21-5 主要资源耗费
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;同时根据时序报告，最大的Data Path Delay(数据路径延迟)为4.414ns，即：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FMax = 226.55MHz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即说明，Rotate核在流水线模式下，理论上在处理1080p全高清图像时可以达到109帧。
与3.20相同，此FMax低于期望值，也来自于舍入核的加法，考虑时间此处暂时不做优化。
由于数据路径延迟和应用的最终约束设置强相关，所以仅供参考。&lt;/p&gt;
&lt;h3&gt;3.21.6 分析与结论&lt;/h3&gt;
&lt;p&gt;PSNR如表3-21-6。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;1-131&lt;/th&gt;
&lt;th&gt;1-270&lt;/th&gt;
&lt;th&gt;1-45&lt;/th&gt;
&lt;th&gt;Total&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1000000.00&lt;/td&gt;
&lt;td&gt;54.89&lt;/td&gt;
&lt;td&gt;1000000.00&lt;/td&gt;
&lt;td&gt;666684.96&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-21-6 PSNR
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;PSNR对于某些参数为最大值，对于一些不是，最终误差来自于符号乘法和查找表自身的误差，但PSNR均为50以上，可见在测试范围内，RTT核可以满足处理需求，设计成功。&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;参考文献&lt;/h1&gt;
&lt;p&gt;[26] 陈芳.一种基于错切原理的图像旋转方法[J].淮阴师范学院学报（自然科学版）,2004,3(4):319-322.DOI:10.3969/j.issn.1671-6876.2004.04.016.
[27] 王金辉.实时图像旋转系统的研究与FPGA实现[D].华中科技大学,2012.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;感谢&lt;/h1&gt;
&lt;p&gt;仿真图像来源：
&lt;a href=&amp;quot;http://www.pixiv.net/member_illust.php?mode=medium&amp;amp;illust_id=49603329&amp;quot;&gt;041-マツムシソウ&lt;/a&gt;&lt;/p&gt;
&lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;http://src.dtysky.moe/MathJax/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&gt;&lt;/script&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Saturday, 30 May 2015 00:30:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2015.05.30 00:30:article/Art-test</guid>
<category>FPGA</category>
<category>FPGA-Imaging-Library</category>
<category>图像处理</category>
<category>几何变换</category>
<category>旋转</category>
</item>

<item>
<title>【FPGA/图像处理】几何变换-旋转</title>
<link>http://dtysky.moe/article/Create-test</link>
<description>&lt;p&gt;旋转同样是仿射变换的一种特例，它接受一个角度，将图像绕着某个中心进行转动，适合逆向映射。旋转的实现有多种，比如两次错切的旋转&lt;sup&gt;[26]&lt;/sup&gt;、直接坐标变换&lt;sup&gt;[27]&lt;/sup&gt;等，中心点的选取方式也有许多，但对于FPGA采用图像的几何中心较为合适。。本节将会说明如何用FPGA实现旋转的模块。
这个IP核的资源在这里：
&lt;a href=&amp;quot;https://github.com/dtysky/FPGA-Imaging-Library/tree/Publish/Geometry/Rotate&amp;quot;&gt;Rotate&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;3 算法实现&lt;/h1&gt;
&lt;p&gt;明确了设计和架构，便可以进行算法的实现。本章将会说明如何实现图像处理的算法，以及如何运用它们。&lt;/p&gt;
&lt;h2&gt;3.21 几何变换-旋转&lt;/h2&gt;
&lt;p&gt;旋转同样是仿射变换的一种特例，它接受一个角度，将图像绕着某个中心进行转动，适合逆向映射。旋转的实现有多种，比如两次错切的旋转&lt;sup&gt;[26]&lt;/sup&gt;、直接坐标变换&lt;sup&gt;[27]&lt;/sup&gt;等，中心点的选取方式也有许多，但对于FPGA采用图像的几何中心较为合适。。本节将会说明如何用FPGA实现旋转的模块。&lt;/p&gt;
&lt;h3&gt;3.21.1 原理&lt;/h3&gt;
&lt;p&gt;此设计中旋转的前向映射基本原理如式3-21-1，其中angle为旋转角度,$x_c$和$y_c$分别为图像中心横纵坐标。对于逆向映射应该对此式进行调整，变换为3-21-2的形式，可见旋转操作比较复杂，不仅涉及多次符号乘法、符号加法，还涉及到三角函数的计算。&lt;/p&gt;
&lt;p&gt;$$\begin{cases}Q[x_t,y_t] = I[x,y]  \\x_t = xc + (x - xc) * cos(a) - (y - yc)*sin(a)\\ y_t = yc + (x - xc) * sin(a) + (y - yc)*cos(a)\\x \in[0, w) ,y \in[0, h)\ \end{cases}.\ \ \ \ \ \ \ \ (3-21-1)$$&lt;/p&gt;

&lt;p&gt;$$\begin{cases}I[x,y] = Q[x_t,y_t]  \\x = (x_t - xc) * cos(a) + (y_t - yc) * sin(a) + xc\\ y = (-x_t + xc) * sin(a) + (y_t - yc) * cos(a) + yc\\x_t \in[0, w) ,y_t \in[0, h)\ \end{cases}.\ \ \ \ \ \ \ \ (3-21-2)$$&lt;/p&gt;

&lt;p&gt;首先要考虑三角函数的计算，如3.1中所述，FPGA中的特殊函数计算需要用查找表来实现，所以需要编写一个脚本来生成查找表，同时由于三角函数的值可能为负数，并且verilog中符号系统是补码系统，所以需要生成的是角度和此角度下三角函数值的补码。由于正弦和余弦的值域为[-1, 1]，同时一般用于变换的角度为[0,359]，所以综合考虑，最终选择将角度划分为360个点，使用1位符号位、1位整数位和18位的小数位的数据来表示函数值，这其中的难点在于如何将一个浮点数转换为20位的定点数补码，实现函数如下。&lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class=&amp;quot;k&amp;quot;&gt;def&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;format&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;num&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;):&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;format&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;num&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;split&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;len&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;float&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0.&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;xrange&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;18&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;):&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;eval&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;bin&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;**&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;19&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;eval&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0b&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;))[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:]&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;xrange&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;19&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;len&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)):&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;10000000000000000000&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;00000000000000000000&amp;#39;&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;旋转变换同样需要符号舍入，但整数位只有1位，所以没有溢出风险，可以将其简化，仅仅裁剪输出即可。&lt;/p&gt;
&lt;h3&gt;3.21.2 设计&lt;/h3&gt;
&lt;p&gt;根据原理可知，Rotate核(以下简称RTT核)需要四次符号乘法、四次符号舍入操作和四次符号加法，并且需要和基于行列计数的帧控制器进行合作。故其需要的配置参数与端口如表3-21-1和表3-21-2。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;名字&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;范围&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;td&gt;work_mode&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;0为流水线模式，1为请求响应模式&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;模块的工作模式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;tr&gt;
&lt;td&gt;data_width&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;1 - 12&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;数据位宽。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;im_width&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;1 - 4096&lt;/td&gt;
&lt;td&gt;320&lt;/td&gt;
&lt;td&gt;图像宽度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;im_height&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;1 - 4096&lt;/td&gt;
&lt;td&gt;240&lt;/td&gt;
&lt;td&gt;图像高度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;im_width_bits&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;取决于图像宽度&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;图像宽度的位宽。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mul_delay&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;取决于乘法器配置，1-14&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;乘法器延迟。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ram_RL&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;取决于帧控制器&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;帧控制器输出延迟。&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-21-1 配置参数
&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;名字&lt;/th&gt;
&lt;th&gt;端口&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;范围&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;td&gt;clk&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;Clock.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rst_n&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;复位，低有效。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;angle&lt;/td&gt;
&lt;td&gt;input&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;0 - 359&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;旋转角度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;in_enable&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;输入数据使能，在流水线模式下，它是另一个复位信号，在请求响应模式下，只有在它有效的时候in_data才会被真正地改变。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frame_in_ready&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的out_ready。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frame_in_data&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;data_width - 1 : 0&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的out_data。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frame_enable&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的in_enable。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frame_out_count_x&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;im_width_bits - 1 : 0&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的in_count_x。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;out_count_y&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;im_width_bits - 1 : 0&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的in_count_y。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;out_ready&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;输出数据有效，在两种模式下，这个信号都会在out_data可以被读取的时候有效。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;out_data&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;color_width - 1 : 0&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;输出数据，将会和out_ready同步输出。&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-21-2 端口
&lt;/center&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;名字&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sin&lt;/td&gt;
&lt;td&gt;SinLUT&lt;/td&gt;
&lt;td&gt;获取角度的正弦。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cos&lt;/td&gt;
&lt;td&gt;CosLUT&lt;/td&gt;
&lt;td&gt;获取角度的余弦。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MulX1&lt;/td&gt;
&lt;td&gt;Multiplier13Sx20SRTT&lt;/td&gt;
&lt;td&gt;13位有符号数和20位有符号数的乘法器，被用于定点数的乘法。你可以自己配置这个乘法器，然后更改&amp;quot;mul_delay&amp;quot;，但所有的乘法器必须拥有相同的流水线级数，并且不能更改端口的配置！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MulX2&lt;/td&gt;
&lt;td&gt;Multiplier13Sx20SRTT&lt;/td&gt;
&lt;td&gt;13位有符号数和20位有符号数的乘法器，被用于定点数的乘法。你可以自己配置这个乘法器，然后更改&amp;quot;mul_delay&amp;quot;，但所有的乘法器必须拥有相同的流水线级数，并且不能更改端口的配置！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MulY1&lt;/td&gt;
&lt;td&gt;Multiplier13Sx20SRTT&lt;/td&gt;
&lt;td&gt;13位有符号数和20位有符号数的乘法器，被用于定点数的乘法。你可以自己配置这个乘法器，然后更改&amp;quot;mul_delay&amp;quot;，但所有的乘法器必须拥有相同的流水线级数，并且不能更改端口的配置！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MulY2&lt;/td&gt;
&lt;td&gt;Multiplier13Sx20SRTT&lt;/td&gt;
&lt;td&gt;13位有符号数和20位有符号数的乘法器，被用于定点数的乘法。你可以自己配置这个乘法器，然后更改&amp;quot;mul_delay&amp;quot;，但所有的乘法器必须拥有相同的流水线级数，并且不能更改端口的配置！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FRSX1&lt;/td&gt;
&lt;td&gt;FixedRoundSigned&lt;/td&gt;
&lt;td&gt;用于有符号浮点数的舍入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FRSX2&lt;/td&gt;
&lt;td&gt;FixedRoundSigned&lt;/td&gt;
&lt;td&gt;用于有符号浮点数的舍入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FRSY1&lt;/td&gt;
&lt;td&gt;FixedRoundSigned&lt;/td&gt;
&lt;td&gt;用于有符号浮点数的舍入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FRSY2&lt;/td&gt;
&lt;td&gt;FixedRoundSigned&lt;/td&gt;
&lt;td&gt;用于有符号浮点数的舍入。&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-3-3 子模块
&lt;/center&gt;&lt;/p&gt;
&lt;h3&gt;3.21.3 实现&lt;/h3&gt;
&lt;p&gt;根据3.21.2的设计便可以实现一个RTT核，流水线模式和请求响应模式实现如下。&lt;/p&gt;
&lt;h4&gt;3.21.3.1 流水线模式&lt;/h4&gt;
&lt;p&gt;在帧控制器的输出使能后1个周期第一个结果被输出，开始流水化工作，波形如图3-21-1。
&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-1 流水线模式时序&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/1.png&amp;quot; /&gt;
图3-21-1 流水线模式时序
&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;3.21.3.2 请求响应模式读取&lt;/h4&gt;
&lt;p&gt;基本同3.21.3.1，但只有在in_enable上升沿时计数器才会加1才会被改变，波形如图3-21-2。
&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-1 流水线模式时序&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/2.png&amp;quot; /&gt;
图3-21-1 流水线模式时序
&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;3.21.3.3 IP核GUI&lt;/h4&gt;
&lt;p&gt;完成功能后对RTT核进行了封装，封装如图3-21-3。
&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-3 RTT核的GUI&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/3.png&amp;quot; /&gt;
图3-21-3 RTT核的GUI
&lt;/center&gt;&lt;/p&gt;
&lt;h3&gt;3.21.4 仿真&lt;/h3&gt;
&lt;p&gt;只对RGB图像和灰度图像进行测试，考虑到仿真设计模块比较多，出于仿真压力，我选择了一张图像的灰度模式进行三套参数的测试，原始图像如图3-21-4。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-4 仿真原始图像&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/4.jpg&amp;quot; /&gt;
图3-21-4 仿真原始图像
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;仿真参数如表3-16-4所示，选择原则是可以被二进制表示和不可以被表示的值都包含。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;angle&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;131&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;270&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-16-4 仿真参数
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;仿真并进行PSNR测试，仿真结果如图3-21-5所示。
&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-5 仿真结果&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/5.png&amp;quot; /&gt;
图3-21-5 仿真结果，左侧为流水线模式下的HDL功能仿真结果，中间为请求响应模式下的HDL功能仿真结果，右侧为软件仿真结果
&lt;/center&gt;&lt;/p&gt;
&lt;h3&gt;3.21.5 资源和时序&lt;/h3&gt;
&lt;p&gt;最终实现与图像大小和数据位宽有关，这里只分析大小为512x512和数据位宽为8时的状况，根据Vivado生成的报表，主要资源耗费如表3-21-5。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;Slice LUTs*&lt;/th&gt;
&lt;th&gt;Slice Registers&lt;/th&gt;
&lt;th&gt;DSP&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;543&lt;/td&gt;
&lt;td&gt;245&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-21-5 主要资源耗费
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;同时根据时序报告，最大的Data Path Delay(数据路径延迟)为4.414ns，即：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FMax = 226.55MHz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即说明，Rotate核在流水线模式下，理论上在处理1080p全高清图像时可以达到109帧。
与3.20相同，此FMax低于期望值，也来自于舍入核的加法，考虑时间此处暂时不做优化。
由于数据路径延迟和应用的最终约束设置强相关，所以仅供参考。&lt;/p&gt;
&lt;h3&gt;3.21.6 分析与结论&lt;/h3&gt;
&lt;p&gt;PSNR如表3-21-6。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;1-131&lt;/th&gt;
&lt;th&gt;1-270&lt;/th&gt;
&lt;th&gt;1-45&lt;/th&gt;
&lt;th&gt;Total&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1000000.00&lt;/td&gt;
&lt;td&gt;54.89&lt;/td&gt;
&lt;td&gt;1000000.00&lt;/td&gt;
&lt;td&gt;666684.96&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-21-6 PSNR
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;PSNR对于某些参数为最大值，对于一些不是，最终误差来自于符号乘法和查找表自身的误差，但PSNR均为50以上，可见在测试范围内，RTT核可以满足处理需求，设计成功。&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;参考文献&lt;/h1&gt;
&lt;p&gt;[26] 陈芳.一种基于错切原理的图像旋转方法[J].淮阴师范学院学报（自然科学版）,2004,3(4):319-322.DOI:10.3969/j.issn.1671-6876.2004.04.016.
[27] 王金辉.实时图像旋转系统的研究与FPGA实现[D].华中科技大学,2012.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;感谢&lt;/h1&gt;
&lt;p&gt;仿真图像来源：
&lt;a href=&amp;quot;http://www.pixiv.net/member_illust.php?mode=medium&amp;amp;illust_id=49603329&amp;quot;&gt;041-マツムシソウ&lt;/a&gt;&lt;/p&gt;
&lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;http://src.dtysky.moe/MathJax/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&gt;&lt;/script&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Saturday, 30 May 2015 00:30:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2015.05.30 00:30:article/Create-test</guid>
<category>FPGA</category>
<category>FPGA-Imaging-Library</category>
<category>图像处理</category>
<category>几何变换</category>
<category>旋转</category>
</item>

<item>
<title>【FPGA/图像处理】几何变换-旋转</title>
<link>http://dtysky.moe/article/Life-test</link>
<description>&lt;p&gt;旋转同样是仿射变换的一种特例，它接受一个角度，将图像绕着某个中心进行转动，适合逆向映射。旋转的实现有多种，比如两次错切的旋转&lt;sup&gt;[26]&lt;/sup&gt;、直接坐标变换&lt;sup&gt;[27]&lt;/sup&gt;等，中心点的选取方式也有许多，但对于FPGA采用图像的几何中心较为合适。。本节将会说明如何用FPGA实现旋转的模块。
这个IP核的资源在这里：
&lt;a href=&amp;quot;https://github.com/dtysky/FPGA-Imaging-Library/tree/Publish/Geometry/Rotate&amp;quot;&gt;Rotate&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;3 算法实现&lt;/h1&gt;
&lt;p&gt;明确了设计和架构，便可以进行算法的实现。本章将会说明如何实现图像处理的算法，以及如何运用它们。&lt;/p&gt;
&lt;h2&gt;3.21 几何变换-旋转&lt;/h2&gt;
&lt;p&gt;旋转同样是仿射变换的一种特例，它接受一个角度，将图像绕着某个中心进行转动，适合逆向映射。旋转的实现有多种，比如两次错切的旋转&lt;sup&gt;[26]&lt;/sup&gt;、直接坐标变换&lt;sup&gt;[27]&lt;/sup&gt;等，中心点的选取方式也有许多，但对于FPGA采用图像的几何中心较为合适。。本节将会说明如何用FPGA实现旋转的模块。&lt;/p&gt;
&lt;h3&gt;3.21.1 原理&lt;/h3&gt;
&lt;p&gt;此设计中旋转的前向映射基本原理如式3-21-1，其中angle为旋转角度,$x_c$和$y_c$分别为图像中心横纵坐标。对于逆向映射应该对此式进行调整，变换为3-21-2的形式，可见旋转操作比较复杂，不仅涉及多次符号乘法、符号加法，还涉及到三角函数的计算。&lt;/p&gt;
&lt;p&gt;$$\begin{cases}Q[x_t,y_t] = I[x,y]  \\x_t = xc + (x - xc) * cos(a) - (y - yc)*sin(a)\\ y_t = yc + (x - xc) * sin(a) + (y - yc)*cos(a)\\x \in[0, w) ,y \in[0, h)\ \end{cases}.\ \ \ \ \ \ \ \ (3-21-1)$$&lt;/p&gt;

&lt;p&gt;$$\begin{cases}I[x,y] = Q[x_t,y_t]  \\x = (x_t - xc) * cos(a) + (y_t - yc) * sin(a) + xc\\ y = (-x_t + xc) * sin(a) + (y_t - yc) * cos(a) + yc\\x_t \in[0, w) ,y_t \in[0, h)\ \end{cases}.\ \ \ \ \ \ \ \ (3-21-2)$$&lt;/p&gt;

&lt;p&gt;首先要考虑三角函数的计算，如3.1中所述，FPGA中的特殊函数计算需要用查找表来实现，所以需要编写一个脚本来生成查找表，同时由于三角函数的值可能为负数，并且verilog中符号系统是补码系统，所以需要生成的是角度和此角度下三角函数值的补码。由于正弦和余弦的值域为[-1, 1]，同时一般用于变换的角度为[0,359]，所以综合考虑，最终选择将角度划分为360个点，使用1位符号位、1位整数位和18位的小数位的数据来表示函数值，这其中的难点在于如何将一个浮点数转换为20位的定点数补码，实现函数如下。&lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class=&amp;quot;k&amp;quot;&gt;def&lt;/span&gt; &lt;span class=&amp;quot;nf&amp;quot;&gt;format&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;num&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;):&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;format&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;num&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;,&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;.&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;split&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;len&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;float&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0.&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;xrange&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;18&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;):&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;*&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt; &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;d&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;eval&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;else&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;bin&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;**&lt;/span&gt; &lt;span class=&amp;quot;mi&amp;quot;&gt;19&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;eval&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0b&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;))[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;2&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:]&lt;/span&gt;
        &lt;span class=&amp;quot;k&amp;quot;&gt;for&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;i&lt;/span&gt; &lt;span class=&amp;quot;ow&amp;quot;&gt;in&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;xrange&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;19&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;-&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;len&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;(&lt;/span&gt;&lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;)):&lt;/span&gt;
            &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;
    &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;r&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;[&lt;/span&gt;&lt;span class=&amp;quot;mi&amp;quot;&gt;0&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;]&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;+&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;if&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;==&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;10000000000000000000&amp;#39;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;:&lt;/span&gt;
        &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt; &lt;span class=&amp;quot;s1&amp;quot;&gt;&amp;#39;00000000000000000000&amp;#39;&lt;/span&gt;
    &lt;span class=&amp;quot;k&amp;quot;&gt;return&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;res&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;旋转变换同样需要符号舍入，但整数位只有1位，所以没有溢出风险，可以将其简化，仅仅裁剪输出即可。&lt;/p&gt;
&lt;h3&gt;3.21.2 设计&lt;/h3&gt;
&lt;p&gt;根据原理可知，Rotate核(以下简称RTT核)需要四次符号乘法、四次符号舍入操作和四次符号加法，并且需要和基于行列计数的帧控制器进行合作。故其需要的配置参数与端口如表3-21-1和表3-21-2。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;名字&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;范围&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;td&gt;work_mode&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;0为流水线模式，1为请求响应模式&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;模块的工作模式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;tr&gt;
&lt;td&gt;data_width&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;1 - 12&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;数据位宽。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;im_width&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;1 - 4096&lt;/td&gt;
&lt;td&gt;320&lt;/td&gt;
&lt;td&gt;图像宽度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;im_height&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;1 - 4096&lt;/td&gt;
&lt;td&gt;240&lt;/td&gt;
&lt;td&gt;图像高度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;im_width_bits&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;取决于图像宽度&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;图像宽度的位宽。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mul_delay&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;取决于乘法器配置，1-14&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;乘法器延迟。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ram_RL&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;取决于帧控制器&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;帧控制器输出延迟。&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-21-1 配置参数
&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;名字&lt;/th&gt;
&lt;th&gt;端口&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;范围&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;td&gt;clk&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;Clock.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rst_n&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;复位，低有效。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;angle&lt;/td&gt;
&lt;td&gt;input&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;0 - 359&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;旋转角度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;in_enable&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;输入数据使能，在流水线模式下，它是另一个复位信号，在请求响应模式下，只有在它有效的时候in_data才会被真正地改变。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frame_in_ready&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的out_ready。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frame_in_data&lt;/td&gt;
&lt;td&gt;输入&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;data_width - 1 : 0&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的out_data。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frame_enable&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的in_enable。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frame_out_count_x&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;im_width_bits - 1 : 0&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的in_count_x。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;out_count_y&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;im_width_bits - 1 : 0&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;连接到帧控制器的in_count_y。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;out_ready&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;输出数据有效，在两种模式下，这个信号都会在out_data可以被读取的时候有效。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;out_data&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;无符号&lt;/td&gt;
&lt;td&gt;color_width - 1 : 0&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;输出数据，将会和out_ready同步输出。&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-21-2 端口
&lt;/center&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;名字&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sin&lt;/td&gt;
&lt;td&gt;SinLUT&lt;/td&gt;
&lt;td&gt;获取角度的正弦。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cos&lt;/td&gt;
&lt;td&gt;CosLUT&lt;/td&gt;
&lt;td&gt;获取角度的余弦。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MulX1&lt;/td&gt;
&lt;td&gt;Multiplier13Sx20SRTT&lt;/td&gt;
&lt;td&gt;13位有符号数和20位有符号数的乘法器，被用于定点数的乘法。你可以自己配置这个乘法器，然后更改&amp;quot;mul_delay&amp;quot;，但所有的乘法器必须拥有相同的流水线级数，并且不能更改端口的配置！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MulX2&lt;/td&gt;
&lt;td&gt;Multiplier13Sx20SRTT&lt;/td&gt;
&lt;td&gt;13位有符号数和20位有符号数的乘法器，被用于定点数的乘法。你可以自己配置这个乘法器，然后更改&amp;quot;mul_delay&amp;quot;，但所有的乘法器必须拥有相同的流水线级数，并且不能更改端口的配置！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MulY1&lt;/td&gt;
&lt;td&gt;Multiplier13Sx20SRTT&lt;/td&gt;
&lt;td&gt;13位有符号数和20位有符号数的乘法器，被用于定点数的乘法。你可以自己配置这个乘法器，然后更改&amp;quot;mul_delay&amp;quot;，但所有的乘法器必须拥有相同的流水线级数，并且不能更改端口的配置！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MulY2&lt;/td&gt;
&lt;td&gt;Multiplier13Sx20SRTT&lt;/td&gt;
&lt;td&gt;13位有符号数和20位有符号数的乘法器，被用于定点数的乘法。你可以自己配置这个乘法器，然后更改&amp;quot;mul_delay&amp;quot;，但所有的乘法器必须拥有相同的流水线级数，并且不能更改端口的配置！&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FRSX1&lt;/td&gt;
&lt;td&gt;FixedRoundSigned&lt;/td&gt;
&lt;td&gt;用于有符号浮点数的舍入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FRSX2&lt;/td&gt;
&lt;td&gt;FixedRoundSigned&lt;/td&gt;
&lt;td&gt;用于有符号浮点数的舍入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FRSY1&lt;/td&gt;
&lt;td&gt;FixedRoundSigned&lt;/td&gt;
&lt;td&gt;用于有符号浮点数的舍入。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FRSY2&lt;/td&gt;
&lt;td&gt;FixedRoundSigned&lt;/td&gt;
&lt;td&gt;用于有符号浮点数的舍入。&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-3-3 子模块
&lt;/center&gt;&lt;/p&gt;
&lt;h3&gt;3.21.3 实现&lt;/h3&gt;
&lt;p&gt;根据3.21.2的设计便可以实现一个RTT核，流水线模式和请求响应模式实现如下。&lt;/p&gt;
&lt;h4&gt;3.21.3.1 流水线模式&lt;/h4&gt;
&lt;p&gt;在帧控制器的输出使能后1个周期第一个结果被输出，开始流水化工作，波形如图3-21-1。
&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-1 流水线模式时序&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/1.png&amp;quot; /&gt;
图3-21-1 流水线模式时序
&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;3.21.3.2 请求响应模式读取&lt;/h4&gt;
&lt;p&gt;基本同3.21.3.1，但只有在in_enable上升沿时计数器才会加1才会被改变，波形如图3-21-2。
&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-1 流水线模式时序&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/2.png&amp;quot; /&gt;
图3-21-1 流水线模式时序
&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;3.21.3.3 IP核GUI&lt;/h4&gt;
&lt;p&gt;完成功能后对RTT核进行了封装，封装如图3-21-3。
&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-3 RTT核的GUI&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/3.png&amp;quot; /&gt;
图3-21-3 RTT核的GUI
&lt;/center&gt;&lt;/p&gt;
&lt;h3&gt;3.21.4 仿真&lt;/h3&gt;
&lt;p&gt;只对RGB图像和灰度图像进行测试，考虑到仿真设计模块比较多，出于仿真压力，我选择了一张图像的灰度模式进行三套参数的测试，原始图像如图3-21-4。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-4 仿真原始图像&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/4.jpg&amp;quot; /&gt;
图3-21-4 仿真原始图像
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;仿真参数如表3-16-4所示，选择原则是可以被二进制表示和不可以被表示的值都包含。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;angle&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;131&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;270&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-16-4 仿真参数
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;仿真并进行PSNR测试，仿真结果如图3-21-5所示。
&lt;center&gt;
&lt;img alt=&amp;quot;图3-21-5 仿真结果&amp;quot; src=&amp;quot;http://src.dtysky.moe/image/f-i-l/3/21/5.png&amp;quot; /&gt;
图3-21-5 仿真结果，左侧为流水线模式下的HDL功能仿真结果，中间为请求响应模式下的HDL功能仿真结果，右侧为软件仿真结果
&lt;/center&gt;&lt;/p&gt;
&lt;h3&gt;3.21.5 资源和时序&lt;/h3&gt;
&lt;p&gt;最终实现与图像大小和数据位宽有关，这里只分析大小为512x512和数据位宽为8时的状况，根据Vivado生成的报表，主要资源耗费如表3-21-5。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;Slice LUTs*&lt;/th&gt;
&lt;th&gt;Slice Registers&lt;/th&gt;
&lt;th&gt;DSP&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;543&lt;/td&gt;
&lt;td&gt;245&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-21-5 主要资源耗费
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;同时根据时序报告，最大的Data Path Delay(数据路径延迟)为4.414ns，即：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FMax = 226.55MHz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即说明，Rotate核在流水线模式下，理论上在处理1080p全高清图像时可以达到109帧。
与3.20相同，此FMax低于期望值，也来自于舍入核的加法，考虑时间此处暂时不做优化。
由于数据路径延迟和应用的最终约束设置强相关，所以仅供参考。&lt;/p&gt;
&lt;h3&gt;3.21.6 分析与结论&lt;/h3&gt;
&lt;p&gt;PSNR如表3-21-6。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;table border=&amp;quot;1&amp;quot; cellspacing=&amp;quot;0&amp;quot;&gt;
&lt;tr&gt;
&lt;th&gt;1-131&lt;/th&gt;
&lt;th&gt;1-270&lt;/th&gt;
&lt;th&gt;1-45&lt;/th&gt;
&lt;th&gt;Total&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1000000.00&lt;/td&gt;
&lt;td&gt;54.89&lt;/td&gt;
&lt;td&gt;1000000.00&lt;/td&gt;
&lt;td&gt;666684.96&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
表3-21-6 PSNR
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;PSNR对于某些参数为最大值，对于一些不是，最终误差来自于符号乘法和查找表自身的误差，但PSNR均为50以上，可见在测试范围内，RTT核可以满足处理需求，设计成功。&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;参考文献&lt;/h1&gt;
&lt;p&gt;[26] 陈芳.一种基于错切原理的图像旋转方法[J].淮阴师范学院学报（自然科学版）,2004,3(4):319-322.DOI:10.3969/j.issn.1671-6876.2004.04.016.
[27] 王金辉.实时图像旋转系统的研究与FPGA实现[D].华中科技大学,2012.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;感谢&lt;/h1&gt;
&lt;p&gt;仿真图像来源：
&lt;a href=&amp;quot;http://www.pixiv.net/member_illust.php?mode=medium&amp;amp;illust_id=49603329&amp;quot;&gt;041-マツムシソウ&lt;/a&gt;&lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Saturday, 30 May 2015 00:30:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2015.05.30 00:30:article/Life-test</guid>
<category>FPGA</category>
<category>FPGA-Imaging-Library</category>
<category>图像处理</category>
<category>几何变换</category>
<category>旋转</category>
</item>

<item>
<title>【impress.js】告别PPT从我做起</title>
<link>http://dtysky.moe/article/Skill-2015_05_05_a</link>
<description>&lt;p&gt;impress.js是一个牛逼的js库，它为我们开创了演示界面的新纪元，相比其他同样牛逼的类似的js库，它做到了真正的简单易用却效果强大，其提供的接口十分简洁易懂，同时却不失复杂的变化性，结合CSS能够达到你想达到的几乎任何效果，当然有些太复杂的做起来还不如直接用PPT但是，很多时候那些复杂的东西有必要吗？看需求吧www反正我觉得没有必要。  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;1.获取和示例&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;在这里直接获取源代码，一个js文件，下下来即可&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&amp;quot;https://github.com/bartaz/impress.js&amp;quot;&gt;impress.js&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;官方示例&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&amp;quot;http://bartaz.github.io/impress.js&amp;quot;&gt;Demo by bartaz&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我的示例&lt;/strong&gt;&lt;br /&gt;
这个是纯粹为支持impress.js的终端做的，不支持的情况下采用抛出信息的处理方式。&lt;br /&gt;
&lt;a href=&amp;quot;http://proj.dtysky.moe/&amp;quot;&gt;Publihed Projects&lt;/a&gt;&lt;br /&gt;
这个为不支持的终端做了一下处理，其实也就是不同的CSS。&lt;br /&gt;
&lt;a href=&amp;quot;http://fil.dtysky.moe/&amp;quot;&gt;FPGA-Imaging-Library&lt;/a&gt;  &lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;2.使用&lt;/h2&gt;
&lt;p&gt;首先需要有一定的Html和CSS基础，这个很简单，自行了解即可，因为严格意义上这两个不算编程（基本不涉及逻辑），并且同时，impress.js的使用基本也不涉及逻辑。  &lt;/p&gt;
&lt;h3&gt;1.链接&lt;/h3&gt;
&lt;p&gt;这一点首先单独列出来是为了澄清一些东西，一般情况下，我们会在&lt;strong&gt;head&lt;/strong&gt;块内加入一些metadata，并链接js和CSS文件，但对于impress.js不能这么做，所以不要在header块内引用它，具体在哪里会在下面说明。  &lt;/p&gt;
&lt;h3&gt;2.作用域&lt;/h3&gt;
&lt;p&gt;作用域，也就是impress.js发生作用的区块，根据它的设计，你需要建立一个id为&lt;strong&gt;impress&lt;/strong&gt;的div，并将你需要作为impress.js演示对象的内容放到其中：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;id&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;impress&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在这个div中，一般而言我们需要加入一个class为&lt;strong&gt;no-support-message&lt;/strong&gt;的div，这个div中的内容会在终端不支持impress.js的时候显示出来，比如：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;no-support-message&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    Your browser doesn&amp;#39;t support impress.js.It can&amp;#39;t phones.&lt;span class=&amp;quot;nt&amp;quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    你的浏览器不支持impress.js.请更换，它不支持手机。
&lt;span class=&amp;quot;nt&amp;quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当然位置和样式是由你自己决定的，比如在我的第一个实例中我这样定义：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;nc&amp;quot;&gt;.no-support-message&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt; 
&lt;span class=&amp;quot;nb&amp;quot;&gt;display&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;nb&amp;quot;&gt;none&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt; 
&lt;span class=&amp;quot;nb&amp;quot;&gt;width&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;m&amp;quot;&gt;940px&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt; 
&lt;span class=&amp;quot;nb&amp;quot;&gt;margin&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;m&amp;quot;&gt;0&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;auto&lt;/span&gt; &lt;span class=&amp;quot;m&amp;quot;&gt;24px&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;auto&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt; 
&lt;span class=&amp;quot;nb&amp;quot;&gt;text-align&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;nb&amp;quot;&gt;center&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;效果就是当不支持的时候，这段内容就会显示在页面开头的中间部分。&lt;br /&gt;
对于第二个示例，由于我采用的是其他解决方案，所以没有这段内容。  &lt;/p&gt;
&lt;h3&gt;3.设计&lt;/h3&gt;
&lt;p&gt;确定作用域后便可以开始设计，在上面的作用域中加入若干你需要演示的div，每个div都是一个演示页面，它们必须都拥有&lt;strong&gt;step&lt;/strong&gt;这个class，没有这个class的div会当做一般元素处理，也就是不受impress控制。&lt;br /&gt;
第一个例子的首页：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;id&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;first-page&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;step&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-x&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-y&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;id&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;first-title&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;Published Projects&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;p&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;id&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;first-desc&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;My published projects are here.&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;p&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;p&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;id&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;first-link&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;a&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;href&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;http://dtysky.moe&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;target&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;a&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&amp;quot;ni&amp;quot;&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;a&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;href&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;https://github.com/dtysky&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;target&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;Github&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;a&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&amp;quot;ni&amp;quot;&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;dtysky@outlook.com&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;p&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;p&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;id&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;page-top&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;Click a page you want to view, you can also press &amp;quot;←&amp;quot;, &amp;quot;→&amp;quot; or whitespace.
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;br&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;点击你想进入的页面或者按下 &amp;quot;←&amp;quot;、&amp;quot;→&amp;quot;或空格键.&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;p&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;为了显示这些演示页面，必须要为step定义样式，第一个示例中定义的样式如下：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;nc&amp;quot;&gt;.no-support-message&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt; 
&lt;span class=&amp;quot;nb&amp;quot;&gt;display&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;nb&amp;quot;&gt;none&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt; 
&lt;span class=&amp;quot;nb&amp;quot;&gt;width&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;m&amp;quot;&gt;940px&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt; 
&lt;span class=&amp;quot;nb&amp;quot;&gt;margin&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;m&amp;quot;&gt;0&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;auto&lt;/span&gt; &lt;span class=&amp;quot;m&amp;quot;&gt;24px&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;auto&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt; 
&lt;span class=&amp;quot;nb&amp;quot;&gt;text-align&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;nb&amp;quot;&gt;center&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;每一个页面宽度为940px，位置是浏览器页面正中，所有文字居中。&lt;br /&gt;
你应该注意到了，和一般的属性不同，这个首页的div中拥有&lt;strong&gt;data-x&lt;/strong&gt;和&lt;strong&gt;data-y&lt;/strong&gt;两个属性，而这种属性就是impress.js效果的依赖源。&lt;br /&gt;
这些属性定义了每一个页面的位置信息，这个位置是相对于你的浏览器主页面而言的，主页面的中心位置被定义为原点，所有的属性如下：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;data-x: 距离原点的横向偏移量，像素值&lt;br /&gt;
data-y: 距离纵向的纵向偏移量，像素值&lt;br /&gt;
data-rotate-x: 相对当页中心点的x轴旋转偏移量，角度&lt;br /&gt;
data-rotate-y: 相对当页中心点的y轴旋转偏移量，角度&lt;br /&gt;
data-rotate-z: 相对当页中心点的z轴旋转偏移量，角度&lt;br /&gt;
data-scale: 相对于主体页面的比例，比例值  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有了这些属性，我们便可以开始设计了，具体的设计就是在上面这些块中加入属性值，这里说的已经足够清晰，自己尝试一下就可以了。  &lt;/p&gt;
&lt;h3&gt;4.工作&lt;/h3&gt;
&lt;p&gt;完成了页面设计之后便可以开始开始演示了，在这之前，我们需要链接impress.js并启动它，在你的impress块后加入两行代码即可：  &lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;id&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;impress&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    ......
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;script&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;type&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;src&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;js/impress.js&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;script&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;script&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;impress&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;().&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;init&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;();&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;script&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;5.其他技巧&lt;/h3&gt;
&lt;p&gt;不知道是否只有我有这个需求，就像第一个示例一样，将演示页面分类，一块一块展示，展示完一块可以选择直接返回主页面，这个需求可以直接通过以下方式实现：  &lt;/p&gt;
&lt;p&gt;观察启动后的标题栏，我们可以知道每一个页面的url是这么表示的：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(主页面url)/#/演示页面id  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如对于第一个实例的首页，url是：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;http://proj.dtysky.moe/#/first-page  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以可以在某个演示页面中插入一个超链接：&lt;/p&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;step&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    ......
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;return-first&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;a&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;href&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;#/first-page&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;b&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;Return / 返回页首&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;b&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;a&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;class为&lt;strong&gt;return-first&lt;/strong&gt;的块中有一个链接，这个链接指向了首页。  &lt;/p&gt;
&lt;h2&gt;3.示例代码&lt;/h2&gt;
&lt;p&gt;这里提供一个简洁版本的模板，除了主要内容之外一切皆无：&lt;br /&gt;
将三个文件放入一个文件夹即可。  &lt;/p&gt;
&lt;h3&gt;html&lt;/h3&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;cp&amp;quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;html&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;lang&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;head&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;meta&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;charset&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;title&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;Test&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;title&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;link&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;rel&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;href&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;style.css&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;head&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;body&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;id&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;impress&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;no-support-message&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
        Your browser doesn&amp;#39;t support impress.js.It can&amp;#39;t phones.&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;br&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
        你的浏览器不支持impress.js.请更换，它不支持手机。
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;id&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;first-page&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;step&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-x&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-y&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;首页&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;br&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;点击你想进入的页面或者按下 &amp;quot;←&amp;quot;、&amp;quot;→&amp;quot;或空格键.&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;p&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;step&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-x&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;-700&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-y&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;-200&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-scale&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;0.6&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-rotate-z&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;-45&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;第一块-第一页&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;step&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-x&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;-1100&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-y&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-scale&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;0.4&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-rotate-z&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;-135&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;第一块-第二页&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;step&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-x&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;-1300&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-y&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;-100&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-scale&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;0.2&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-rotate-z&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;-45&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;第一块-第三页&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;return-first&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;a&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;href&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;#/first-page&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;b&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;Return / 返回页首&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;b&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;a&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;step&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-x&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;800&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-y&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;-300&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-scale&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;0.6&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-rotate-z&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;45&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;第二块-第一页&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;step&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-x&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;1150&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-y&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-scale&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;0.4&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-rotate-z&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;135&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;第二块-第二页&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;step&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-x&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;1400&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-y&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;-200&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-scale&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;0.2&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;data-rotate-z&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;45&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;第二块-第三页&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;class&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;return-first&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;a&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;href&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;#/first-page&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;b&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;Return / 返回页首&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;b&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;a&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;div&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;script&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;type&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;na&amp;quot;&gt;src&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;=&lt;/span&gt;&lt;span class=&amp;quot;s&amp;quot;&gt;&amp;quot;impress.js&amp;quot;&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;script&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;script&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;impress&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;().&lt;/span&gt;&lt;span class=&amp;quot;nx&amp;quot;&gt;init&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;();&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;script&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;body&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;html&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;css&lt;/h3&gt;
&lt;div class=&amp;quot;highlight&amp;quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h1&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;,&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h2&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;,&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h3&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;,&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h4&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;,&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h5&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;,&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;h6&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;,&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;a&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;,&lt;/span&gt;&lt;span class=&amp;quot;nt&amp;quot;&gt;p&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt;
&lt;span class=&amp;quot;nb&amp;quot;&gt;font-family&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;s2&amp;quot;&gt;&amp;quot;Microsoft YaHei&amp;quot;&lt;/span&gt; &lt;span class=&amp;quot;o&amp;quot;&gt;!&lt;/span&gt; &lt;span class=&amp;quot;n&amp;quot;&gt;important&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;span class=&amp;quot;nt&amp;quot;&gt;body&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt;
    &lt;span class=&amp;quot;nb&amp;quot;&gt;margin&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;m&amp;quot;&gt;0px&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;span class=&amp;quot;nc&amp;quot;&gt;.return-first&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt;
    &lt;span class=&amp;quot;nb&amp;quot;&gt;margin-top&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;m&amp;quot;&gt;50px&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;span class=&amp;quot;nc&amp;quot;&gt;.return-first&lt;/span&gt; &lt;span class=&amp;quot;nt&amp;quot;&gt;a&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt;
    &lt;span class=&amp;quot;nb&amp;quot;&gt;font-size&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;m&amp;quot;&gt;20px&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;nb&amp;quot;&gt;text-decoration&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;none&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;nb&amp;quot;&gt;color&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;m&amp;quot;&gt;#000000&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;span class=&amp;quot;nc&amp;quot;&gt;.return-first&lt;/span&gt; &lt;span class=&amp;quot;nt&amp;quot;&gt;a&lt;/span&gt;&lt;span class=&amp;quot;nd&amp;quot;&gt;:hover&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt;
    &lt;span class=&amp;quot;nb&amp;quot;&gt;font-size&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;m&amp;quot;&gt;21px&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
    &lt;span class=&amp;quot;nb&amp;quot;&gt;color&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt; &lt;span class=&amp;quot;m&amp;quot;&gt;#006688&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;span class=&amp;quot;nc&amp;quot;&gt;.step&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt; 
    &lt;span class=&amp;quot;nb&amp;quot;&gt;width&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;m&amp;quot;&gt;940px&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt; 
    &lt;span class=&amp;quot;nb&amp;quot;&gt;margin&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;m&amp;quot;&gt;0&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;auto&lt;/span&gt; &lt;span class=&amp;quot;m&amp;quot;&gt;24px&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;auto&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt; 
    &lt;span class=&amp;quot;nb&amp;quot;&gt;text-align&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;nb&amp;quot;&gt;center&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt; 
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;span class=&amp;quot;nc&amp;quot;&gt;.no-support-message&lt;/span&gt; &lt;span class=&amp;quot;p&amp;quot;&gt;{&lt;/span&gt; 
    &lt;span class=&amp;quot;nb&amp;quot;&gt;display&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;nb&amp;quot;&gt;none&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt; 
    &lt;span class=&amp;quot;nb&amp;quot;&gt;width&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;m&amp;quot;&gt;940px&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt; 
    &lt;span class=&amp;quot;nb&amp;quot;&gt;margin&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;m&amp;quot;&gt;0&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;auto&lt;/span&gt; &lt;span class=&amp;quot;m&amp;quot;&gt;24px&lt;/span&gt; &lt;span class=&amp;quot;nb&amp;quot;&gt;auto&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt; 
    &lt;span class=&amp;quot;nb&amp;quot;&gt;text-align&lt;/span&gt;&lt;span class=&amp;quot;o&amp;quot;&gt;:&lt;/span&gt;&lt;span class=&amp;quot;nb&amp;quot;&gt;center&lt;/span&gt;&lt;span class=&amp;quot;p&amp;quot;&gt;;&lt;/span&gt;
&lt;span class=&amp;quot;p&amp;quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;js&lt;/h3&gt;
&lt;p&gt;自备impress.js&lt;/p&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">dtysky</dc:creator>
<pubDate>Tuesday, 05 May 2015 02:01:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2015.05.05 02:01:article/Skill-2015_05_05_a</guid>
<category>impress.js</category>
<category>PPT</category>
</item>

<item>
<title>【诗】我是一个行者</title>
<link>http://dtysky.moe/article/Art-我是一个行者</link>
<description>&lt;div class=&amp;quot;text-center&amp;quot; style=&amp;quot;color:rgb(255,255,255);background-color:rgb(80,80,80)&amp;quot;&gt;

&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;

&lt;h2&gt;我是一个行者&lt;/h2&gt;
&lt;br&gt;&lt;br&gt;


孤独是一种浪漫。&lt;/br&gt;
就像一场旅行。&lt;/br&gt;
我，是一个行者。&lt;/br&gt;
路过了一片花田。&lt;/br&gt;
花儿望着空中的太阳。&lt;/br&gt;
静静地承受着我的目光。&lt;/br&gt;
似乎，要为我开放天堂。&lt;/br&gt;
&lt;/br&gt;
我是一个孤独的行者。&lt;/br&gt;
下一个方向，是大海。&lt;/br&gt;
大海很遥远。&lt;/br&gt;
只有不停拖动着脚步。&lt;/br&gt;
风在身边吹拂。&lt;/br&gt;
它撕扯着我破烂的躯壳。&lt;/br&gt;
&lt;/br&gt;
我是一个走向大海的行者。&lt;/br&gt;
没有人知道我的期待。&lt;/br&gt;
虚无要将我吞噬。&lt;/br&gt;
只有将微笑当作唯一的信念。&lt;/br&gt;
麻木。&lt;/br&gt;
我不去反驳，只是微笑。&lt;/br&gt;
麻木的微笑，也同样是微笑。&lt;/br&gt;
&lt;/br&gt;
我是一个微笑着的行者。&lt;/br&gt;
终于到达了大海。&lt;/br&gt;
它接纳了我变为粉末的身躯。&lt;/br&gt;
化其为养料，滋养着下一次花儿的盛放。&lt;/br&gt;
啊，如此就好。&lt;/br&gt;
我只是一个行者。&lt;/br&gt;
即使身躯消失，灵魂也只能前行。&lt;/br&gt;
&lt;/br&gt;
我是一个行者。&lt;/br&gt;
再说一遍。&lt;/br&gt;
我是一个行者。&lt;/br&gt;
我无法到达天堂，&lt;/br&gt;
我只能一直前行。&lt;/br&gt;
&lt;/br&gt;
我，是一个行者。&lt;/br&gt;
一个孤独的行者。&lt;/br&gt;
永远，孤独的行者。&lt;/br&gt;

&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;

&lt;/div&gt;</description>
<dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">命月天宇</dc:creator>
<pubDate>Sunday, 18 May 2014 21:44:00 -00:00</pubDate>
<guid>tag:http://dtysky.moe,2014.05.18 21:44:article/Art-我是一个行者</guid>
<category>诗</category>
<category>原创</category>
<category>行者</category>
<category>孤独</category>
</item>

</channel>
</rss>